
#n/** Configure pins as #n #t#t #t* Analog #n #t#t #t* Input #n #t#t #t* Output#n #t#t #t* EVENT_OUT#n #t#t #t* EXTI
*/
static void MX_GPIO_Init(void)
{
#n
#tGPIO_InitTypeDef GPIO_InitStruct;
#n#t/* GPIO Ports Clock Enable */
#t__HAL_RCC_GPIOA_CLK_ENABLE();
#t__HAL_RCC_GPIOE_CLK_ENABLE();
#n#t/*Configure GPIO pin Output Level */
#tHAL_GPIO_WritePin(GPIOA, Manch_Tx_Pin|Hardware_Trigger_Pin, GPIO_PIN_RESET);
#n#t/*Configure GPIO pin Output Level */
#tHAL_GPIO_WritePin(GPIOE, LED_Blue_Pin|LED_Red_Pin|LED_Orange_Pin|LED_Green_Pin #n#t#t#t#t#t#t#t#t#t#t#t#t#t|LED_BLUE_Pin, GPIO_PIN_RESET);
#n#t/*Configure GPIO pin : USER_BUTTON_Pin */
#tGPIO_InitStruct.Pin = USER_BUTTON_Pin;
#tGPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
#tGPIO_InitStruct.Pull = GPIO_PULLDOWN;
#tHAL_GPIO_Init(USER_BUTTON_GPIO_Port, &GPIO_InitStruct);
#n#t/*Configure GPIO pins : Manch_Tx_Pin Hardware_Trigger_Pin */
#tGPIO_InitStruct.Pin = Manch_Tx_Pin|Hardware_Trigger_Pin;
#tGPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
#tGPIO_InitStruct.Pull = GPIO_PULLDOWN;
#tGPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
#tHAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
#n#t/*Configure GPIO pins : LED_Blue_Pin LED_Red_Pin LED_Orange_Pin LED_Green_Pin #n#t#t#t#t#t#t#t#t#t#t#t#t#t LED_BLUE_Pin */
#tGPIO_InitStruct.Pin = LED_Blue_Pin|LED_Red_Pin|LED_Orange_Pin|LED_Green_Pin #n#t#t#t#t#t#t#t#t#t#t#t#t#t|LED_BLUE_Pin;
#tGPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
#tGPIO_InitStruct.Pull = GPIO_PULLDOWN;
#tGPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
#tHAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
#n#t/* EXTI interrupt init*/
#tHAL_NVIC_SetPriority(EXTI0_IRQn, 0, 0);
#tHAL_NVIC_EnableIRQ(EXTI0_IRQn);#n#n
}
#n
