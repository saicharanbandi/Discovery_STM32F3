ARM GAS  /tmp/ccs28XJK.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.Buffercmp,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	Buffercmp:
  25              	.LFB129:
  26              		.file 1 "Src/main.c"
   1:Src/main.c    **** /**
   2:Src/main.c    ****   ******************************************************************************
   3:Src/main.c    ****   * File Name          : main.c
   4:Src/main.c    ****   * Description        : Main program body
   5:Src/main.c    ****   ******************************************************************************
   6:Src/main.c    ****   ** This notice applies to any and all portions of this file
   7:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
   8:Src/main.c    ****   * USER CODE END. Other portions of this file, whether 
   9:Src/main.c    ****   * inserted by the user or by software development tools
  10:Src/main.c    ****   * are owned by their respective copyright owners.
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * COPYRIGHT(c) 2017 STMicroelectronics
  13:Src/main.c    ****   *
  14:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without modification,
  15:Src/main.c    ****   * are permitted provided that the following conditions are met:
  16:Src/main.c    ****   *   1. Redistributions of source code must retain the above copyright notice,
  17:Src/main.c    ****   *      this list of conditions and the following disclaimer.
  18:Src/main.c    ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  19:Src/main.c    ****   *      this list of conditions and the following disclaimer in the documentation
  20:Src/main.c    ****   *      and/or other materials provided with the distribution.
  21:Src/main.c    ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  22:Src/main.c    ****   *      may be used to endorse or promote products derived from this software
  23:Src/main.c    ****   *      without specific prior written permission.
  24:Src/main.c    ****   *
  25:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  26:Src/main.c    ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  27:Src/main.c    ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  28:Src/main.c    ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  29:Src/main.c    ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  30:Src/main.c    ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  31:Src/main.c    ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  32:Src/main.c    ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
ARM GAS  /tmp/ccs28XJK.s 			page 2


  33:Src/main.c    ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  34:Src/main.c    ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  35:Src/main.c    ****   *
  36:Src/main.c    ****   ******************************************************************************
  37:Src/main.c    ****   */
  38:Src/main.c    **** 
  39:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  40:Src/main.c    **** #include "main.h"
  41:Src/main.c    **** #include "stm32f3xx_hal.h"
  42:Src/main.c    **** 
  43:Src/main.c    **** /* USER CODE BEGIN Includes */
  44:Src/main.c    **** 
  45:Src/main.c    **** /* USER CODE END Includes */
  46:Src/main.c    **** 
  47:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  48:Src/main.c    **** UART_HandleTypeDef huart2;
  49:Src/main.c    **** 
  50:Src/main.c    **** /* USER CODE BEGIN PV */
  51:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  52:Src/main.c    **** __IO ITStatus UartReady = RESET;
  53:Src/main.c    **** __IO uint32_t Interrupt_Variable = 0;
  54:Src/main.c    **** /* Buffer used for transmission */
  55:Src/main.c    **** /* uint8_t aTxBuffer[] = " ****UART_TwoBoards communication based on DMA****  ****UART_TwoBoards co
  56:Src/main.c    **** uint8_t aTxBuffer[] = "R";
  57:Src/main.c    **** /* Buffer used for reception */
  58:Src/main.c    **** uint8_t aRxBuffer[RXBUFFERSIZE];
  59:Src/main.c    **** /* USER CODE END PV */
  60:Src/main.c    **** 
  61:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  62:Src/main.c    **** void SystemClock_Config(void);
  63:Src/main.c    **** static void MX_GPIO_Init(void);
  64:Src/main.c    **** static void MX_USART2_UART_Init(void);
  65:Src/main.c    **** 
  66:Src/main.c    **** /* USER CODE BEGIN PFP */
  67:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  68:Src/main.c    **** static uint16_t Buffercmp(uint8_t* pBuffer1, uint8_t* pBuffer2, uint16_t BufferLength);
  69:Src/main.c    **** /* USER CODE END PFP */
  70:Src/main.c    **** 
  71:Src/main.c    **** /* USER CODE BEGIN 0 */
  72:Src/main.c    **** 
  73:Src/main.c    **** /* USER CODE END 0 */
  74:Src/main.c    **** 
  75:Src/main.c    **** int main(void)
  76:Src/main.c    **** {
  77:Src/main.c    **** 
  78:Src/main.c    ****   /* USER CODE BEGIN 1 */
  79:Src/main.c    **** 
  80:Src/main.c    ****   /* USER CODE END 1 */
  81:Src/main.c    **** 
  82:Src/main.c    ****   /* MCU Configuration----------------------------------------------------------*/
  83:Src/main.c    **** 
  84:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  85:Src/main.c    ****   HAL_Init();
  86:Src/main.c    **** 
  87:Src/main.c    ****   /* USER CODE BEGIN Init */
  88:Src/main.c    **** 
  89:Src/main.c    ****   /* USER CODE END Init */
ARM GAS  /tmp/ccs28XJK.s 			page 3


  90:Src/main.c    **** 
  91:Src/main.c    ****   /* Configure the system clock */
  92:Src/main.c    ****   SystemClock_Config();
  93:Src/main.c    **** 
  94:Src/main.c    ****   /* USER CODE BEGIN SysInit */
  95:Src/main.c    **** 
  96:Src/main.c    ****   /* USER CODE END SysInit */
  97:Src/main.c    **** 
  98:Src/main.c    ****   /* Initialize all configured peripherals */
  99:Src/main.c    ****   MX_GPIO_Init();
 100:Src/main.c    ****   MX_USART2_UART_Init();
 101:Src/main.c    **** 
 102:Src/main.c    ****   /* USER CODE BEGIN 2 */
 103:Src/main.c    ****   while (HAL_GPIO_ReadPin(INTERRUPT_Pin_GPIO_Port, INTERRUPT_Pin_Pin) == GPIO_PIN_RESET)
 104:Src/main.c    ****     {
 105:Src/main.c    ****       HAL_GPIO_TogglePin(LD4_Blue_GPIO_Port, LD4_Blue_Pin);
 106:Src/main.c    ****       HAL_Delay(250);
 107:Src/main.c    ****     }
 108:Src/main.c    **** 
 109:Src/main.c    ****   while (Interrupt_Variable == 0)
 110:Src/main.c    ****     {
 111:Src/main.c    ****     }
 112:Src/main.c    ****   
 113:Src/main.c    ****   
 114:Src/main.c    ****   if(HAL_UART_Receive_DMA(&huart2, (uint8_t *)aRxBuffer, RXBUFFERSIZE) != HAL_OK)
 115:Src/main.c    ****     {
 116:Src/main.c    ****       _Error_Handler(__FILE__,__LINE__);
 117:Src/main.c    ****     }
 118:Src/main.c    **** 
 119:Src/main.c    ****   HAL_GPIO_WritePin(LD9_BLUE_GPIO_Port, LD9_BLUE_Pin, GPIO_PIN_SET);
 120:Src/main.c    ****   while (UartReady != SET)
 121:Src/main.c    ****     {
 122:Src/main.c    ****     }
 123:Src/main.c    **** 
 124:Src/main.c    ****   UartReady = RESET;
 125:Src/main.c    **** 
 126:Src/main.c    ****   if(Buffercmp( (uint8_t*)aTxBuffer, (uint8_t*)aRxBuffer, RXBUFFERSIZE))
 127:Src/main.c    ****     {
 128:Src/main.c    ****       _Error_Handler(__FILE__,__LINE__);
 129:Src/main.c    ****     }
 130:Src/main.c    ****      
 131:Src/main.c    ****   /* USER CODE END 2 */
 132:Src/main.c    **** 
 133:Src/main.c    ****   /* Infinite loop */
 134:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 135:Src/main.c    ****   while (1)
 136:Src/main.c    ****     {
 137:Src/main.c    ****   /* USER CODE END WHILE */
 138:Src/main.c    **** 
 139:Src/main.c    ****   /* USER CODE BEGIN 3 */
 140:Src/main.c    **** 
 141:Src/main.c    ****     }
 142:Src/main.c    ****   /* USER CODE END 3 */
 143:Src/main.c    **** 
 144:Src/main.c    **** }
 145:Src/main.c    **** 
 146:Src/main.c    **** /** System Clock Configuration
ARM GAS  /tmp/ccs28XJK.s 			page 4


 147:Src/main.c    **** */
 148:Src/main.c    **** void SystemClock_Config(void)
 149:Src/main.c    **** {
 150:Src/main.c    **** 
 151:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct;
 152:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 153:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit;
 154:Src/main.c    **** 
 155:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 156:Src/main.c    ****     */
 157:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 158:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 159:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 160:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 161:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 162:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL14;
 163:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 164:Src/main.c    ****   {
 165:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 166:Src/main.c    ****   }
 167:Src/main.c    **** 
 168:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 169:Src/main.c    ****     */
 170:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 171:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 172:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 173:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 174:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 175:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 176:Src/main.c    **** 
 177:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 178:Src/main.c    ****   {
 179:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 180:Src/main.c    ****   }
 181:Src/main.c    **** 
 182:Src/main.c    ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART2;
 183:Src/main.c    ****   PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 184:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 185:Src/main.c    ****   {
 186:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 187:Src/main.c    ****   }
 188:Src/main.c    **** 
 189:Src/main.c    ****     /**Configure the Systick interrupt time 
 190:Src/main.c    ****     */
 191:Src/main.c    ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 192:Src/main.c    **** 
 193:Src/main.c    ****     /**Configure the Systick 
 194:Src/main.c    ****     */
 195:Src/main.c    ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 196:Src/main.c    **** 
 197:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
 198:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
 199:Src/main.c    **** }
 200:Src/main.c    **** 
 201:Src/main.c    **** /* USART2 init function */
 202:Src/main.c    **** static void MX_USART2_UART_Init(void)
 203:Src/main.c    **** {
ARM GAS  /tmp/ccs28XJK.s 			page 5


 204:Src/main.c    **** 
 205:Src/main.c    ****   huart2.Instance = USART2;
 206:Src/main.c    ****   huart2.Init.BaudRate = 9600;
 207:Src/main.c    ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 208:Src/main.c    ****   huart2.Init.StopBits = UART_STOPBITS_1;
 209:Src/main.c    ****   huart2.Init.Parity = UART_PARITY_NONE;
 210:Src/main.c    ****   huart2.Init.Mode = UART_MODE_TX_RX;
 211:Src/main.c    ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 212:Src/main.c    ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 213:Src/main.c    ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 214:Src/main.c    ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 215:Src/main.c    ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 216:Src/main.c    ****   {
 217:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 218:Src/main.c    ****   }
 219:Src/main.c    **** 
 220:Src/main.c    **** }
 221:Src/main.c    **** 
 222:Src/main.c    **** /** Configure pins as 
 223:Src/main.c    ****         * Analog 
 224:Src/main.c    ****         * Input 
 225:Src/main.c    ****         * Output
 226:Src/main.c    ****         * EVENT_OUT
 227:Src/main.c    ****         * EXTI
 228:Src/main.c    **** */
 229:Src/main.c    **** static void MX_GPIO_Init(void)
 230:Src/main.c    **** {
 231:Src/main.c    **** 
 232:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct;
 233:Src/main.c    **** 
 234:Src/main.c    ****   /* GPIO Ports Clock Enable */
 235:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 236:Src/main.c    ****   __HAL_RCC_GPIOE_CLK_ENABLE();
 237:Src/main.c    **** 
 238:Src/main.c    ****   /*Configure GPIO pin Output Level */
 239:Src/main.c    ****   HAL_GPIO_WritePin(GPIOE, LD4_Blue_Pin|LD3_Red_Pin|LD5_Orange_Pin|LD7_Green_Pin 
 240:Src/main.c    ****                           |LD9_BLUE_Pin, GPIO_PIN_RESET);
 241:Src/main.c    **** 
 242:Src/main.c    ****   /*Configure GPIO pins : USER_BUTTON_Pin INTERRUPT_Pin_Pin */
 243:Src/main.c    ****   GPIO_InitStruct.Pin = USER_BUTTON_Pin|INTERRUPT_Pin_Pin;
 244:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 245:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 246:Src/main.c    ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 247:Src/main.c    **** 
 248:Src/main.c    ****   /*Configure GPIO pins : LD4_Blue_Pin LD3_Red_Pin LD5_Orange_Pin LD7_Green_Pin 
 249:Src/main.c    ****                            LD9_BLUE_Pin */
 250:Src/main.c    ****   GPIO_InitStruct.Pin = LD4_Blue_Pin|LD3_Red_Pin|LD5_Orange_Pin|LD7_Green_Pin 
 251:Src/main.c    ****                           |LD9_BLUE_Pin;
 252:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 253:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 254:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 255:Src/main.c    ****   HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 256:Src/main.c    **** 
 257:Src/main.c    ****   /* EXTI interrupt init*/
 258:Src/main.c    ****   HAL_NVIC_SetPriority(EXTI9_5_IRQn, 0, 0);
 259:Src/main.c    ****   HAL_NVIC_EnableIRQ(EXTI9_5_IRQn);
 260:Src/main.c    **** 
ARM GAS  /tmp/ccs28XJK.s 			page 6


 261:Src/main.c    **** }
 262:Src/main.c    **** 
 263:Src/main.c    **** /* USER CODE BEGIN 4 */
 264:Src/main.c    **** /* Rx Transfer completed callback */
 265:Src/main.c    **** void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart2)
 266:Src/main.c    **** {
 267:Src/main.c    ****   UartReady = SET;
 268:Src/main.c    **** 
 269:Src/main.c    ****   HAL_GPIO_WritePin(LD7_Green_GPIO_Port, LD7_Green_Pin, GPIO_PIN_SET);
 270:Src/main.c    **** }
 271:Src/main.c    **** 
 272:Src/main.c    **** /* UART error callbacks */
 273:Src/main.c    **** void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart2)
 274:Src/main.c    **** {
 275:Src/main.c    ****   HAL_GPIO_WritePin(LD3_Red_GPIO_Port, LD3_Red_Pin, GPIO_PIN_SET);
 276:Src/main.c    **** }
 277:Src/main.c    **** 
 278:Src/main.c    **** /* Compare two buffers */
 279:Src/main.c    **** static uint16_t Buffercmp(uint8_t* pBuffer1, uint8_t* pBuffer2, uint16_t BufferLength)
 280:Src/main.c    **** {
  27              		.loc 1 280 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
 281:Src/main.c    ****   while (BufferLength--)
  33              		.loc 1 281 0
  34 0000 531E     		subs	r3, r2, #1
  35 0002 9BB2     		uxth	r3, r3
  36              	.LVL1:
  37 0004 82B1     		cbz	r2, .L10
 280:Src/main.c    ****   while (BufferLength--)
  38              		.loc 1 280 0
  39 0006 10B4     		push	{r4}
  40              	.LCFI0:
  41              		.cfi_def_cfa_offset 4
  42              		.cfi_offset 4, -4
  43              	.L4:
 282:Src/main.c    ****     {
 283:Src/main.c    ****       if ((*pBuffer1 != *pBuffer2))
  44              		.loc 1 283 0
  45 0008 0478     		ldrb	r4, [r0]	@ zero_extendqisi2
  46 000a 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
  47 000c 9442     		cmp	r4, r2
  48 000e 07D1     		bne	.L3
 284:Src/main.c    **** 	{
 285:Src/main.c    **** 	  return BufferLength;
 286:Src/main.c    **** 	}
 287:Src/main.c    **** 	pBuffer1++;
  49              		.loc 1 287 0
  50 0010 0130     		adds	r0, r0, #1
  51              	.LVL2:
 288:Src/main.c    **** 	pBuffer2++;
  52              		.loc 1 288 0
  53 0012 0131     		adds	r1, r1, #1
  54              	.LVL3:
ARM GAS  /tmp/ccs28XJK.s 			page 7


 281:Src/main.c    ****     {
  55              		.loc 1 281 0
  56 0014 1A46     		mov	r2, r3
  57 0016 013B     		subs	r3, r3, #1
  58              	.LVL4:
  59 0018 9BB2     		uxth	r3, r3
  60              	.LVL5:
  61 001a 002A     		cmp	r2, #0
  62 001c F4D1     		bne	.L4
 289:Src/main.c    **** 
 290:Src/main.c    ****     }
 291:Src/main.c    **** 
 292:Src/main.c    ****     return 0;
  63              		.loc 1 292 0
  64 001e 1346     		mov	r3, r2
  65              	.LVL6:
  66              	.L3:
 293:Src/main.c    **** 
 294:Src/main.c    **** }
  67              		.loc 1 294 0
  68 0020 1846     		mov	r0, r3
  69              	.LVL7:
  70 0022 5DF8044B 		ldr	r4, [sp], #4
  71              	.LCFI1:
  72              		.cfi_restore 4
  73              		.cfi_def_cfa_offset 0
  74 0026 7047     		bx	lr
  75              	.LVL8:
  76              	.L10:
  77 0028 1046     		mov	r0, r2
  78              	.LVL9:
  79 002a 7047     		bx	lr
  80              		.cfi_endproc
  81              	.LFE129:
  83              		.section	.text.MX_GPIO_Init,"ax",%progbits
  84              		.align	1
  85              		.syntax unified
  86              		.thumb
  87              		.thumb_func
  88              		.fpu fpv4-sp-d16
  90              	MX_GPIO_Init:
  91              	.LFB126:
 230:Src/main.c    **** 
  92              		.loc 1 230 0
  93              		.cfi_startproc
  94              		@ args = 0, pretend = 0, frame = 32
  95              		@ frame_needed = 0, uses_anonymous_args = 0
  96 0000 30B5     		push	{r4, r5, lr}
  97              	.LCFI2:
  98              		.cfi_def_cfa_offset 12
  99              		.cfi_offset 4, -12
 100              		.cfi_offset 5, -8
 101              		.cfi_offset 14, -4
 102 0002 89B0     		sub	sp, sp, #36
 103              	.LCFI3:
 104              		.cfi_def_cfa_offset 48
 105              	.LBB2:
ARM GAS  /tmp/ccs28XJK.s 			page 8


 235:Src/main.c    ****   __HAL_RCC_GPIOE_CLK_ENABLE();
 106              		.loc 1 235 0
 107 0004 1D4B     		ldr	r3, .L13
 108 0006 5A69     		ldr	r2, [r3, #20]
 109 0008 42F40032 		orr	r2, r2, #131072
 110 000c 5A61     		str	r2, [r3, #20]
 111 000e 5A69     		ldr	r2, [r3, #20]
 112 0010 02F40032 		and	r2, r2, #131072
 113 0014 0192     		str	r2, [sp, #4]
 114 0016 019A     		ldr	r2, [sp, #4]
 115              	.LBE2:
 116              	.LBB3:
 236:Src/main.c    **** 
 117              		.loc 1 236 0
 118 0018 5A69     		ldr	r2, [r3, #20]
 119 001a 42F40012 		orr	r2, r2, #2097152
 120 001e 5A61     		str	r2, [r3, #20]
 121 0020 5B69     		ldr	r3, [r3, #20]
 122 0022 03F40013 		and	r3, r3, #2097152
 123 0026 0293     		str	r3, [sp, #8]
 124 0028 029B     		ldr	r3, [sp, #8]
 125              	.LBE3:
 239:Src/main.c    ****                           |LD9_BLUE_Pin, GPIO_PIN_RESET);
 126              		.loc 1 239 0
 127 002a 154D     		ldr	r5, .L13+4
 128 002c 0022     		movs	r2, #0
 129 002e 4FF4F851 		mov	r1, #7936
 130 0032 2846     		mov	r0, r5
 131 0034 FFF7FEFF 		bl	HAL_GPIO_WritePin
 132              	.LVL10:
 243:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 133              		.loc 1 243 0
 134 0038 8123     		movs	r3, #129
 135 003a 0393     		str	r3, [sp, #12]
 244:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 136              		.loc 1 244 0
 137 003c 114B     		ldr	r3, .L13+8
 138 003e 0493     		str	r3, [sp, #16]
 245:Src/main.c    ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 139              		.loc 1 245 0
 140 0040 0224     		movs	r4, #2
 141 0042 0594     		str	r4, [sp, #20]
 246:Src/main.c    **** 
 142              		.loc 1 246 0
 143 0044 03A9     		add	r1, sp, #12
 144 0046 4FF09040 		mov	r0, #1207959552
 145 004a FFF7FEFF 		bl	HAL_GPIO_Init
 146              	.LVL11:
 250:Src/main.c    ****                           |LD9_BLUE_Pin;
 147              		.loc 1 250 0
 148 004e 4FF4F853 		mov	r3, #7936
 149 0052 0393     		str	r3, [sp, #12]
 252:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 150              		.loc 1 252 0
 151 0054 0123     		movs	r3, #1
 152 0056 0493     		str	r3, [sp, #16]
 253:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
ARM GAS  /tmp/ccs28XJK.s 			page 9


 153              		.loc 1 253 0
 154 0058 0594     		str	r4, [sp, #20]
 254:Src/main.c    ****   HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 155              		.loc 1 254 0
 156 005a 0024     		movs	r4, #0
 157 005c 0694     		str	r4, [sp, #24]
 255:Src/main.c    **** 
 158              		.loc 1 255 0
 159 005e 03A9     		add	r1, sp, #12
 160 0060 2846     		mov	r0, r5
 161 0062 FFF7FEFF 		bl	HAL_GPIO_Init
 162              	.LVL12:
 258:Src/main.c    ****   HAL_NVIC_EnableIRQ(EXTI9_5_IRQn);
 163              		.loc 1 258 0
 164 0066 2246     		mov	r2, r4
 165 0068 2146     		mov	r1, r4
 166 006a 1720     		movs	r0, #23
 167 006c FFF7FEFF 		bl	HAL_NVIC_SetPriority
 168              	.LVL13:
 259:Src/main.c    **** 
 169              		.loc 1 259 0
 170 0070 1720     		movs	r0, #23
 171 0072 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 172              	.LVL14:
 261:Src/main.c    **** 
 173              		.loc 1 261 0
 174 0076 09B0     		add	sp, sp, #36
 175              	.LCFI4:
 176              		.cfi_def_cfa_offset 12
 177              		@ sp needed
 178 0078 30BD     		pop	{r4, r5, pc}
 179              	.L14:
 180 007a 00BF     		.align	2
 181              	.L13:
 182 007c 00100240 		.word	1073876992
 183 0080 00100048 		.word	1207963648
 184 0084 00001110 		.word	269549568
 185              		.cfi_endproc
 186              	.LFE126:
 188              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 189              		.align	1
 190              		.global	HAL_UART_RxCpltCallback
 191              		.syntax unified
 192              		.thumb
 193              		.thumb_func
 194              		.fpu fpv4-sp-d16
 196              	HAL_UART_RxCpltCallback:
 197              	.LFB127:
 266:Src/main.c    ****   UartReady = SET;
 198              		.loc 1 266 0
 199              		.cfi_startproc
 200              		@ args = 0, pretend = 0, frame = 0
 201              		@ frame_needed = 0, uses_anonymous_args = 0
 202              	.LVL15:
 203 0000 08B5     		push	{r3, lr}
 204              	.LCFI5:
 205              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccs28XJK.s 			page 10


 206              		.cfi_offset 3, -8
 207              		.cfi_offset 14, -4
 267:Src/main.c    **** 
 208              		.loc 1 267 0
 209 0002 0122     		movs	r2, #1
 210 0004 034B     		ldr	r3, .L17
 211 0006 1A70     		strb	r2, [r3]
 269:Src/main.c    **** }
 212              		.loc 1 269 0
 213 0008 4FF40061 		mov	r1, #2048
 214 000c 0248     		ldr	r0, .L17+4
 215              	.LVL16:
 216 000e FFF7FEFF 		bl	HAL_GPIO_WritePin
 217              	.LVL17:
 218 0012 08BD     		pop	{r3, pc}
 219              	.L18:
 220              		.align	2
 221              	.L17:
 222 0014 00000000 		.word	.LANCHOR0
 223 0018 00100048 		.word	1207963648
 224              		.cfi_endproc
 225              	.LFE127:
 227              		.section	.text.HAL_UART_ErrorCallback,"ax",%progbits
 228              		.align	1
 229              		.global	HAL_UART_ErrorCallback
 230              		.syntax unified
 231              		.thumb
 232              		.thumb_func
 233              		.fpu fpv4-sp-d16
 235              	HAL_UART_ErrorCallback:
 236              	.LFB128:
 274:Src/main.c    ****   HAL_GPIO_WritePin(LD3_Red_GPIO_Port, LD3_Red_Pin, GPIO_PIN_SET);
 237              		.loc 1 274 0
 238              		.cfi_startproc
 239              		@ args = 0, pretend = 0, frame = 0
 240              		@ frame_needed = 0, uses_anonymous_args = 0
 241              	.LVL18:
 242 0000 08B5     		push	{r3, lr}
 243              	.LCFI6:
 244              		.cfi_def_cfa_offset 8
 245              		.cfi_offset 3, -8
 246              		.cfi_offset 14, -4
 275:Src/main.c    **** }
 247              		.loc 1 275 0
 248 0002 0122     		movs	r2, #1
 249 0004 4FF40071 		mov	r1, #512
 250 0008 0148     		ldr	r0, .L21
 251              	.LVL19:
 252 000a FFF7FEFF 		bl	HAL_GPIO_WritePin
 253              	.LVL20:
 254 000e 08BD     		pop	{r3, pc}
 255              	.L22:
 256              		.align	2
 257              	.L21:
 258 0010 00100048 		.word	1207963648
 259              		.cfi_endproc
 260              	.LFE128:
ARM GAS  /tmp/ccs28XJK.s 			page 11


 262              		.section	.text._Error_Handler,"ax",%progbits
 263              		.align	1
 264              		.global	_Error_Handler
 265              		.syntax unified
 266              		.thumb
 267              		.thumb_func
 268              		.fpu fpv4-sp-d16
 270              	_Error_Handler:
 271              	.LFB130:
 295:Src/main.c    ****       
 296:Src/main.c    **** 
 297:Src/main.c    **** 
 298:Src/main.c    **** /* USER CODE END 4 */
 299:Src/main.c    **** 
 300:Src/main.c    **** /**
 301:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 302:Src/main.c    ****   * @param  None
 303:Src/main.c    ****   * @retval None
 304:Src/main.c    ****   */
 305:Src/main.c    **** void _Error_Handler(char * file, int line)
 306:Src/main.c    **** {
 272              		.loc 1 306 0
 273              		.cfi_startproc
 274              		@ Volatile: function does not return.
 275              		@ args = 0, pretend = 0, frame = 0
 276              		@ frame_needed = 0, uses_anonymous_args = 0
 277              	.LVL21:
 278 0000 08B5     		push	{r3, lr}
 279              	.LCFI7:
 280              		.cfi_def_cfa_offset 8
 281              		.cfi_offset 3, -8
 282              		.cfi_offset 14, -4
 307:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 308:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 309:Src/main.c    ****   HAL_GPIO_WritePin(LD5_Orange_GPIO_Port, LD5_Orange_Pin, GPIO_PIN_SET);
 283              		.loc 1 309 0
 284 0002 0122     		movs	r2, #1
 285 0004 4FF48061 		mov	r1, #1024
 286              	.LVL22:
 287 0008 0148     		ldr	r0, .L26
 288              	.LVL23:
 289 000a FFF7FEFF 		bl	HAL_GPIO_WritePin
 290              	.LVL24:
 291              	.L24:
 292 000e FEE7     		b	.L24
 293              	.L27:
 294              		.align	2
 295              	.L26:
 296 0010 00100048 		.word	1207963648
 297              		.cfi_endproc
 298              	.LFE130:
 300              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 301              		.align	1
 302              		.syntax unified
 303              		.thumb
 304              		.thumb_func
 305              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccs28XJK.s 			page 12


 307              	MX_USART2_UART_Init:
 308              	.LFB125:
 203:Src/main.c    **** 
 309              		.loc 1 203 0
 310              		.cfi_startproc
 311              		@ args = 0, pretend = 0, frame = 0
 312              		@ frame_needed = 0, uses_anonymous_args = 0
 313 0000 08B5     		push	{r3, lr}
 314              	.LCFI8:
 315              		.cfi_def_cfa_offset 8
 316              		.cfi_offset 3, -8
 317              		.cfi_offset 14, -4
 205:Src/main.c    ****   huart2.Init.BaudRate = 9600;
 318              		.loc 1 205 0
 319 0002 0C48     		ldr	r0, .L32
 320 0004 0C4B     		ldr	r3, .L32+4
 321 0006 0360     		str	r3, [r0]
 206:Src/main.c    ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 322              		.loc 1 206 0
 323 0008 4FF41653 		mov	r3, #9600
 324 000c 4360     		str	r3, [r0, #4]
 207:Src/main.c    ****   huart2.Init.StopBits = UART_STOPBITS_1;
 325              		.loc 1 207 0
 326 000e 0023     		movs	r3, #0
 327 0010 8360     		str	r3, [r0, #8]
 208:Src/main.c    ****   huart2.Init.Parity = UART_PARITY_NONE;
 328              		.loc 1 208 0
 329 0012 C360     		str	r3, [r0, #12]
 209:Src/main.c    ****   huart2.Init.Mode = UART_MODE_TX_RX;
 330              		.loc 1 209 0
 331 0014 0361     		str	r3, [r0, #16]
 210:Src/main.c    ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 332              		.loc 1 210 0
 333 0016 0C22     		movs	r2, #12
 334 0018 4261     		str	r2, [r0, #20]
 211:Src/main.c    ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 335              		.loc 1 211 0
 336 001a 8361     		str	r3, [r0, #24]
 212:Src/main.c    ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 337              		.loc 1 212 0
 338 001c C361     		str	r3, [r0, #28]
 213:Src/main.c    ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 339              		.loc 1 213 0
 340 001e 0362     		str	r3, [r0, #32]
 214:Src/main.c    ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 341              		.loc 1 214 0
 342 0020 4362     		str	r3, [r0, #36]
 215:Src/main.c    ****   {
 343              		.loc 1 215 0
 344 0022 FFF7FEFF 		bl	HAL_UART_Init
 345              	.LVL25:
 346 0026 00B9     		cbnz	r0, .L31
 347 0028 08BD     		pop	{r3, pc}
 348              	.L31:
 217:Src/main.c    ****   }
 349              		.loc 1 217 0
 350 002a D921     		movs	r1, #217
ARM GAS  /tmp/ccs28XJK.s 			page 13


 351 002c 0348     		ldr	r0, .L32+8
 352 002e FFF7FEFF 		bl	_Error_Handler
 353              	.LVL26:
 354              	.L33:
 355 0032 00BF     		.align	2
 356              	.L32:
 357 0034 00000000 		.word	huart2
 358 0038 00440040 		.word	1073759232
 359 003c 00000000 		.word	.LC0
 360              		.cfi_endproc
 361              	.LFE125:
 363              		.section	.text.SystemClock_Config,"ax",%progbits
 364              		.align	1
 365              		.global	SystemClock_Config
 366              		.syntax unified
 367              		.thumb
 368              		.thumb_func
 369              		.fpu fpv4-sp-d16
 371              	SystemClock_Config:
 372              	.LFB124:
 149:Src/main.c    **** 
 373              		.loc 1 149 0
 374              		.cfi_startproc
 375              		@ args = 0, pretend = 0, frame = 120
 376              		@ frame_needed = 0, uses_anonymous_args = 0
 377 0000 00B5     		push	{lr}
 378              	.LCFI9:
 379              		.cfi_def_cfa_offset 4
 380              		.cfi_offset 14, -4
 381 0002 9FB0     		sub	sp, sp, #124
 382              	.LCFI10:
 383              		.cfi_def_cfa_offset 128
 157:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 384              		.loc 1 157 0
 385 0004 0223     		movs	r3, #2
 386 0006 1493     		str	r3, [sp, #80]
 158:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 387              		.loc 1 158 0
 388 0008 0122     		movs	r2, #1
 389 000a 1892     		str	r2, [sp, #96]
 159:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 390              		.loc 1 159 0
 391 000c 1022     		movs	r2, #16
 392 000e 1992     		str	r2, [sp, #100]
 160:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 393              		.loc 1 160 0
 394 0010 1B93     		str	r3, [sp, #108]
 161:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL14;
 395              		.loc 1 161 0
 396 0012 0023     		movs	r3, #0
 397 0014 1C93     		str	r3, [sp, #112]
 162:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 398              		.loc 1 162 0
 399 0016 4FF44013 		mov	r3, #3145728
 400 001a 1D93     		str	r3, [sp, #116]
 163:Src/main.c    ****   {
 401              		.loc 1 163 0
ARM GAS  /tmp/ccs28XJK.s 			page 14


 402 001c 14A8     		add	r0, sp, #80
 403 001e FFF7FEFF 		bl	HAL_RCC_OscConfig
 404              	.LVL27:
 405 0022 48BB     		cbnz	r0, .L39
 170:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 406              		.loc 1 170 0
 407 0024 0F23     		movs	r3, #15
 408 0026 0F93     		str	r3, [sp, #60]
 172:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 409              		.loc 1 172 0
 410 0028 0221     		movs	r1, #2
 411 002a 1091     		str	r1, [sp, #64]
 173:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 412              		.loc 1 173 0
 413 002c 0023     		movs	r3, #0
 414 002e 1193     		str	r3, [sp, #68]
 174:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 415              		.loc 1 174 0
 416 0030 4FF48062 		mov	r2, #1024
 417 0034 1292     		str	r2, [sp, #72]
 175:Src/main.c    **** 
 418              		.loc 1 175 0
 419 0036 1393     		str	r3, [sp, #76]
 177:Src/main.c    ****   {
 420              		.loc 1 177 0
 421 0038 0FA8     		add	r0, sp, #60
 422 003a FFF7FEFF 		bl	HAL_RCC_ClockConfig
 423              	.LVL28:
 424 003e F8B9     		cbnz	r0, .L40
 182:Src/main.c    ****   PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 425              		.loc 1 182 0
 426 0040 0223     		movs	r3, #2
 427 0042 0093     		str	r3, [sp]
 183:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 428              		.loc 1 183 0
 429 0044 0023     		movs	r3, #0
 430 0046 0393     		str	r3, [sp, #12]
 184:Src/main.c    ****   {
 431              		.loc 1 184 0
 432 0048 6846     		mov	r0, sp
 433 004a FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 434              	.LVL29:
 435 004e D8B9     		cbnz	r0, .L41
 191:Src/main.c    **** 
 436              		.loc 1 191 0
 437 0050 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 438              	.LVL30:
 439 0054 0E4B     		ldr	r3, .L42
 440 0056 A3FB0030 		umull	r3, r0, r3, r0
 441 005a 8009     		lsrs	r0, r0, #6
 442 005c FFF7FEFF 		bl	HAL_SYSTICK_Config
 443              	.LVL31:
 195:Src/main.c    **** 
 444              		.loc 1 195 0
 445 0060 0420     		movs	r0, #4
 446 0062 FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 447              	.LVL32:
ARM GAS  /tmp/ccs28XJK.s 			page 15


 198:Src/main.c    **** }
 448              		.loc 1 198 0
 449 0066 0022     		movs	r2, #0
 450 0068 1146     		mov	r1, r2
 451 006a 4FF0FF30 		mov	r0, #-1
 452 006e FFF7FEFF 		bl	HAL_NVIC_SetPriority
 453              	.LVL33:
 199:Src/main.c    **** 
 454              		.loc 1 199 0
 455 0072 1FB0     		add	sp, sp, #124
 456              	.LCFI11:
 457              		.cfi_remember_state
 458              		.cfi_def_cfa_offset 4
 459              		@ sp needed
 460 0074 5DF804FB 		ldr	pc, [sp], #4
 461              	.L39:
 462              	.LCFI12:
 463              		.cfi_restore_state
 165:Src/main.c    ****   }
 464              		.loc 1 165 0
 465 0078 A521     		movs	r1, #165
 466 007a 0648     		ldr	r0, .L42+4
 467 007c FFF7FEFF 		bl	_Error_Handler
 468              	.LVL34:
 469              	.L40:
 179:Src/main.c    ****   }
 470              		.loc 1 179 0
 471 0080 B321     		movs	r1, #179
 472 0082 0448     		ldr	r0, .L42+4
 473 0084 FFF7FEFF 		bl	_Error_Handler
 474              	.LVL35:
 475              	.L41:
 186:Src/main.c    ****   }
 476              		.loc 1 186 0
 477 0088 BA21     		movs	r1, #186
 478 008a 0248     		ldr	r0, .L42+4
 479 008c FFF7FEFF 		bl	_Error_Handler
 480              	.LVL36:
 481              	.L43:
 482              		.align	2
 483              	.L42:
 484 0090 D34D6210 		.word	274877907
 485 0094 00000000 		.word	.LC0
 486              		.cfi_endproc
 487              	.LFE124:
 489              		.section	.text.main,"ax",%progbits
 490              		.align	1
 491              		.global	main
 492              		.syntax unified
 493              		.thumb
 494              		.thumb_func
 495              		.fpu fpv4-sp-d16
 497              	main:
 498              	.LFB123:
  76:Src/main.c    **** 
 499              		.loc 1 76 0
 500              		.cfi_startproc
ARM GAS  /tmp/ccs28XJK.s 			page 16


 501              		@ Volatile: function does not return.
 502              		@ args = 0, pretend = 0, frame = 0
 503              		@ frame_needed = 0, uses_anonymous_args = 0
 504 0000 08B5     		push	{r3, lr}
 505              	.LCFI13:
 506              		.cfi_def_cfa_offset 8
 507              		.cfi_offset 3, -8
 508              		.cfi_offset 14, -4
  85:Src/main.c    **** 
 509              		.loc 1 85 0
 510 0002 FFF7FEFF 		bl	HAL_Init
 511              	.LVL37:
  92:Src/main.c    **** 
 512              		.loc 1 92 0
 513 0006 FFF7FEFF 		bl	SystemClock_Config
 514              	.LVL38:
  99:Src/main.c    ****   MX_USART2_UART_Init();
 515              		.loc 1 99 0
 516 000a FFF7FEFF 		bl	MX_GPIO_Init
 517              	.LVL39:
 100:Src/main.c    **** 
 518              		.loc 1 100 0
 519 000e FFF7FEFF 		bl	MX_USART2_UART_Init
 520              	.LVL40:
 103:Src/main.c    ****     {
 521              		.loc 1 103 0
 522 0012 07E0     		b	.L45
 523              	.L46:
 105:Src/main.c    ****       HAL_Delay(250);
 524              		.loc 1 105 0
 525 0014 4FF48071 		mov	r1, #256
 526 0018 1948     		ldr	r0, .L53
 527 001a FFF7FEFF 		bl	HAL_GPIO_TogglePin
 528              	.LVL41:
 106:Src/main.c    ****     }
 529              		.loc 1 106 0
 530 001e FA20     		movs	r0, #250
 531 0020 FFF7FEFF 		bl	HAL_Delay
 532              	.LVL42:
 533              	.L45:
 103:Src/main.c    ****     {
 534              		.loc 1 103 0
 535 0024 8021     		movs	r1, #128
 536 0026 4FF09040 		mov	r0, #1207959552
 537 002a FFF7FEFF 		bl	HAL_GPIO_ReadPin
 538              	.LVL43:
 539 002e 0028     		cmp	r0, #0
 540 0030 F0D0     		beq	.L46
 541              	.L47:
 109:Src/main.c    ****     {
 542              		.loc 1 109 0 discriminator 1
 543 0032 144B     		ldr	r3, .L53+4
 544 0034 1B68     		ldr	r3, [r3]
 545 0036 002B     		cmp	r3, #0
 546 0038 FBD0     		beq	.L47
 114:Src/main.c    ****     {
 547              		.loc 1 114 0
ARM GAS  /tmp/ccs28XJK.s 			page 17


 548 003a 0122     		movs	r2, #1
 549 003c 1249     		ldr	r1, .L53+8
 550 003e 1348     		ldr	r0, .L53+12
 551 0040 FFF7FEFF 		bl	HAL_UART_Receive_DMA
 552              	.LVL44:
 553 0044 18B1     		cbz	r0, .L48
 116:Src/main.c    ****     }
 554              		.loc 1 116 0
 555 0046 7421     		movs	r1, #116
 556 0048 1148     		ldr	r0, .L53+16
 557 004a FFF7FEFF 		bl	_Error_Handler
 558              	.LVL45:
 559              	.L48:
 119:Src/main.c    ****   while (UartReady != SET)
 560              		.loc 1 119 0
 561 004e 0122     		movs	r2, #1
 562 0050 4FF48051 		mov	r1, #4096
 563 0054 0A48     		ldr	r0, .L53
 564 0056 FFF7FEFF 		bl	HAL_GPIO_WritePin
 565              	.LVL46:
 566              	.L49:
 120:Src/main.c    ****     {
 567              		.loc 1 120 0 discriminator 1
 568 005a 0E4B     		ldr	r3, .L53+20
 569 005c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 570 005e DBB2     		uxtb	r3, r3
 571 0060 012B     		cmp	r3, #1
 572 0062 FAD1     		bne	.L49
 124:Src/main.c    **** 
 573              		.loc 1 124 0
 574 0064 0022     		movs	r2, #0
 575 0066 0B4B     		ldr	r3, .L53+20
 576 0068 1A70     		strb	r2, [r3]
 126:Src/main.c    ****     {
 577              		.loc 1 126 0
 578 006a 0122     		movs	r2, #1
 579 006c 0649     		ldr	r1, .L53+8
 580 006e 0A48     		ldr	r0, .L53+24
 581 0070 FFF7FEFF 		bl	Buffercmp
 582              	.LVL47:
 583 0074 00B9     		cbnz	r0, .L52
 584              	.L50:
 585 0076 FEE7     		b	.L50
 586              	.L52:
 128:Src/main.c    ****     }
 587              		.loc 1 128 0
 588 0078 8021     		movs	r1, #128
 589 007a 0548     		ldr	r0, .L53+16
 590 007c FFF7FEFF 		bl	_Error_Handler
 591              	.LVL48:
 592              	.L54:
 593              		.align	2
 594              	.L53:
 595 0080 00100048 		.word	1207963648
 596 0084 00000000 		.word	.LANCHOR1
 597 0088 00000000 		.word	aRxBuffer
 598 008c 00000000 		.word	huart2
ARM GAS  /tmp/ccs28XJK.s 			page 18


 599 0090 00000000 		.word	.LC0
 600 0094 00000000 		.word	.LANCHOR0
 601 0098 00000000 		.word	.LANCHOR2
 602              		.cfi_endproc
 603              	.LFE123:
 605              		.section	.text.assert_failed,"ax",%progbits
 606              		.align	1
 607              		.global	assert_failed
 608              		.syntax unified
 609              		.thumb
 610              		.thumb_func
 611              		.fpu fpv4-sp-d16
 613              	assert_failed:
 614              	.LFB131:
 310:Src/main.c    ****   while(1) 
 311:Src/main.c    ****   {
 312:Src/main.c    ****   }
 313:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */ 
 314:Src/main.c    **** }
 315:Src/main.c    **** 
 316:Src/main.c    **** #ifdef USE_FULL_ASSERT
 317:Src/main.c    **** 
 318:Src/main.c    **** /**
 319:Src/main.c    ****    * @brief Reports the name of the source file and the source line number
 320:Src/main.c    ****    * where the assert_param error has occurred.
 321:Src/main.c    ****    * @param file: pointer to the source file name
 322:Src/main.c    ****    * @param line: assert_param error line source number
 323:Src/main.c    ****    * @retval None
 324:Src/main.c    ****    */
 325:Src/main.c    **** void assert_failed(uint8_t* file, uint32_t line)
 326:Src/main.c    **** {
 615              		.loc 1 326 0
 616              		.cfi_startproc
 617              		@ args = 0, pretend = 0, frame = 0
 618              		@ frame_needed = 0, uses_anonymous_args = 0
 619              	.LVL49:
 620 0000 08B5     		push	{r3, lr}
 621              	.LCFI14:
 622              		.cfi_def_cfa_offset 8
 623              		.cfi_offset 3, -8
 624              		.cfi_offset 14, -4
 327:Src/main.c    ****   /* USER CODE BEGIN 6 */
 328:Src/main.c    ****   HAL_GPIO_WritePin(LD9_BLUE_GPIO_Port, LD9_BLUE_Pin, GPIO_PIN_SET);
 625              		.loc 1 328 0
 626 0002 0122     		movs	r2, #1
 627 0004 4FF48051 		mov	r1, #4096
 628              	.LVL50:
 629 0008 0148     		ldr	r0, .L57
 630              	.LVL51:
 631 000a FFF7FEFF 		bl	HAL_GPIO_WritePin
 632              	.LVL52:
 633 000e 08BD     		pop	{r3, pc}
 634              	.L58:
 635              		.align	2
 636              	.L57:
 637 0010 00100048 		.word	1207963648
 638              		.cfi_endproc
ARM GAS  /tmp/ccs28XJK.s 			page 19


 639              	.LFE131:
 641              		.comm	aRxBuffer,1,4
 642              		.global	aTxBuffer
 643              		.global	Interrupt_Variable
 644              		.global	UartReady
 645              		.comm	huart2,112,4
 646              		.section	.bss.Interrupt_Variable,"aw",%nobits
 647              		.align	2
 648              		.set	.LANCHOR1,. + 0
 651              	Interrupt_Variable:
 652 0000 00000000 		.space	4
 653              		.section	.bss.UartReady,"aw",%nobits
 654              		.set	.LANCHOR0,. + 0
 657              	UartReady:
 658 0000 00       		.space	1
 659              		.section	.data.aTxBuffer,"aw",%progbits
 660              		.align	2
 661              		.set	.LANCHOR2,. + 0
 664              	aTxBuffer:
 665 0000 5200     		.ascii	"R\000"
 666              		.section	.rodata.MX_USART2_UART_Init.str1.4,"aMS",%progbits,1
 667              		.align	2
 668              	.LC0:
 669 0000 5372632F 		.ascii	"Src/main.c\000"
 669      6D61696E 
 669      2E6300
 670              		.text
 671              	.Letext0:
 672              		.file 2 "/home/saicharan/arm/arm-none-eabi/include/machine/_default_types.h"
 673              		.file 3 "/home/saicharan/arm/arm-none-eabi/include/stdint.h"
 674              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 675              		.file 5 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/system_stm32f3xx.h"
 676              		.file 6 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303xc.h"
 677              		.file 7 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f3xx.h"
 678              		.file 8 "/home/saicharan/arm/arm-none-eabi/include/sys/lock.h"
 679              		.file 9 "/home/saicharan/arm/arm-none-eabi/include/sys/_types.h"
 680              		.file 10 "/home/saicharan/arm/lib/gcc/arm-none-eabi/6.3.0/include/stddef.h"
 681              		.file 11 "/home/saicharan/arm/arm-none-eabi/include/sys/reent.h"
 682              		.file 12 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 683              		.file 13 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rcc.h"
 684              		.file 14 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rcc_ex.h"
 685              		.file 15 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_gpio.h"
 686              		.file 16 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 687              		.file 17 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_uart.h"
 688              		.file 18 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_cortex.h"
 689              		.file 19 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal.h"
ARM GAS  /tmp/ccs28XJK.s 			page 20


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccs28XJK.s:18     .text.Buffercmp:0000000000000000 $t
     /tmp/ccs28XJK.s:24     .text.Buffercmp:0000000000000000 Buffercmp
     /tmp/ccs28XJK.s:84     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccs28XJK.s:90     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccs28XJK.s:182    .text.MX_GPIO_Init:000000000000007c $d
     /tmp/ccs28XJK.s:189    .text.HAL_UART_RxCpltCallback:0000000000000000 $t
     /tmp/ccs28XJK.s:196    .text.HAL_UART_RxCpltCallback:0000000000000000 HAL_UART_RxCpltCallback
     /tmp/ccs28XJK.s:222    .text.HAL_UART_RxCpltCallback:0000000000000014 $d
     /tmp/ccs28XJK.s:228    .text.HAL_UART_ErrorCallback:0000000000000000 $t
     /tmp/ccs28XJK.s:235    .text.HAL_UART_ErrorCallback:0000000000000000 HAL_UART_ErrorCallback
     /tmp/ccs28XJK.s:258    .text.HAL_UART_ErrorCallback:0000000000000010 $d
     /tmp/ccs28XJK.s:263    .text._Error_Handler:0000000000000000 $t
     /tmp/ccs28XJK.s:270    .text._Error_Handler:0000000000000000 _Error_Handler
     /tmp/ccs28XJK.s:296    .text._Error_Handler:0000000000000010 $d
     /tmp/ccs28XJK.s:301    .text.MX_USART2_UART_Init:0000000000000000 $t
     /tmp/ccs28XJK.s:307    .text.MX_USART2_UART_Init:0000000000000000 MX_USART2_UART_Init
     /tmp/ccs28XJK.s:357    .text.MX_USART2_UART_Init:0000000000000034 $d
                            *COM*:0000000000000070 huart2
     /tmp/ccs28XJK.s:364    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccs28XJK.s:371    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccs28XJK.s:484    .text.SystemClock_Config:0000000000000090 $d
     /tmp/ccs28XJK.s:490    .text.main:0000000000000000 $t
     /tmp/ccs28XJK.s:497    .text.main:0000000000000000 main
     /tmp/ccs28XJK.s:595    .text.main:0000000000000080 $d
                            *COM*:0000000000000001 aRxBuffer
     /tmp/ccs28XJK.s:606    .text.assert_failed:0000000000000000 $t
     /tmp/ccs28XJK.s:613    .text.assert_failed:0000000000000000 assert_failed
     /tmp/ccs28XJK.s:637    .text.assert_failed:0000000000000010 $d
     /tmp/ccs28XJK.s:664    .data.aTxBuffer:0000000000000000 aTxBuffer
     /tmp/ccs28XJK.s:651    .bss.Interrupt_Variable:0000000000000000 Interrupt_Variable
     /tmp/ccs28XJK.s:657    .bss.UartReady:0000000000000000 UartReady
     /tmp/ccs28XJK.s:647    .bss.Interrupt_Variable:0000000000000000 $d
     /tmp/ccs28XJK.s:658    .bss.UartReady:0000000000000000 $d
     /tmp/ccs28XJK.s:660    .data.aTxBuffer:0000000000000000 $d
     /tmp/ccs28XJK.s:667    .rodata.MX_USART2_UART_Init.str1.4:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_UART_Init
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_Init
HAL_GPIO_TogglePin
HAL_Delay
HAL_GPIO_ReadPin
HAL_UART_Receive_DMA
