ARM GAS  /tmp/ccdVnXpZ.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f3xx_hal_rcc.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_RCC_DeInit,"ax",%progbits
  18              		.align	1
  19              		.global	HAL_RCC_DeInit
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	HAL_RCC_DeInit:
  26              	.LFB123:
  27              		.file 1 "Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c"
   1:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
   2:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   ******************************************************************************
   3:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @file    stm32f3xx_hal_rcc.c
   4:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @author  MCD Application Team
   5:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief   RCC HAL module driver.
   6:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *          This file provides firmware functions to manage the following 
   7:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *          functionalities of the Reset and Clock Control (RCC) peripheral:
   8:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *           + Peripheral Control functions
  10:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *       
  11:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   @verbatim                
  12:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   ==============================================================================
  13:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****                       ##### RCC specific features #####
  14:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   ==============================================================================
  15:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     [..]  
  16:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       After reset the device is running from Internal High Speed oscillator
  17:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (HSI 8MHz) with Flash 0 wait state, Flash prefetch buffer is enabled, 
  18:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       and all peripherals are off except internal SRAM, Flash and JTAG.
  19:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (+) There is no prescaler on High speed (AHB) and Low speed (APB) buses;
  20:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           all peripherals mapped on these buses are running at HSI speed.
  21:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (+) The clock for all peripherals is switched off, except the SRAM and FLASH.
  22:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (+) All GPIOs are in input floating state, except the JTAG pins which
  23:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           are assigned to be used for debug purpose.
  24:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     [..] Once the device started from reset, the user application has to:
  25:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (+) Configure the clock source to be used to drive the System clock
  26:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           (if the application needs higher frequency/performance)
  27:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (+) Configure the System clock frequency and Flash settings  
  28:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (+) Configure the AHB and APB buses prescalers
  29:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (+) Enable the clock for the peripheral(s) to be used
  30:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (+) Configure the clock source(s) for peripherals whose clocks are not
  31:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           derived from the System clock (RTC, ADC, I2C, I2S, TIM, USB FS)
ARM GAS  /tmp/ccdVnXpZ.s 			page 2


  32:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
  33:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****                       ##### RCC Limitations #####
  34:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   ==============================================================================
  35:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     [..]  
  36:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       A delay between an RCC peripheral clock enable and the effective peripheral 
  37:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       enabling should be taken into account in order to manage the peripheral read/write 
  38:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       from/to registers.
  39:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (+) This delay depends on the peripheral mapping.
  40:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         (++) AHB & APB peripherals, 1 dummy read is necessary
  41:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
  42:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     [..]  
  43:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       Workarounds:
  44:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (#) For AHB & APB peripherals, a dummy read to the peripheral register has been
  45:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           inserted in each __HAL_RCC_PPP_CLK_ENABLE() macro.
  46:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
  47:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   @endverbatim
  48:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   ******************************************************************************
  49:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @attention
  50:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *
  51:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
  52:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *
  53:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * Redistribution and use in source and binary forms, with or without modification,
  54:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * are permitted provided that the following conditions are met:
  55:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  56:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *      this list of conditions and the following disclaimer.
  57:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  58:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *      this list of conditions and the following disclaimer in the documentation
  59:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *      and/or other materials provided with the distribution.
  60:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  61:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *      may be used to endorse or promote products derived from this software
  62:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *      without specific prior written permission.
  63:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *
  64:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  65:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  66:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  67:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  68:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  69:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  70:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  71:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  72:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  73:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  74:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *
  75:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   ******************************************************************************  
  76:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** */
  77:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
  78:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /* Includes ------------------------------------------------------------------*/
  79:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #include "stm32f3xx_hal.h"
  80:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
  81:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /** @addtogroup STM32F3xx_HAL_Driver
  82:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @{
  83:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
  84:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
  85:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /** @defgroup RCC RCC
  86:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** * @brief RCC HAL module driver
  87:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @{
  88:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
ARM GAS  /tmp/ccdVnXpZ.s 			page 3


  89:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
  90:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #ifdef HAL_RCC_MODULE_ENABLED
  91:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
  92:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /* Private typedef -----------------------------------------------------------*/
  93:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /* Private define ------------------------------------------------------------*/
  94:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /** @defgroup RCC_Private_Constants RCC Private Constants
  95:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****  * @{
  96:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****  */
  97:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /* Bits position in  in the CFGR register */
  98:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #define RCC_CFGR_HPRE_BITNUMBER           POSITION_VAL(RCC_CFGR_HPRE)
  99:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #define RCC_CFGR_PPRE1_BITNUMBER          POSITION_VAL(RCC_CFGR_PPRE1)
 100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #define RCC_CFGR_PPRE2_BITNUMBER          POSITION_VAL(RCC_CFGR_PPRE2)
 101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @}
 103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /* Private macro -------------------------------------------------------------*/
 105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /** @defgroup RCC_Private_Macros RCC Private Macros
 106:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @{
 107:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 109:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #define MCO1_CLK_ENABLE()     __HAL_RCC_GPIOA_CLK_ENABLE()
 110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #define MCO1_GPIO_PORT        GPIOA
 111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #define MCO1_PIN              GPIO_PIN_8
 112:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 113:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 114:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @}
 115:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 117:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /* Private variables ---------------------------------------------------------*/
 118:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /** @defgroup RCC_Private_Variables RCC Private Variables
 119:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @{
 120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** const uint8_t aPLLMULFactorTable[16] = { 2U,  3U,  4U,  5U,  6U,  7U,  8U,  9U,
 122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****                                        10U, 11U, 12U, 13U, 14U, 15U, 16U, 16U};
 123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** const uint8_t aPredivFactorTable[16] = { 1U, 2U,  3U,  4U,  5U,  6U,  7U,  8U,
 124:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****                                          9U,10U, 11U, 12U, 13U, 14U, 15U, 16U};
 125:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 126:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @}
 127:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 129:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /* Private function prototypes -----------------------------------------------*/
 130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /* Exported functions ---------------------------------------------------------*/
 131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 132:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions RCC Exported Functions
 133:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @{
 134:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 135:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions_Group1 Initialization and de-initialization functions 
 137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *  @brief    Initialization and Configuration functions 
 138:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *
 139:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   @verbatim    
 140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   ===============================================================================
 141:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****            ##### Initialization and de-initialization functions #####
 142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   ===============================================================================
 143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     [..]
 144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       This section provides functions allowing to configure the internal/external oscillators
 145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (HSE, HSI, LSE, LSI, PLL, CSS and MCO) and the System buses clocks (SYSCLK, AHB, APB1
ARM GAS  /tmp/ccdVnXpZ.s 			page 4


 146:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       and APB2).
 147:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     [..] Internal/external clock and PLL configuration
 149:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (#) HSI (high-speed internal), 8 MHz factory-trimmed RC used directly or through
 150:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           the PLL as System clock source.
 151:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           The HSI clock can be used also to clock the USART and I2C peripherals.
 152:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (#) LSI (low-speed internal), ~40 KHz low consumption RC used as IWDG and/or RTC
 154:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           clock source.
 155:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 156:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (#) HSE (high-speed external), 4 to 32 MHz crystal oscillator used directly or
 157:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           through the PLL as System clock source. Can be used also as RTC clock source.
 158:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 159:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (#) LSE (low-speed external), 32 KHz oscillator used as RTC clock source.   
 160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 161:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (#) PLL (clocked by HSI or HSE), featuring different output clocks:
 162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         (++) The first output is used to generate the high speed system clock (up to 72 MHz)
 163:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         (++) The second output is used to generate the clock for the USB FS (48 MHz)
 164:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         (++) The third output may be used to generate the clock for the ADC peripherals (up to 72 M
 165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         (++) The fourth output may be used to generate the clock for the TIM peripherals (144 MHz)
 166:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 167:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (#) CSS (Clock security system), once enable using the macro __HAL_RCC_CSS_ENABLE()
 168:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           and if a HSE clock failure occurs(HSE used directly or through PLL as System 
 169:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           clock source), the System clocks automatically switched to HSI and an interrupt
 170:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           is generated if enabled. The interrupt is linked to the Cortex-M4 NMI 
 171:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           (Non-Maskable Interrupt) exception vector.   
 172:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 173:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (#) MCO (microcontroller clock output), used to output SYSCLK, HSI, HSE, LSI, LSE or PLL
 174:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           clock (divided by 2) output on pin (such as PA8 pin).
 175:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 176:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     [..] System, AHB and APB buses clocks configuration
 177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (#) Several clock sources can be used to drive the System clock (SYSCLK): HSI,
 178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           HSE and PLL.
 179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           The AHB clock (HCLK) is derived from System clock through configurable
 180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           prescaler and used to clock the CPU, memory and peripherals mapped
 181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           on AHB bus (DMA, GPIO...). APB1 (PCLK1) and APB2 (PCLK2) clocks are derived
 182:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           from AHB clock through configurable prescalers and used to clock
 183:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           the peripherals mapped on these buses. You can use
 184:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           "@ref HAL_RCC_GetSysClockFreq()" function to retrieve the frequencies of these clocks.
 185:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (#) All the peripheral clocks are derived from the System clock (SYSCLK) except:
 187:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         (++) The FLASH program/erase clock  which is always HSI 8MHz clock.
 188:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         (++) The USB 48 MHz clock which is derived from the PLL VCO clock.
 189:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         (++) The USART clock which can be derived as well from HSI 8MHz, LSI or LSE.
 190:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         (++) The I2C clock which can be derived as well from HSI 8MHz clock.
 191:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         (++) The ADC clock which is derived from PLL output.
 192:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         (++) The RTC clock which is derived from the LSE, LSI or 1 MHz HSE_RTC
 193:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****              (HSE divided by a programmable prescaler). The System clock (SYSCLK)
 194:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****              frequency must be higher or equal to the RTC clock frequency.
 195:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         (++) IWDG clock which is always the LSI clock.
 196:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 197:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****          (#) For the STM32F3xx devices, the maximum frequency of the SYSCLK, HCLK, PCLK1 and PCLK2 
 198:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****              Depending on the SYSCLK frequency, the flash latency should be adapted accordingly.
 199:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 200:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****          (#) After reset, the System clock source is the HSI (8 MHz) with 0 WS and
 201:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****              prefetch is disabled.
 202:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   @endverbatim
ARM GAS  /tmp/ccdVnXpZ.s 			page 5


 203:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @{
 204:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 205:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 206:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /*
 207:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   Additional consideration on the SYSCLK based on Latency settings:
 208:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         +-----------------------------------------------+
 209:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         | Latency       | SYSCLK clock frequency (MHz)  |
 210:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         |---------------|-------------------------------|
 211:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         |0WS(1CPU cycle)|       0 < SYSCLK <= 24        |
 212:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         |---------------|-------------------------------|
 213:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         |1WS(2CPU cycle)|      24 < SYSCLK <= 48        |
 214:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         |---------------|-------------------------------|
 215:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         |2WS(3CPU cycle)|      48 < SYSCLK <= 72        |
 216:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         +-----------------------------------------------+
 217:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 218:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 219:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 220:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Resets the RCC clock configuration to the default reset state.
 221:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   The default reset state of the clock configuration is given below:
 222:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            - HSI ON and used as system clock source
 223:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            - HSE and PLL OFF
 224:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            - AHB, APB1 and APB2 prescaler set to 1.
 225:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            - CSS and MCO1 OFF
 226:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            - All interrupts disabled
 227:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   This function does not modify the configuration of the
 228:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            - Peripheral clocks
 229:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            - LSI, LSE and RTC clocks
 230:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval None
 231:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 232:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** void HAL_RCC_DeInit(void)
 233:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
  28              		.loc 1 233 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 234:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Set HSION bit, HSITRIM[4:0] bits to the reset value*/
 235:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   SET_BIT(RCC->CR, RCC_CR_HSION | RCC_CR_HSITRIM_4); 
  33              		.loc 1 235 0
  34 0000 0D4B     		ldr	r3, .L2
  35 0002 1A68     		ldr	r2, [r3]
  36 0004 42F08102 		orr	r2, r2, #129
  37 0008 1A60     		str	r2, [r3]
 236:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 237:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Reset SW[1:0], HPRE[3:0], PPRE1[2:0], PPRE2[2:0] and MCOSEL[2:0] bits */
 238:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   CLEAR_BIT(RCC->CFGR, RCC_CFGR_SW | RCC_CFGR_HPRE | RCC_CFGR_PPRE1 | RCC_CFGR_PPRE2 | RCC_CFGR_MCO
  38              		.loc 1 238 0
  39 000a 5968     		ldr	r1, [r3, #4]
  40 000c 0B4A     		ldr	r2, .L2+4
  41 000e 0A40     		ands	r2, r2, r1
  42 0010 5A60     		str	r2, [r3, #4]
 239:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 240:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Reset HSEON, CSSON, PLLON bits */
 241:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_PLLON | RCC_CR_CSSON | RCC_CR_HSEON);
  43              		.loc 1 241 0
  44 0012 1A68     		ldr	r2, [r3]
  45 0014 22F08472 		bic	r2, r2, #17301504
ARM GAS  /tmp/ccdVnXpZ.s 			page 6


  46 0018 22F48032 		bic	r2, r2, #65536
  47 001c 1A60     		str	r2, [r3]
 242:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 243:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Reset HSEBYP bit */
 244:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_HSEBYP);
  48              		.loc 1 244 0
  49 001e 1A68     		ldr	r2, [r3]
  50 0020 22F48022 		bic	r2, r2, #262144
  51 0024 1A60     		str	r2, [r3]
 245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 246:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Reset CFGR register */
 247:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   CLEAR_REG(RCC->CFGR);
  52              		.loc 1 247 0
  53 0026 0022     		movs	r2, #0
  54 0028 5A60     		str	r2, [r3, #4]
 248:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 249:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Reset CFGR2 register */
 250:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   CLEAR_REG(RCC->CFGR2);
  55              		.loc 1 250 0
  56 002a DA62     		str	r2, [r3, #44]
 251:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 252:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Reset CFGR3 register */
 253:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   CLEAR_REG(RCC->CFGR3);
  57              		.loc 1 253 0
  58 002c 1A63     		str	r2, [r3, #48]
 254:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Disable all interrupts */
 256:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   CLEAR_REG(RCC->CIR);
  59              		.loc 1 256 0
  60 002e 9A60     		str	r2, [r3, #8]
 257:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 258:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Update the SystemCoreClock global variable */
 259:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   SystemCoreClock = HSI_VALUE;
  61              		.loc 1 259 0
  62 0030 034A     		ldr	r2, .L2+8
  63 0032 044B     		ldr	r3, .L2+12
  64 0034 1A60     		str	r2, [r3]
  65 0036 7047     		bx	lr
  66              	.L3:
  67              		.align	2
  68              	.L2:
  69 0038 00100240 		.word	1073876992
  70 003c 0CC0FFF8 		.word	-117456884
  71 0040 00127A00 		.word	8000000
  72 0044 00000000 		.word	SystemCoreClock
  73              		.cfi_endproc
  74              	.LFE123:
  76              		.section	.text.HAL_RCC_OscConfig,"ax",%progbits
  77              		.align	1
  78              		.global	HAL_RCC_OscConfig
  79              		.syntax unified
  80              		.thumb
  81              		.thumb_func
  82              		.fpu fpv4-sp-d16
  84              	HAL_RCC_OscConfig:
  85              	.LFB124:
 260:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
ARM GAS  /tmp/ccdVnXpZ.s 			page 7


 261:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 262:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 263:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Initializes the RCC Oscillators according to the specified parameters in the
 264:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         RCC_OscInitTypeDef.
 265:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @param  RCC_OscInitStruct pointer to an RCC_OscInitTypeDef structure that
 266:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         contains the configuration information for the RCC Oscillators.
 267:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   The PLL is not disabled when used as system clock.
 268:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   Transitions LSE Bypass to LSE On and LSE On to LSE Bypass are not
 269:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         supported by this macro. User should request a transition to LSE Off
 270:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         first and then LSE On or LSE Bypass.
 271:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   Transition HSE Bypass to HSE On and HSE On to HSE Bypass are not
 272:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         supported by this macro. User should request a transition to HSE Off
 273:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         first and then HSE On or HSE Bypass.
 274:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval HAL status
 275:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 276:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
 277:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
  86              		.loc 1 277 0
  87              		.cfi_startproc
  88              		@ args = 0, pretend = 0, frame = 8
  89              		@ frame_needed = 0, uses_anonymous_args = 0
  90              	.LVL0:
  91 0000 70B5     		push	{r4, r5, r6, lr}
  92              	.LCFI0:
  93              		.cfi_def_cfa_offset 16
  94              		.cfi_offset 4, -16
  95              		.cfi_offset 5, -12
  96              		.cfi_offset 6, -8
  97              		.cfi_offset 14, -4
  98 0002 82B0     		sub	sp, sp, #8
  99              	.LCFI1:
 100              		.cfi_def_cfa_offset 24
 101              	.LVL1:
 278:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****    uint32_t tickstart = 0U;
 279:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 280:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Check the parameters */
 281:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   assert_param(RCC_OscInitStruct != NULL);
 102              		.loc 1 281 0
 103 0004 0446     		mov	r4, r0
 104 0006 0028     		cmp	r0, #0
 105 0008 5DD0     		beq	.L105
 106              	.LVL2:
 107              	.L5:
 282:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
 108              		.loc 1 282 0
 109 000a 2368     		ldr	r3, [r4]
 110 000c 13B1     		cbz	r3, .L6
 111              		.loc 1 282 0 is_stmt 0 discriminator 1
 112 000e 13F00F0F 		tst	r3, #15
 113 0012 5ED0     		beq	.L106
 114              	.L6:
 283:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 284:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /*------------------------------- HSE Configuration ------------------------*/ 
 285:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 115              		.loc 1 285 0 is_stmt 1
 116 0014 2368     		ldr	r3, [r4]
 117 0016 13F0010F 		tst	r3, #1
ARM GAS  /tmp/ccdVnXpZ.s 			page 8


 118 001a 7CD0     		beq	.L7
 286:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 287:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Check the parameters */
 288:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
 119              		.loc 1 288 0
 120 001c 6368     		ldr	r3, [r4, #4]
 121 001e 53B1     		cbz	r3, .L8
 122              		.loc 1 288 0 is_stmt 0 discriminator 1
 123 0020 B3F5803F 		cmp	r3, #65536
 124 0024 07D0     		beq	.L8
 125              		.loc 1 288 0 discriminator 2
 126 0026 B3F5A02F 		cmp	r3, #327680
 127 002a 04D0     		beq	.L8
 128              		.loc 1 288 0 discriminator 3
 129 002c 4FF49071 		mov	r1, #288
 130 0030 B548     		ldr	r0, .L125
 131 0032 FFF7FEFF 		bl	assert_failed
 132              	.LVL3:
 133              	.L8:
 289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 290:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* When the HSE is used as system clock or clock source for PLL in these cases it is not allowe
 291:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSE) 
 134              		.loc 1 291 0 is_stmt 1
 135 0036 B54B     		ldr	r3, .L125+4
 136 0038 5B68     		ldr	r3, [r3, #4]
 137 003a 03F00C03 		and	r3, r3, #12
 138 003e 042B     		cmp	r3, #4
 139 0040 52D0     		beq	.L9
 292:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_
 140              		.loc 1 292 0
 141 0042 B24B     		ldr	r3, .L125+4
 142 0044 5B68     		ldr	r3, [r3, #4]
 143 0046 03F00C03 		and	r3, r3, #12
 144 004a 082B     		cmp	r3, #8
 145 004c 47D0     		beq	.L107
 146              	.L10:
 293:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 294:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_
 295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 296:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         return HAL_ERROR;
 297:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 299:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     else
 300:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Set the new HSE configuration ---------------------------------------*/
 302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 147              		.loc 1 302 0
 148 004e 6368     		ldr	r3, [r4, #4]
 149 0050 B3F5803F 		cmp	r3, #65536
 150 0054 00F0A580 		beq	.L108
 151              		.loc 1 302 0 is_stmt 0 discriminator 2
 152 0058 002B     		cmp	r3, #0
 153 005a 40F0A880 		bne	.L16
 154              		.loc 1 302 0 discriminator 3
 155 005e 03F18043 		add	r3, r3, #1073741824
 156 0062 03F50433 		add	r3, r3, #135168
 157 0066 1A68     		ldr	r2, [r3]
ARM GAS  /tmp/ccdVnXpZ.s 			page 9


 158 0068 22F48032 		bic	r2, r2, #65536
 159 006c 1A60     		str	r2, [r3]
 160 006e 1A68     		ldr	r2, [r3]
 161 0070 22F48022 		bic	r2, r2, #262144
 162 0074 1A60     		str	r2, [r3]
 163              	.L15:
 303:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       
 304:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #if defined(RCC_CFGR_PLLSRC_HSI_DIV2)
 305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Configure the HSE predivision factor --------------------------------*/
 306:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       __HAL_RCC_HSE_PREDIV_CONFIG(RCC_OscInitStruct->HSEPredivValue);
 164              		.loc 1 306 0 is_stmt 1
 165 0076 A54A     		ldr	r2, .L125+4
 166 0078 D36A     		ldr	r3, [r2, #44]
 167 007a 23F00F03 		bic	r3, r3, #15
 168 007e A168     		ldr	r1, [r4, #8]
 169 0080 0B43     		orrs	r3, r3, r1
 170 0082 D362     		str	r3, [r2, #44]
 307:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #endif /* RCC_CFGR_PLLSRC_HSI_DIV2 */
 308:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 309:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****        /* Check the HSE State */
 310:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       if(RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 171              		.loc 1 310 0
 172 0084 6368     		ldr	r3, [r4, #4]
 173 0086 002B     		cmp	r3, #0
 174 0088 00F0AB80 		beq	.L18
 311:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 312:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Get Start Tick */
 313:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 175              		.loc 1 313 0
 176 008c FFF7FEFF 		bl	HAL_GetTick
 177              	.LVL4:
 178 0090 0546     		mov	r5, r0
 179              	.LVL5:
 180              	.L19:
 181              	.LBB166:
 182              	.LBB167:
 183              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS Cortex-M Core Function/Instruction Header File
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V4.30
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     20. October 2015
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
   8:Drivers/CMSIS/Include/cmsis_gcc.h **** 
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****    All rights reserved.
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****    Redistribution and use in source and binary forms, with or without
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****    modification, are permitted provided that the following conditions are met:
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****    - Redistributions of source code must retain the above copyright
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****    - Redistributions in binary form must reproduce the above copyright
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer in the
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****      documentation and/or other materials provided with the distribution.
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****    - Neither the name of ARM nor the names of its contributors may be used
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****      to endorse or promote products derived from this software without
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****      specific prior written permission.
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****    *
ARM GAS  /tmp/ccdVnXpZ.s 			page 10


  21:Drivers/CMSIS/Include/cmsis_gcc.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:Drivers/CMSIS/Include/cmsis_gcc.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  25:Drivers/CMSIS/Include/cmsis_gcc.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:Drivers/CMSIS/Include/cmsis_gcc.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:Drivers/CMSIS/Include/cmsis_gcc.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:Drivers/CMSIS/Include/cmsis_gcc.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:Drivers/CMSIS/Include/cmsis_gcc.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:Drivers/CMSIS/Include/cmsis_gcc.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:Drivers/CMSIS/Include/cmsis_gcc.h ****    POSSIBILITY OF SUCH DAMAGE.
  32:Drivers/CMSIS/Include/cmsis_gcc.h ****    ---------------------------------------------------------------------------*/
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  36:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined ( __GNUC__ )
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  41:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  44:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  47:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  49:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
  51:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  53:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  54:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  55:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  57:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
  59:Drivers/CMSIS/Include/cmsis_gcc.h **** {
  60:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** }
  62:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  66:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  67:Drivers/CMSIS/Include/cmsis_gcc.h ****   Can only be executed in Privileged modes.
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** {
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  72:Drivers/CMSIS/Include/cmsis_gcc.h **** }
  73:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  74:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  75:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
  77:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
ARM GAS  /tmp/ccdVnXpZ.s 			page 11


  78:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  80:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_CONTROL(void)
  81:Drivers/CMSIS/Include/cmsis_gcc.h **** {
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
  83:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
  85:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** }
  87:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  88:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  89:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
  93:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_CONTROL(uint32_t control)
  95:Drivers/CMSIS/Include/cmsis_gcc.h **** {
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
  97:Drivers/CMSIS/Include/cmsis_gcc.h **** }
  98:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  99:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 100:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 101:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 102:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 105:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_IPSR(void)
 106:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 108:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 109:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 110:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 111:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 114:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 115:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 116:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 118:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_APSR(void)
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 123:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 124:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 125:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 126:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 127:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 128:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 132:Drivers/CMSIS/Include/cmsis_gcc.h ****     \return               xPSR Register value
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_xPSR(void)
ARM GAS  /tmp/ccdVnXpZ.s 			page 12


 135:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 137:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 142:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 143:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 148:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PSP(void)
 149:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 150:Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 151:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp\n"  : "=r" (result) );
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 154:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 155:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 163:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 164:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0\n" : : "r" (topOfProcStack) : "sp");
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 169:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 170:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 171:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 172:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_MSP(void)
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 175:Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp\n" : "=r" (result) );
 178:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 183:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 184:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 186:Drivers/CMSIS/Include/cmsis_gcc.h ****     \param [in]    topOfMainStack  Main Stack Pointer value to set
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 190:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0\n" : : "r" (topOfMainStack) : "sp");
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  /tmp/ccdVnXpZ.s 			page 13


 192:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 196:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 197:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 201:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 210:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 211:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 213:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 215:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #if       (__CORTEX_M >= 0x03U)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 222:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 223:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 224:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 226:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_fault_irq(void)
 227:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 228:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 231:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 232:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 234:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 235:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 236:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_fault_irq(void)
 238:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 240:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 241:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 244:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 245:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 248:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_BASEPRI(void)
ARM GAS  /tmp/ccdVnXpZ.s 			page 14


 249:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 250:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 254:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 255:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 256:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 257:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 258:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 259:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 261:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_BASEPRI(uint32_t value)
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 264:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (value) : "memory");
 265:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 266:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 267:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 268:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 269:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 270:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 272:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 273:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_BASEPRI_MAX(uint32_t value)
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (value) : "memory");
 277:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 278:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 279:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 281:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 283:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 284:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_FAULTMASK(void)
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 288:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 291:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 296:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 298:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 299:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_FAULTMASK(uint32_t faultMask)
 300:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 301:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* (__CORTEX_M >= 0x03U) */
 305:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccdVnXpZ.s 			page 15


 306:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 307:Drivers/CMSIS/Include/cmsis_gcc.h **** #if       (__CORTEX_M == 0x04U) || (__CORTEX_M == 0x07U)
 308:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 311:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 312:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_FPSCR(void)
 315:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 316:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__FPU_PRESENT == 1U) && (__FPU_USED == 1U)
 317:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Empty asm statement works as a scheduling barrier */
 320:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 324:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(0);
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 329:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 332:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_FPSCR(uint32_t fpscr)
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__FPU_PRESENT == 1U) && (__FPU_USED == 1U)
 338:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Empty asm statement works as a scheduling barrier */
 339:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc");
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 342:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 343:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 344:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 345:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* (__CORTEX_M == 0x04U) || (__CORTEX_M == 0x07U) */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 348:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 350:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 351:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 352:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 353:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 354:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 355:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 358:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 361:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 362:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
ARM GAS  /tmp/ccdVnXpZ.s 			page 16


 363:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 368:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 369:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("nop");
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 378:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 379:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 381:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __WFI(void)
 384:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("wfi");
 386:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 387:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 388:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 389:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 391:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 392:Drivers/CMSIS/Include/cmsis_gcc.h ****     a low-power state until one of a number of events occurs.
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 394:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __WFE(void)
 395:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 396:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("wfe");
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 398:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 399:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 400:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 403:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __SEV(void)
 405:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("sev");
 407:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 408:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 409:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 410:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 413:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 415:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 416:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __ISB(void)
 417:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 418:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  /tmp/ccdVnXpZ.s 			page 17


 420:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 424:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 426:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 427:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DSB(void)
 428:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 429:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 430:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 431:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 433:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 435:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 436:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DMB(void)
 439:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 440:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 441:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 442:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 444:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 445:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 446:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in integer value.
 447:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 448:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 450:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV(uint32_t value)
 451:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 452:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 455:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 456:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 457:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 458:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 459:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 460:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 461:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 462:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 463:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 464:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 465:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in two unsigned short values.
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 467:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 468:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV16(uint32_t value)
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 471:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 472:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 475:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccdVnXpZ.s 			page 18


 477:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 478:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 479:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order in signed short value
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a signed short value with sign extension to integer.
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 482:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 483:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE int32_t __REVSH(int32_t value)
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 486:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (short)__builtin_bswap16(value);
 488:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t result;
 490:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 491:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 492:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 493:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 495:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 498:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 499:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 500:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 501:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Number of Bits to rotate
 502:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 504:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 505:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 506:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 507:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 508:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 509:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 511:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 513:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 516:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 520:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 521:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 522:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 526:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __RBIT(uint32_t value)
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 528:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 529:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** #if       (__CORTEX_M >= 0x03U) || (__CORTEX_SC >= 300U)
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 184              		.loc 2 531 0
 185 0092 4FF40033 		mov	r3, #131072
ARM GAS  /tmp/ccdVnXpZ.s 			page 19


 186              		.syntax unified
 187              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 188 0096 93FAA3F3 		rbit r3, r3
 189              	@ 0 "" 2
 190              	.LVL6:
 191              		.thumb
 192              		.syntax unified
 193              	.LBE167:
 194              	.LBE166:
 314:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Wait till HSE is ready */
 316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 195              		.loc 1 316 0
 196 009a 9C4B     		ldr	r3, .L125+4
 197 009c 1968     		ldr	r1, [r3]
 198              	.LVL7:
 199              	.LBB168:
 200              	.LBB169:
 201              		.loc 2 531 0
 202 009e 4FF40033 		mov	r3, #131072
 203              		.syntax unified
 204              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 205 00a2 93FAA3F3 		rbit r3, r3
 206              	@ 0 "" 2
 207              	.LVL8:
 208              		.thumb
 209              		.syntax unified
 210              	.LBE169:
 211              	.LBE168:
 212              		.loc 1 316 0
 213 00a6 B3FA83F3 		clz	r3, r3
 214 00aa 03F01F03 		and	r3, r3, #31
 215 00ae 0122     		movs	r2, #1
 216 00b0 02FA03F3 		lsl	r3, r2, r3
 217 00b4 1942     		tst	r1, r3
 218 00b6 2ED1     		bne	.L7
 317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 318:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 219              		.loc 1 318 0
 220 00b8 FFF7FEFF 		bl	HAL_GetTick
 221              	.LVL9:
 222 00bc 401B     		subs	r0, r0, r5
 223 00be 6428     		cmp	r0, #100
 224 00c0 E7D9     		bls	.L19
 319:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           {
 320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****             return HAL_TIMEOUT;
 225              		.loc 1 320 0
 226 00c2 0320     		movs	r0, #3
 227 00c4 2BE3     		b	.L13
 228              	.LVL10:
 229              	.L105:
 281:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
 230              		.loc 1 281 0 discriminator 1
 231 00c6 40F21911 		movw	r1, #281
 232 00ca 8F48     		ldr	r0, .L125
 233              	.LVL11:
 234 00cc FFF7FEFF 		bl	assert_failed
ARM GAS  /tmp/ccdVnXpZ.s 			page 20


 235              	.LVL12:
 236 00d0 9BE7     		b	.L5
 237              	.L106:
 282:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 238              		.loc 1 282 0 discriminator 2
 239 00d2 4FF48D71 		mov	r1, #282
 240 00d6 8C48     		ldr	r0, .L125
 241 00d8 FFF7FEFF 		bl	assert_failed
 242              	.LVL13:
 243 00dc 9AE7     		b	.L6
 244              	.L107:
 292:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 245              		.loc 1 292 0 discriminator 1
 246 00de 8B4B     		ldr	r3, .L125+4
 247 00e0 5B68     		ldr	r3, [r3, #4]
 248 00e2 13F4803F 		tst	r3, #65536
 249 00e6 B2D0     		beq	.L10
 250              	.L9:
 251              	.LVL14:
 252              	.LBB170:
 253              	.LBB171:
 254              		.loc 2 531 0
 255 00e8 4FF40033 		mov	r3, #131072
 256              		.syntax unified
 257              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 258 00ec 93FAA3F3 		rbit r3, r3
 259              	@ 0 "" 2
 260              	.LVL15:
 261              		.thumb
 262              		.syntax unified
 263              	.LBE171:
 264              	.LBE170:
 294:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 265              		.loc 1 294 0
 266 00f0 864B     		ldr	r3, .L125+4
 267 00f2 1968     		ldr	r1, [r3]
 268              	.LVL16:
 269              	.LBB172:
 270              	.LBB173:
 271              		.loc 2 531 0
 272 00f4 4FF40033 		mov	r3, #131072
 273              		.syntax unified
 274              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 275 00f8 93FAA3F3 		rbit r3, r3
 276              	@ 0 "" 2
 277              	.LVL17:
 278              		.thumb
 279              		.syntax unified
 280              	.LBE173:
 281              	.LBE172:
 294:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 282              		.loc 1 294 0
 283 00fc B3FA83F3 		clz	r3, r3
 284 0100 03F01F03 		and	r3, r3, #31
 285 0104 0122     		movs	r2, #1
 286 0106 02FA03F3 		lsl	r3, r2, r3
 287 010a 1942     		tst	r1, r3
ARM GAS  /tmp/ccdVnXpZ.s 			page 21


 288 010c 03D0     		beq	.L7
 294:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 289              		.loc 1 294 0 is_stmt 0 discriminator 13
 290 010e 6368     		ldr	r3, [r4, #4]
 291 0110 002B     		cmp	r3, #0
 292 0112 00F0FD82 		beq	.L109
 293              	.LVL18:
 294              	.L7:
 321:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           }
 322:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 323:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 324:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       else
 325:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 326:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Get Start Tick */
 327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 328:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 329:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Wait till HSE is disabled */
 330:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 331:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****            if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 333:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           {
 334:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****             return HAL_TIMEOUT;
 335:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           }
 336:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 337:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 338:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 340:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /*----------------------------- HSI Configuration --------------------------*/ 
 341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 295              		.loc 1 341 0 is_stmt 1
 296 0116 2368     		ldr	r3, [r4]
 297 0118 13F0020F 		tst	r3, #2
 298 011c 00F0AD80 		beq	.L27
 342:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Check the parameters */
 344:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
 299              		.loc 1 344 0
 300 0120 2369     		ldr	r3, [r4, #16]
 301 0122 012B     		cmp	r3, #1
 302 0124 04D9     		bls	.L28
 303              		.loc 1 344 0 is_stmt 0 discriminator 1
 304 0126 4FF4AC71 		mov	r1, #344
 305 012a 7748     		ldr	r0, .L125
 306 012c FFF7FEFF 		bl	assert_failed
 307              	.LVL19:
 308              	.L28:
 345:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));
 309              		.loc 1 345 0 is_stmt 1
 310 0130 6369     		ldr	r3, [r4, #20]
 311 0132 1F2B     		cmp	r3, #31
 312 0134 72D8     		bhi	.L110
 313              	.L29:
 346:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
 347:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock *
 348:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI) 
 314              		.loc 1 348 0
 315 0136 754B     		ldr	r3, .L125+4
ARM GAS  /tmp/ccdVnXpZ.s 			page 22


 316 0138 5B68     		ldr	r3, [r3, #4]
 317 013a 13F00C0F 		tst	r3, #12
 318 013e 78D0     		beq	.L30
 349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_
 319              		.loc 1 349 0
 320 0140 724B     		ldr	r3, .L125+4
 321 0142 5B68     		ldr	r3, [r3, #4]
 322 0144 03F00C03 		and	r3, r3, #12
 323 0148 082B     		cmp	r3, #8
 324 014a 6DD0     		beq	.L111
 325              	.L31:
 350:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 351:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* When HSI is used as system clock it will not disabled */
 352:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_
 353:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 354:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         return HAL_ERROR;
 355:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 356:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Otherwise, just the calibration is allowed */
 357:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       else
 358:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 359:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
 360:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 361:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 362:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 363:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     else
 364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Check the HSI State */
 366:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       if(RCC_OscInitStruct->HSIState != RCC_HSI_OFF)
 326              		.loc 1 366 0
 327 014c 2369     		ldr	r3, [r4, #16]
 328 014e 002B     		cmp	r3, #0
 329 0150 00F0E080 		beq	.L35
 330              	.LVL20:
 331              	.LBB174:
 332              	.LBB175:
 333              		.loc 2 531 0
 334 0154 0122     		movs	r2, #1
 335              		.syntax unified
 336              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 337 0156 92FAA2F3 		rbit r3, r2
 338              	@ 0 "" 2
 339              	.LVL21:
 340              		.thumb
 341              		.syntax unified
 342              	.LBE175:
 343              	.LBE174:
 367:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 368:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****        /* Enable the Internal High Speed oscillator (HSI). */
 369:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         __HAL_RCC_HSI_ENABLE();
 344              		.loc 1 369 0
 345 015a B3FA83F3 		clz	r3, r3
 346 015e 03F18453 		add	r3, r3, #276824064
 347 0162 03F58413 		add	r3, r3, #1081344
 348 0166 9B00     		lsls	r3, r3, #2
 349 0168 1A60     		str	r2, [r3]
 370:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 371:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Get Start Tick */
ARM GAS  /tmp/ccdVnXpZ.s 			page 23


 372:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 350              		.loc 1 372 0
 351 016a FFF7FEFF 		bl	HAL_GetTick
 352              	.LVL22:
 353 016e 0546     		mov	r5, r0
 354              	.LVL23:
 355              	.L36:
 356              	.LBB176:
 357              	.LBB177:
 358              		.loc 2 531 0
 359 0170 0223     		movs	r3, #2
 360              		.syntax unified
 361              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 362 0172 93FAA3F3 		rbit r3, r3
 363              	@ 0 "" 2
 364              	.LVL24:
 365              		.thumb
 366              		.syntax unified
 367              	.LBE177:
 368              	.LBE176:
 373:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Wait till HSI is ready */
 375:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 369              		.loc 1 375 0
 370 0176 654B     		ldr	r3, .L125+4
 371 0178 1968     		ldr	r1, [r3]
 372              	.LVL25:
 373              	.LBB178:
 374              	.LBB179:
 375              		.loc 2 531 0
 376 017a 0223     		movs	r3, #2
 377              		.syntax unified
 378              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 379 017c 93FAA3F3 		rbit r3, r3
 380              	@ 0 "" 2
 381              	.LVL26:
 382              		.thumb
 383              		.syntax unified
 384              	.LBE179:
 385              	.LBE178:
 386              		.loc 1 375 0
 387 0180 B3FA83F3 		clz	r3, r3
 388 0184 03F01F03 		and	r3, r3, #31
 389 0188 0122     		movs	r2, #1
 390 018a 02FA03F3 		lsl	r3, r2, r3
 391 018e 1942     		tst	r1, r3
 392 0190 40F0AA80 		bne	.L112
 376:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 377:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 393              		.loc 1 377 0
 394 0194 FFF7FEFF 		bl	HAL_GetTick
 395              	.LVL27:
 396 0198 401B     		subs	r0, r0, r5
 397 019a 0228     		cmp	r0, #2
 398 019c E8D9     		bls	.L36
 378:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           {
 379:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****             return HAL_TIMEOUT;
ARM GAS  /tmp/ccdVnXpZ.s 			page 24


 399              		.loc 1 379 0
 400 019e 0320     		movs	r0, #3
 401 01a0 BDE2     		b	.L13
 402              	.LVL28:
 403              	.L108:
 302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       
 404              		.loc 1 302 0 discriminator 1
 405 01a2 5A4A     		ldr	r2, .L125+4
 406 01a4 1368     		ldr	r3, [r2]
 407 01a6 43F48033 		orr	r3, r3, #65536
 408 01aa 1360     		str	r3, [r2]
 409 01ac 63E7     		b	.L15
 410              	.L16:
 302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       
 411              		.loc 1 302 0 is_stmt 0 discriminator 4
 412 01ae B3F5A02F 		cmp	r3, #327680
 413 01b2 09D0     		beq	.L113
 302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       
 414              		.loc 1 302 0 discriminator 6
 415 01b4 554B     		ldr	r3, .L125+4
 416 01b6 1A68     		ldr	r2, [r3]
 417 01b8 22F48032 		bic	r2, r2, #65536
 418 01bc 1A60     		str	r2, [r3]
 419 01be 1A68     		ldr	r2, [r3]
 420 01c0 22F48022 		bic	r2, r2, #262144
 421 01c4 1A60     		str	r2, [r3]
 422 01c6 56E7     		b	.L15
 423              	.L113:
 302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       
 424              		.loc 1 302 0 discriminator 5
 425 01c8 03F18043 		add	r3, r3, #1073741824
 426 01cc A3F53C33 		sub	r3, r3, #192512
 427 01d0 1A68     		ldr	r2, [r3]
 428 01d2 42F48022 		orr	r2, r2, #262144
 429 01d6 1A60     		str	r2, [r3]
 430 01d8 1A68     		ldr	r2, [r3]
 431 01da 42F48032 		orr	r2, r2, #65536
 432 01de 1A60     		str	r2, [r3]
 433 01e0 49E7     		b	.L15
 434              	.L18:
 327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 435              		.loc 1 327 0 is_stmt 1
 436 01e2 FFF7FEFF 		bl	HAL_GetTick
 437              	.LVL29:
 438 01e6 0546     		mov	r5, r0
 439              	.LVL30:
 440              	.L23:
 441              	.LBB180:
 442              	.LBB181:
 443              		.loc 2 531 0
 444 01e8 4FF40033 		mov	r3, #131072
 445              		.syntax unified
 446              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 447 01ec 93FAA3F3 		rbit r3, r3
 448              	@ 0 "" 2
 449              	.LVL31:
 450              		.thumb
ARM GAS  /tmp/ccdVnXpZ.s 			page 25


 451              		.syntax unified
 452              	.LBE181:
 453              	.LBE180:
 330:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 454              		.loc 1 330 0
 455 01f0 464B     		ldr	r3, .L125+4
 456 01f2 1968     		ldr	r1, [r3]
 457              	.LVL32:
 458              	.LBB182:
 459              	.LBB183:
 460              		.loc 2 531 0
 461 01f4 4FF40033 		mov	r3, #131072
 462              		.syntax unified
 463              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 464 01f8 93FAA3F3 		rbit r3, r3
 465              	@ 0 "" 2
 466              	.LVL33:
 467              		.thumb
 468              		.syntax unified
 469              	.LBE183:
 470              	.LBE182:
 330:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 471              		.loc 1 330 0
 472 01fc B3FA83F3 		clz	r3, r3
 473 0200 03F01F03 		and	r3, r3, #31
 474 0204 0122     		movs	r2, #1
 475 0206 02FA03F3 		lsl	r3, r2, r3
 476 020a 1942     		tst	r1, r3
 477 020c 83D0     		beq	.L7
 332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           {
 478              		.loc 1 332 0
 479 020e FFF7FEFF 		bl	HAL_GetTick
 480              	.LVL34:
 481 0212 401B     		subs	r0, r0, r5
 482 0214 6428     		cmp	r0, #100
 483 0216 E7D9     		bls	.L23
 334:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           }
 484              		.loc 1 334 0
 485 0218 0320     		movs	r0, #3
 486 021a 80E2     		b	.L13
 487              	.LVL35:
 488              	.L110:
 345:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
 489              		.loc 1 345 0 discriminator 1
 490 021c 40F25911 		movw	r1, #345
 491 0220 3948     		ldr	r0, .L125
 492 0222 FFF7FEFF 		bl	assert_failed
 493              	.LVL36:
 494 0226 86E7     		b	.L29
 495              	.L111:
 349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 496              		.loc 1 349 0 discriminator 1
 497 0228 384B     		ldr	r3, .L125+4
 498 022a 5B68     		ldr	r3, [r3, #4]
 499 022c 13F4803F 		tst	r3, #65536
 500 0230 8CD1     		bne	.L31
 501              	.L30:
ARM GAS  /tmp/ccdVnXpZ.s 			page 26


 502              	.LVL37:
 503              	.LBB184:
 504              	.LBB185:
 505              		.loc 2 531 0
 506 0232 0223     		movs	r3, #2
 507              		.syntax unified
 508              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 509 0234 93FAA3F3 		rbit r3, r3
 510              	@ 0 "" 2
 511              	.LVL38:
 512              		.thumb
 513              		.syntax unified
 514              	.LBE185:
 515              	.LBE184:
 352:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 516              		.loc 1 352 0
 517 0238 344B     		ldr	r3, .L125+4
 518 023a 1968     		ldr	r1, [r3]
 519              	.LVL39:
 520              	.LBB186:
 521              	.LBB187:
 522              		.loc 2 531 0
 523 023c 0223     		movs	r3, #2
 524              		.syntax unified
 525              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 526 023e 93FAA3F3 		rbit r3, r3
 527              	@ 0 "" 2
 528              	.LVL40:
 529              		.thumb
 530              		.syntax unified
 531              	.LBE187:
 532              	.LBE186:
 352:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 533              		.loc 1 352 0
 534 0242 B3FA83F3 		clz	r3, r3
 535 0246 03F01F03 		and	r3, r3, #31
 536 024a 0122     		movs	r2, #1
 537 024c 02FA03F3 		lsl	r3, r2, r3
 538 0250 1942     		tst	r1, r3
 539 0252 04D0     		beq	.L34
 352:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 540              		.loc 1 352 0 is_stmt 0 discriminator 13
 541 0254 2369     		ldr	r3, [r4, #16]
 542 0256 9342     		cmp	r3, r2
 543 0258 01D0     		beq	.L34
 354:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 544              		.loc 1 354 0 is_stmt 1
 545 025a 0120     		movs	r0, #1
 546 025c 5FE2     		b	.L13
 547              	.L34:
 360:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 548              		.loc 1 360 0
 549 025e 2B48     		ldr	r0, .L125+4
 550 0260 0368     		ldr	r3, [r0]
 551 0262 23F0F803 		bic	r3, r3, #248
 552 0266 6169     		ldr	r1, [r4, #20]
 553              	.LVL41:
ARM GAS  /tmp/ccdVnXpZ.s 			page 27


 554              	.LBB188:
 555              	.LBB189:
 556              		.loc 2 531 0
 557 0268 F822     		movs	r2, #248
 558              		.syntax unified
 559              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 560 026a 92FAA2F2 		rbit r2, r2
 561              	@ 0 "" 2
 562              	.LVL42:
 563              		.thumb
 564              		.syntax unified
 565              	.LBE189:
 566              	.LBE188:
 360:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 567              		.loc 1 360 0
 568 026e B2FA82F2 		clz	r2, r2
 569 0272 01FA02F2 		lsl	r2, r1, r2
 570 0276 1343     		orrs	r3, r3, r2
 571 0278 0360     		str	r3, [r0]
 572              	.L27:
 380:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           }
 381:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 382:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****                 
 383:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
 384:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 385:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 386:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       else
 387:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 388:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Disable the Internal High Speed oscillator (HSI). */
 389:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         __HAL_RCC_HSI_DISABLE();
 390:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 391:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Get Start Tick */
 392:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 393:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 394:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Wait till HSI is disabled */
 395:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 396:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 397:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 398:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           {
 399:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****             return HAL_TIMEOUT;
 400:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           }
 401:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 402:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 403:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 404:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 405:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /*------------------------------ LSI Configuration -------------------------*/ 
 406:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 573              		.loc 1 406 0
 574 027a 2368     		ldr	r3, [r4]
 575 027c 13F0080F 		tst	r3, #8
 576 0280 00F09780 		beq	.L44
 407:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 408:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Check the parameters */
 409:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));
 577              		.loc 1 409 0
 578 0284 A369     		ldr	r3, [r4, #24]
 579 0286 012B     		cmp	r3, #1
ARM GAS  /tmp/ccdVnXpZ.s 			page 28


 580 0288 04D9     		bls	.L45
 581              		.loc 1 409 0 is_stmt 0 discriminator 1
 582 028a 40F29911 		movw	r1, #409
 583 028e 1E48     		ldr	r0, .L125
 584 0290 FFF7FEFF 		bl	assert_failed
 585              	.LVL43:
 586              	.L45:
 410:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
 411:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Check the LSI State */
 412:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if(RCC_OscInitStruct->LSIState != RCC_LSI_OFF)
 587              		.loc 1 412 0 is_stmt 1
 588 0294 A369     		ldr	r3, [r4, #24]
 589 0296 002B     		cmp	r3, #0
 590 0298 63D0     		beq	.L46
 591              	.LVL44:
 592              	.LBB190:
 593              	.LBB191:
 594              		.loc 2 531 0
 595 029a 0121     		movs	r1, #1
 596              		.syntax unified
 597              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 598 029c 91FAA1F2 		rbit r2, r1
 599              	@ 0 "" 2
 600              	.LVL45:
 601              		.thumb
 602              		.syntax unified
 603              	.LBE191:
 604              	.LBE190:
 413:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 414:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Enable the Internal Low Speed oscillator (LSI). */
 415:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       __HAL_RCC_LSI_ENABLE();
 605              		.loc 1 415 0
 606 02a0 B2FA82F2 		clz	r2, r2
 607 02a4 1A4B     		ldr	r3, .L125+8
 608 02a6 1344     		add	r3, r3, r2
 609 02a8 9B00     		lsls	r3, r3, #2
 610 02aa 1960     		str	r1, [r3]
 416:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       
 417:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Get Start Tick */
 418:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 611              		.loc 1 418 0
 612 02ac FFF7FEFF 		bl	HAL_GetTick
 613              	.LVL46:
 614 02b0 0546     		mov	r5, r0
 615              	.LVL47:
 616              	.L47:
 617              	.LBB192:
 618              	.LBB193:
 619              		.loc 2 531 0
 620 02b2 0223     		movs	r3, #2
 621              		.syntax unified
 622              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 623 02b4 93FAA3F2 		rbit r2, r3
 624              	@ 0 "" 2
 625              	.LVL48:
 626              		.thumb
 627              		.syntax unified
ARM GAS  /tmp/ccdVnXpZ.s 			page 29


 628              	.LBE193:
 629              	.LBE192:
 630              	.LBB194:
 631              	.LBB195:
 632              		.syntax unified
 633              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 634 02b8 93FAA3F2 		rbit r2, r3
 635              	@ 0 "" 2
 636              	.LVL49:
 637              		.thumb
 638              		.syntax unified
 639              	.LBE195:
 640              	.LBE194:
 641              	.LBB196:
 642              	.LBB197:
 643              		.syntax unified
 644              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 645 02bc 93FAA3F2 		rbit r2, r3
 646              	@ 0 "" 2
 647              	.LVL50:
 648              		.thumb
 649              		.syntax unified
 650              	.LBE197:
 651              	.LBE196:
 419:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       
 420:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Wait till LSI is ready */  
 421:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 652              		.loc 1 421 0
 653 02c0 124A     		ldr	r2, .L125+4
 654 02c2 516A     		ldr	r1, [r2, #36]
 655              	.LVL51:
 656              	.LBB198:
 657              	.LBB199:
 658              		.loc 2 531 0
 659              		.syntax unified
 660              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 661 02c4 93FAA3F3 		rbit r3, r3
 662              	@ 0 "" 2
 663              	.LVL52:
 664              		.thumb
 665              		.syntax unified
 666              	.LBE199:
 667              	.LBE198:
 668              		.loc 1 421 0
 669 02c8 B3FA83F3 		clz	r3, r3
 670 02cc 03F01F03 		and	r3, r3, #31
 671 02d0 0122     		movs	r2, #1
 672 02d2 02FA03F3 		lsl	r3, r2, r3
 673 02d6 1942     		tst	r1, r3
 674 02d8 6BD1     		bne	.L44
 422:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 423:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 675              		.loc 1 423 0
 676 02da FFF7FEFF 		bl	HAL_GetTick
 677              	.LVL53:
 678 02de 401B     		subs	r0, r0, r5
 679 02e0 0228     		cmp	r0, #2
ARM GAS  /tmp/ccdVnXpZ.s 			page 30


 680 02e2 E6D9     		bls	.L47
 424:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 425:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           return HAL_TIMEOUT;
 681              		.loc 1 425 0
 682 02e4 0320     		movs	r0, #3
 683 02e6 1AE2     		b	.L13
 684              	.L112:
 384:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 685              		.loc 1 384 0
 686 02e8 0848     		ldr	r0, .L125+4
 687 02ea 0368     		ldr	r3, [r0]
 688 02ec 23F0F803 		bic	r3, r3, #248
 689 02f0 6169     		ldr	r1, [r4, #20]
 690              	.LVL54:
 691              	.LBB200:
 692              	.LBB201:
 693              		.loc 2 531 0
 694 02f2 F822     		movs	r2, #248
 695              		.syntax unified
 696              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 697 02f4 92FAA2F2 		rbit r2, r2
 698              	@ 0 "" 2
 699              	.LVL55:
 700              		.thumb
 701              		.syntax unified
 702              	.LBE201:
 703              	.LBE200:
 384:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 704              		.loc 1 384 0
 705 02f8 B2FA82F2 		clz	r2, r2
 706 02fc 01FA02F2 		lsl	r2, r1, r2
 707 0300 1343     		orrs	r3, r3, r2
 708 0302 0360     		str	r3, [r0]
 709 0304 B9E7     		b	.L27
 710              	.L126:
 711 0306 00BF     		.align	2
 712              	.L125:
 713 0308 00000000 		.word	.LC0
 714 030c 00100240 		.word	1073876992
 715 0310 20819010 		.word	277905696
 716              	.LVL56:
 717              	.L35:
 718              	.LBB202:
 719              	.LBB203:
 720              		.loc 2 531 0
 721 0314 0123     		movs	r3, #1
 722              		.syntax unified
 723              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 724 0316 93FAA3F3 		rbit r3, r3
 725              	@ 0 "" 2
 726              	.LVL57:
 727              		.thumb
 728              		.syntax unified
 729              	.LBE203:
 730              	.LBE202:
 389:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 731              		.loc 1 389 0
ARM GAS  /tmp/ccdVnXpZ.s 			page 31


 732 031a B3FA83F3 		clz	r3, r3
 733 031e 03F18453 		add	r3, r3, #276824064
 734 0322 03F58413 		add	r3, r3, #1081344
 735 0326 9B00     		lsls	r3, r3, #2
 736 0328 0022     		movs	r2, #0
 737 032a 1A60     		str	r2, [r3]
 392:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 738              		.loc 1 392 0
 739 032c FFF7FEFF 		bl	HAL_GetTick
 740              	.LVL58:
 741 0330 0546     		mov	r5, r0
 742              	.LVL59:
 743              	.L40:
 744              	.LBB204:
 745              	.LBB205:
 746              		.loc 2 531 0
 747 0332 0223     		movs	r3, #2
 748              		.syntax unified
 749              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 750 0334 93FAA3F3 		rbit r3, r3
 751              	@ 0 "" 2
 752              	.LVL60:
 753              		.thumb
 754              		.syntax unified
 755              	.LBE205:
 756              	.LBE204:
 395:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 757              		.loc 1 395 0
 758 0338 A34B     		ldr	r3, .L127
 759 033a 1968     		ldr	r1, [r3]
 760              	.LVL61:
 761              	.LBB206:
 762              	.LBB207:
 763              		.loc 2 531 0
 764 033c 0223     		movs	r3, #2
 765              		.syntax unified
 766              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 767 033e 93FAA3F3 		rbit r3, r3
 768              	@ 0 "" 2
 769              	.LVL62:
 770              		.thumb
 771              		.syntax unified
 772              	.LBE207:
 773              	.LBE206:
 395:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 774              		.loc 1 395 0
 775 0342 B3FA83F3 		clz	r3, r3
 776 0346 03F01F03 		and	r3, r3, #31
 777 034a 0122     		movs	r2, #1
 778 034c 02FA03F3 		lsl	r3, r2, r3
 779 0350 1942     		tst	r1, r3
 780 0352 92D0     		beq	.L27
 397:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           {
 781              		.loc 1 397 0
 782 0354 FFF7FEFF 		bl	HAL_GetTick
 783              	.LVL63:
 784 0358 401B     		subs	r0, r0, r5
ARM GAS  /tmp/ccdVnXpZ.s 			page 32


 785 035a 0228     		cmp	r0, #2
 786 035c E9D9     		bls	.L40
 399:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           }
 787              		.loc 1 399 0
 788 035e 0320     		movs	r0, #3
 789 0360 DDE1     		b	.L13
 790              	.LVL64:
 791              	.L46:
 792              	.LBB208:
 793              	.LBB209:
 794              		.loc 2 531 0
 795 0362 0122     		movs	r2, #1
 796              		.syntax unified
 797              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 798 0364 92FAA2F2 		rbit r2, r2
 799              	@ 0 "" 2
 800              	.LVL65:
 801              		.thumb
 802              		.syntax unified
 803              	.LBE209:
 804              	.LBE208:
 426:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 427:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 428:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 429:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     else
 430:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 431:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Disable the Internal Low Speed oscillator (LSI). */
 432:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       __HAL_RCC_LSI_DISABLE();
 805              		.loc 1 432 0
 806 0368 B2FA82F2 		clz	r2, r2
 807 036c 974B     		ldr	r3, .L127+4
 808 036e 1344     		add	r3, r3, r2
 809 0370 9B00     		lsls	r3, r3, #2
 810 0372 0022     		movs	r2, #0
 811 0374 1A60     		str	r2, [r3]
 433:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       
 434:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Get Start Tick */
 435:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 812              		.loc 1 435 0
 813 0376 FFF7FEFF 		bl	HAL_GetTick
 814              	.LVL66:
 815 037a 0546     		mov	r5, r0
 816              	.LVL67:
 817              	.L49:
 818              	.LBB210:
 819              	.LBB211:
 820              		.loc 2 531 0
 821 037c 0223     		movs	r3, #2
 822              		.syntax unified
 823              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 824 037e 93FAA3F2 		rbit r2, r3
 825              	@ 0 "" 2
 826              	.LVL68:
 827              		.thumb
 828              		.syntax unified
 829              	.LBE211:
 830              	.LBE210:
ARM GAS  /tmp/ccdVnXpZ.s 			page 33


 831              	.LBB212:
 832              	.LBB213:
 833              		.syntax unified
 834              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 835 0382 93FAA3F2 		rbit r2, r3
 836              	@ 0 "" 2
 837              	.LVL69:
 838              		.thumb
 839              		.syntax unified
 840              	.LBE213:
 841              	.LBE212:
 842              	.LBB214:
 843              	.LBB215:
 844              		.syntax unified
 845              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 846 0386 93FAA3F2 		rbit r2, r3
 847              	@ 0 "" 2
 848              	.LVL70:
 849              		.thumb
 850              		.syntax unified
 851              	.LBE215:
 852              	.LBE214:
 436:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       
 437:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Wait till LSI is disabled */  
 438:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 853              		.loc 1 438 0
 854 038a 8F4A     		ldr	r2, .L127
 855 038c 516A     		ldr	r1, [r2, #36]
 856              	.LVL71:
 857              	.LBB216:
 858              	.LBB217:
 859              		.loc 2 531 0
 860              		.syntax unified
 861              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 862 038e 93FAA3F3 		rbit r3, r3
 863              	@ 0 "" 2
 864              	.LVL72:
 865              		.thumb
 866              		.syntax unified
 867              	.LBE217:
 868              	.LBE216:
 869              		.loc 1 438 0
 870 0392 B3FA83F3 		clz	r3, r3
 871 0396 03F01F03 		and	r3, r3, #31
 872 039a 0122     		movs	r2, #1
 873 039c 02FA03F3 		lsl	r3, r2, r3
 874 03a0 1942     		tst	r1, r3
 875 03a2 06D0     		beq	.L44
 439:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 440:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 876              		.loc 1 440 0
 877 03a4 FFF7FEFF 		bl	HAL_GetTick
 878              	.LVL73:
 879 03a8 401B     		subs	r0, r0, r5
 880 03aa 0228     		cmp	r0, #2
 881 03ac E6D9     		bls	.L49
 441:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
ARM GAS  /tmp/ccdVnXpZ.s 			page 34


 442:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           return HAL_TIMEOUT;
 882              		.loc 1 442 0
 883 03ae 0320     		movs	r0, #3
 884 03b0 B5E1     		b	.L13
 885              	.LVL74:
 886              	.L44:
 443:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 444:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 445:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 446:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 447:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /*------------------------------ LSE Configuration -------------------------*/ 
 448:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 887              		.loc 1 448 0
 888 03b2 2368     		ldr	r3, [r4]
 889 03b4 13F0040F 		tst	r3, #4
 890 03b8 00F0BE80 		beq	.L51
 891              	.LVL75:
 892              	.LBB218:
 449:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 450:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     FlagStatus       pwrclkchanged = RESET;
 451:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
 452:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Check the parameters */
 453:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));
 893              		.loc 1 453 0
 894 03bc E368     		ldr	r3, [r4, #12]
 895 03be 012B     		cmp	r3, #1
 896 03c0 06D9     		bls	.L52
 897              		.loc 1 453 0 is_stmt 0 discriminator 1
 898 03c2 052B     		cmp	r3, #5
 899 03c4 04D0     		beq	.L52
 900              		.loc 1 453 0 discriminator 2
 901 03c6 40F2C511 		movw	r1, #453
 902 03ca 8148     		ldr	r0, .L127+8
 903 03cc FFF7FEFF 		bl	assert_failed
 904              	.LVL76:
 905              	.L52:
 454:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 455:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Update LSE configuration in Backup Domain control register    */
 456:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Requires to enable write access to Backup Domain of necessary */
 457:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 906              		.loc 1 457 0 is_stmt 1
 907 03d0 7D4B     		ldr	r3, .L127
 908 03d2 DB69     		ldr	r3, [r3, #28]
 909 03d4 13F0805F 		tst	r3, #268435456
 910 03d8 26D1     		bne	.L95
 911              	.LBB219:
 458:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 459:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       __HAL_RCC_PWR_CLK_ENABLE();
 912              		.loc 1 459 0
 913 03da 7B4B     		ldr	r3, .L127
 914 03dc DA69     		ldr	r2, [r3, #28]
 915 03de 42F08052 		orr	r2, r2, #268435456
 916 03e2 DA61     		str	r2, [r3, #28]
 917 03e4 DB69     		ldr	r3, [r3, #28]
 918 03e6 03F08053 		and	r3, r3, #268435456
 919 03ea 0193     		str	r3, [sp, #4]
 920 03ec 019B     		ldr	r3, [sp, #4]
ARM GAS  /tmp/ccdVnXpZ.s 			page 35


 921              	.LVL77:
 922              	.LBE219:
 460:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       pwrclkchanged = SET;
 923              		.loc 1 460 0
 924 03ee 0125     		movs	r5, #1
 925              	.LVL78:
 926              	.L53:
 461:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 462:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
 463:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 927              		.loc 1 463 0
 928 03f0 784B     		ldr	r3, .L127+12
 929 03f2 1B68     		ldr	r3, [r3]
 930 03f4 13F4807F 		tst	r3, #256
 931 03f8 18D0     		beq	.L114
 932              	.L54:
 464:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 465:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Enable write access to Backup domain */
 466:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       SET_BIT(PWR->CR, PWR_CR_DBP);
 467:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       
 468:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Wait for Backup domain Write protection disable */
 469:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 470:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 471:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 472:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 473:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 474:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 475:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           return HAL_TIMEOUT;
 476:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 477:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 478:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 479:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 480:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Set the new LSE configuration -----------------------------------------*/
 481:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 933              		.loc 1 481 0
 934 03fa E368     		ldr	r3, [r4, #12]
 935 03fc 012B     		cmp	r3, #1
 936 03fe 29D0     		beq	.L115
 937              		.loc 1 481 0 is_stmt 0 discriminator 2
 938 0400 73BB     		cbnz	r3, .L59
 939              		.loc 1 481 0 discriminator 3
 940 0402 03F18043 		add	r3, r3, #1073741824
 941 0406 03F50433 		add	r3, r3, #135168
 942 040a 1A6A     		ldr	r2, [r3, #32]
 943 040c 22F00102 		bic	r2, r2, #1
 944 0410 1A62     		str	r2, [r3, #32]
 945 0412 1A6A     		ldr	r2, [r3, #32]
 946 0414 22F00402 		bic	r2, r2, #4
 947 0418 1A62     		str	r2, [r3, #32]
 948              	.L58:
 482:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Check the LSE State */
 483:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if(RCC_OscInitStruct->LSEState != RCC_LSE_OFF)
 949              		.loc 1 483 0 is_stmt 1
 950 041a E368     		ldr	r3, [r4, #12]
 951 041c 002B     		cmp	r3, #0
 952 041e 5DD0     		beq	.L61
 484:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
ARM GAS  /tmp/ccdVnXpZ.s 			page 36


 485:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Get Start Tick */
 486:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 953              		.loc 1 486 0
 954 0420 FFF7FEFF 		bl	HAL_GetTick
 955              	.LVL79:
 956 0424 0646     		mov	r6, r0
 957              	.LVL80:
 487:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       
 488:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Wait till LSE is ready */  
 489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 958              		.loc 1 489 0
 959 0426 47E0     		b	.L62
 960              	.LVL81:
 961              	.L95:
 450:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
 962              		.loc 1 450 0
 963 0428 0025     		movs	r5, #0
 964 042a E1E7     		b	.L53
 965              	.LVL82:
 966              	.L114:
 466:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       
 967              		.loc 1 466 0
 968 042c 694A     		ldr	r2, .L127+12
 969 042e 1368     		ldr	r3, [r2]
 970 0430 43F48073 		orr	r3, r3, #256
 971 0434 1360     		str	r3, [r2]
 469:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 972              		.loc 1 469 0
 973 0436 FFF7FEFF 		bl	HAL_GetTick
 974              	.LVL83:
 975 043a 0646     		mov	r6, r0
 976              	.LVL84:
 977              	.L55:
 471:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 978              		.loc 1 471 0
 979 043c 654B     		ldr	r3, .L127+12
 980 043e 1B68     		ldr	r3, [r3]
 981 0440 13F4807F 		tst	r3, #256
 982 0444 D9D1     		bne	.L54
 473:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 983              		.loc 1 473 0
 984 0446 FFF7FEFF 		bl	HAL_GetTick
 985              	.LVL85:
 986 044a 801B     		subs	r0, r0, r6
 987 044c 6428     		cmp	r0, #100
 988 044e F5D9     		bls	.L55
 475:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 989              		.loc 1 475 0
 990 0450 0320     		movs	r0, #3
 991 0452 64E1     		b	.L13
 992              	.LVL86:
 993              	.L115:
 481:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Check the LSE State */
 994              		.loc 1 481 0 discriminator 1
 995 0454 5C4A     		ldr	r2, .L127
 996 0456 136A     		ldr	r3, [r2, #32]
 997 0458 43F00103 		orr	r3, r3, #1
ARM GAS  /tmp/ccdVnXpZ.s 			page 37


 998 045c 1362     		str	r3, [r2, #32]
 999 045e DCE7     		b	.L58
 1000              	.L59:
 481:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Check the LSE State */
 1001              		.loc 1 481 0 is_stmt 0 discriminator 4
 1002 0460 052B     		cmp	r3, #5
 1003 0462 09D0     		beq	.L116
 481:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Check the LSE State */
 1004              		.loc 1 481 0 discriminator 6
 1005 0464 584B     		ldr	r3, .L127
 1006 0466 1A6A     		ldr	r2, [r3, #32]
 1007 0468 22F00102 		bic	r2, r2, #1
 1008 046c 1A62     		str	r2, [r3, #32]
 1009 046e 1A6A     		ldr	r2, [r3, #32]
 1010 0470 22F00402 		bic	r2, r2, #4
 1011 0474 1A62     		str	r2, [r3, #32]
 1012 0476 D0E7     		b	.L58
 1013              	.L116:
 481:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Check the LSE State */
 1014              		.loc 1 481 0 discriminator 5
 1015 0478 534B     		ldr	r3, .L127
 1016 047a 1A6A     		ldr	r2, [r3, #32]
 1017 047c 42F00402 		orr	r2, r2, #4
 1018 0480 1A62     		str	r2, [r3, #32]
 1019 0482 1A6A     		ldr	r2, [r3, #32]
 1020 0484 42F00102 		orr	r2, r2, #1
 1021 0488 1A62     		str	r2, [r3, #32]
 1022 048a C6E7     		b	.L58
 1023              	.LVL87:
 1024              	.L117:
 1025              		.loc 1 489 0 is_stmt 1 discriminator 4
 1026 048c 4E4B     		ldr	r3, .L127
 1027 048e 196A     		ldr	r1, [r3, #32]
 1028              	.L64:
 1029              	.LVL88:
 1030              	.LBB220:
 1031              	.LBB221:
 1032              		.loc 2 531 0 discriminator 11
 1033 0490 0223     		movs	r3, #2
 1034              		.syntax unified
 1035              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1036 0492 93FAA3F3 		rbit r3, r3
 1037              	@ 0 "" 2
 1038              	.LVL89:
 1039              		.thumb
 1040              		.syntax unified
 1041              	.LBE221:
 1042              	.LBE220:
 1043              		.loc 1 489 0 discriminator 11
 1044 0496 B3FA83F3 		clz	r3, r3
 1045 049a 03F01F03 		and	r3, r3, #31
 1046 049e 0122     		movs	r2, #1
 1047 04a0 02FA03F3 		lsl	r3, r2, r3
 1048 04a4 1942     		tst	r1, r3
 1049 04a6 45D1     		bne	.L66
 490:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 491:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
ARM GAS  /tmp/ccdVnXpZ.s 			page 38


 1050              		.loc 1 491 0
 1051 04a8 FFF7FEFF 		bl	HAL_GetTick
 1052              	.LVL90:
 1053 04ac 801B     		subs	r0, r0, r6
 1054 04ae 41F28833 		movw	r3, #5000
 1055 04b2 9842     		cmp	r0, r3
 1056 04b4 00F22E81 		bhi	.L97
 1057              	.L62:
 1058              	.LVL91:
 1059              	.LBB222:
 1060              	.LBB223:
 1061              		.loc 2 531 0
 1062 04b8 0223     		movs	r3, #2
 1063              		.syntax unified
 1064              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1065 04ba 93FAA3F2 		rbit r2, r3
 1066              	@ 0 "" 2
 1067              	.LVL92:
 1068              		.thumb
 1069              		.syntax unified
 1070              	.LBE223:
 1071              	.LBE222:
 1072              	.LBB224:
 1073              	.LBB225:
 1074              		.syntax unified
 1075              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1076 04be 93FAA3F3 		rbit r3, r3
 1077              	@ 0 "" 2
 1078              	.LVL93:
 1079              		.thumb
 1080              		.syntax unified
 1081              	.LBE225:
 1082              	.LBE224:
 489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 1083              		.loc 1 489 0
 1084 04c2 B3FA83F3 		clz	r3, r3
 1085 04c6 5B09     		lsrs	r3, r3, #5
 1086 04c8 43F00203 		orr	r3, r3, #2
 1087 04cc 022B     		cmp	r3, #2
 1088 04ce DDD0     		beq	.L117
 1089              	.LVL94:
 1090              	.LBB226:
 1091              	.LBB227:
 1092              		.loc 2 531 0
 1093 04d0 0223     		movs	r3, #2
 1094              		.syntax unified
 1095              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1096 04d2 93FAA3F3 		rbit r3, r3
 1097              	@ 0 "" 2
 1098              	.LVL95:
 1099              		.thumb
 1100              		.syntax unified
 1101              	.LBE227:
 1102              	.LBE226:
 489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 1103              		.loc 1 489 0
 1104 04d6 3C4B     		ldr	r3, .L127
ARM GAS  /tmp/ccdVnXpZ.s 			page 39


 1105 04d8 596A     		ldr	r1, [r3, #36]
 1106 04da D9E7     		b	.L64
 1107              	.LVL96:
 1108              	.L61:
 492:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 493:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           return HAL_TIMEOUT;
 494:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 495:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 496:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 497:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     else
 498:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 499:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Get Start Tick */
 500:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 1109              		.loc 1 500 0
 1110 04dc FFF7FEFF 		bl	HAL_GetTick
 1111              	.LVL97:
 1112 04e0 0646     		mov	r6, r0
 1113              	.LVL98:
 501:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       
 502:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Wait till LSE is disabled */  
 503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 1114              		.loc 1 503 0
 1115 04e2 15E0     		b	.L67
 1116              	.LVL99:
 1117              	.L118:
 1118              		.loc 1 503 0 is_stmt 0 discriminator 4
 1119 04e4 384B     		ldr	r3, .L127
 1120 04e6 196A     		ldr	r1, [r3, #32]
 1121              	.L69:
 1122              	.LVL100:
 1123              	.LBB228:
 1124              	.LBB229:
 1125              		.loc 2 531 0 is_stmt 1 discriminator 11
 1126 04e8 0223     		movs	r3, #2
 1127              		.syntax unified
 1128              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1129 04ea 93FAA3F3 		rbit r3, r3
 1130              	@ 0 "" 2
 1131              	.LVL101:
 1132              		.thumb
 1133              		.syntax unified
 1134              	.LBE229:
 1135              	.LBE228:
 1136              		.loc 1 503 0 discriminator 11
 1137 04ee B3FA83F3 		clz	r3, r3
 1138 04f2 03F01F03 		and	r3, r3, #31
 1139 04f6 0122     		movs	r2, #1
 1140 04f8 02FA03F3 		lsl	r3, r2, r3
 1141 04fc 1942     		tst	r1, r3
 1142 04fe 19D0     		beq	.L66
 504:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 505:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 1143              		.loc 1 505 0
 1144 0500 FFF7FEFF 		bl	HAL_GetTick
 1145              	.LVL102:
 1146 0504 801B     		subs	r0, r0, r6
 1147 0506 41F28833 		movw	r3, #5000
ARM GAS  /tmp/ccdVnXpZ.s 			page 40


 1148 050a 9842     		cmp	r0, r3
 1149 050c 00F20481 		bhi	.L98
 1150              	.L67:
 1151              	.LVL103:
 1152              	.LBB230:
 1153              	.LBB231:
 1154              		.loc 2 531 0
 1155 0510 0223     		movs	r3, #2
 1156              		.syntax unified
 1157              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1158 0512 93FAA3F2 		rbit r2, r3
 1159              	@ 0 "" 2
 1160              	.LVL104:
 1161              		.thumb
 1162              		.syntax unified
 1163              	.LBE231:
 1164              	.LBE230:
 1165              	.LBB232:
 1166              	.LBB233:
 1167              		.syntax unified
 1168              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1169 0516 93FAA3F3 		rbit r3, r3
 1170              	@ 0 "" 2
 1171              	.LVL105:
 1172              		.thumb
 1173              		.syntax unified
 1174              	.LBE233:
 1175              	.LBE232:
 503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 1176              		.loc 1 503 0
 1177 051a B3FA83F3 		clz	r3, r3
 1178 051e 5B09     		lsrs	r3, r3, #5
 1179 0520 43F00203 		orr	r3, r3, #2
 1180 0524 022B     		cmp	r3, #2
 1181 0526 DDD0     		beq	.L118
 1182              	.LVL106:
 1183              	.LBB234:
 1184              	.LBB235:
 1185              		.loc 2 531 0
 1186 0528 0223     		movs	r3, #2
 1187              		.syntax unified
 1188              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1189 052a 93FAA3F3 		rbit r3, r3
 1190              	@ 0 "" 2
 1191              	.LVL107:
 1192              		.thumb
 1193              		.syntax unified
 1194              	.LBE235:
 1195              	.LBE234:
 503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 1196              		.loc 1 503 0
 1197 052e 264B     		ldr	r3, .L127
 1198 0530 596A     		ldr	r1, [r3, #36]
 1199 0532 D9E7     		b	.L69
 1200              	.L66:
 506:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 507:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           return HAL_TIMEOUT;
ARM GAS  /tmp/ccdVnXpZ.s 			page 41


 508:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 509:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 510:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 511:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 512:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Require to disable power clock if necessary */
 513:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if(pwrclkchanged == SET)
 1201              		.loc 1 513 0
 1202 0534 002D     		cmp	r5, #0
 1203 0536 3AD1     		bne	.L119
 1204              	.LVL108:
 1205              	.L51:
 1206              	.LBE218:
 514:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 515:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       __HAL_RCC_PWR_CLK_DISABLE();
 516:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 517:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 518:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 519:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /*-------------------------------- PLL Configuration -----------------------*/
 520:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Check the parameters */
 521:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
 1207              		.loc 1 521 0
 1208 0538 E369     		ldr	r3, [r4, #28]
 1209 053a 022B     		cmp	r3, #2
 1210 053c 3DD8     		bhi	.L120
 1211              	.L71:
 522:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 1212              		.loc 1 522 0
 1213 053e E369     		ldr	r3, [r4, #28]
 1214 0540 002B     		cmp	r3, #0
 1215 0542 00F0EB80 		beq	.L99
 523:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 524:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Check if the PLL is used as system clock or not */
 525:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 1216              		.loc 1 525 0
 1217 0546 204A     		ldr	r2, .L127
 1218 0548 5268     		ldr	r2, [r2, #4]
 1219 054a 02F00C02 		and	r2, r2, #12
 1220 054e 082A     		cmp	r2, #8
 1221 0550 00F0E780 		beq	.L100
 526:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     { 
 527:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 1222              		.loc 1 527 0
 1223 0554 022B     		cmp	r3, #2
 1224 0556 3FD0     		beq	.L121
 1225              	.LVL109:
 1226              	.LBB236:
 1227              	.LBB237:
 1228              		.loc 2 531 0
 1229 0558 4FF08073 		mov	r3, #16777216
 1230              		.syntax unified
 1231              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1232 055c 93FAA3F3 		rbit r3, r3
 1233              	@ 0 "" 2
 1234              	.LVL110:
 1235              		.thumb
 1236              		.syntax unified
 1237              	.LBE237:
ARM GAS  /tmp/ccdVnXpZ.s 			page 42


 1238              	.LBE236:
 528:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 529:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Check the parameters */
 530:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
 531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         assert_param(IS_RCC_PLL_MUL(RCC_OscInitStruct->PLL.PLLMUL));
 532:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #if   defined(RCC_CFGR_PLLSRC_HSI_PREDIV)
 533:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         assert_param(IS_RCC_PREDIV(RCC_OscInitStruct->PLL.PREDIV));
 534:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #endif
 535:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 536:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Disable the main PLL. */
 537:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         __HAL_RCC_PLL_DISABLE();
 538:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 539:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Get Start Tick */
 540:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 541:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 542:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Wait till PLL is disabled */
 543:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 544:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 545:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 546:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           {
 547:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****             return HAL_TIMEOUT;
 548:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           }
 549:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 551:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #if defined(RCC_CFGR_PLLSRC_HSI_PREDIV)
 552:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Configure the main PLL clock source, predivider and multiplication factor. */
 553:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 554:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PREDIV,
 555:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PLLMUL);
 556:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #else
 557:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Configure the main PLL clock source and multiplication factor. */
 558:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 559:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****                            RCC_OscInitStruct->PLL.PLLMUL);
 560:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #endif /* RCC_CFGR_PLLSRC_HSI_PREDIV */
 561:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Enable the main PLL. */
 562:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         __HAL_RCC_PLL_ENABLE();
 563:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 564:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Get Start Tick */
 565:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 566:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 567:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Wait till PLL is ready */
 568:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == RESET)
 569:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 570:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 571:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           {
 572:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****             return HAL_TIMEOUT;
 573:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           }
 574:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 575:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 576:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       else
 577:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 578:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Disable the main PLL. */
 579:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         __HAL_RCC_PLL_DISABLE();
 1239              		.loc 1 579 0
 1240 0560 B3FA83F3 		clz	r3, r3
 1241 0564 03F18453 		add	r3, r3, #276824064
 1242 0568 03F58413 		add	r3, r3, #1081344
ARM GAS  /tmp/ccdVnXpZ.s 			page 43


 1243 056c 9B00     		lsls	r3, r3, #2
 1244 056e 0022     		movs	r2, #0
 1245 0570 1A60     		str	r2, [r3]
 580:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****  
 581:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Get Start Tick */
 582:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 1246              		.loc 1 582 0
 1247 0572 FFF7FEFF 		bl	HAL_GetTick
 1248              	.LVL111:
 1249 0576 0446     		mov	r4, r0
 1250              	.LVL112:
 1251              	.L83:
 1252              	.LBB238:
 1253              	.LBB239:
 1254              		.loc 2 531 0
 1255 0578 4FF00073 		mov	r3, #33554432
 1256              		.syntax unified
 1257              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1258 057c 93FAA3F3 		rbit r3, r3
 1259              	@ 0 "" 2
 1260              	.LVL113:
 1261              		.thumb
 1262              		.syntax unified
 1263              	.LBE239:
 1264              	.LBE238:
 583:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 584:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Wait till PLL is disabled */  
 585:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 1265              		.loc 1 585 0
 1266 0580 114B     		ldr	r3, .L127
 1267 0582 1968     		ldr	r1, [r3]
 1268              	.LVL114:
 1269              	.LBB240:
 1270              	.LBB241:
 1271              		.loc 2 531 0
 1272 0584 4FF00073 		mov	r3, #33554432
 1273              		.syntax unified
 1274              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1275 0588 93FAA3F3 		rbit r3, r3
 1276              	@ 0 "" 2
 1277              	.LVL115:
 1278              		.thumb
 1279              		.syntax unified
 1280              	.LBE241:
 1281              	.LBE240:
 1282              		.loc 1 585 0
 1283 058c B3FA83F3 		clz	r3, r3
 1284 0590 03F01F03 		and	r3, r3, #31
 1285 0594 0122     		movs	r2, #1
 1286 0596 02FA03F3 		lsl	r3, r2, r3
 1287 059a 1942     		tst	r1, r3
 1288 059c 00F0B680 		beq	.L122
 586:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 587:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 1289              		.loc 1 587 0
 1290 05a0 FFF7FEFF 		bl	HAL_GetTick
 1291              	.LVL116:
ARM GAS  /tmp/ccdVnXpZ.s 			page 44


 1292 05a4 001B     		subs	r0, r0, r4
 1293 05a6 0228     		cmp	r0, #2
 1294 05a8 E6D9     		bls	.L83
 588:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           {
 589:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****             return HAL_TIMEOUT;
 1295              		.loc 1 589 0
 1296 05aa 0320     		movs	r0, #3
 1297 05ac B7E0     		b	.L13
 1298              	.LVL117:
 1299              	.L119:
 1300              	.LBB242:
 515:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 1301              		.loc 1 515 0
 1302 05ae 064A     		ldr	r2, .L127
 1303 05b0 D369     		ldr	r3, [r2, #28]
 1304 05b2 23F08053 		bic	r3, r3, #268435456
 1305 05b6 D361     		str	r3, [r2, #28]
 1306 05b8 BEE7     		b	.L51
 1307              	.LVL118:
 1308              	.L120:
 1309              	.LBE242:
 521:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 1310              		.loc 1 521 0 discriminator 1
 1311 05ba 40F20921 		movw	r1, #521
 1312 05be 0448     		ldr	r0, .L127+8
 1313 05c0 FFF7FEFF 		bl	assert_failed
 1314              	.LVL119:
 1315 05c4 BBE7     		b	.L71
 1316              	.L128:
 1317 05c6 00BF     		.align	2
 1318              	.L127:
 1319 05c8 00100240 		.word	1073876992
 1320 05cc 20819010 		.word	277905696
 1321 05d0 00000000 		.word	.LC0
 1322 05d4 00700040 		.word	1073770496
 1323              	.L121:
 530:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         assert_param(IS_RCC_PLL_MUL(RCC_OscInitStruct->PLL.PLLMUL));
 1324              		.loc 1 530 0
 1325 05d8 236A     		ldr	r3, [r4, #32]
 1326 05da 3BB1     		cbz	r3, .L73
 530:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         assert_param(IS_RCC_PLL_MUL(RCC_OscInitStruct->PLL.PLLMUL));
 1327              		.loc 1 530 0 is_stmt 0 discriminator 1
 1328 05dc B3F5803F 		cmp	r3, #65536
 1329 05e0 04D0     		beq	.L73
 530:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         assert_param(IS_RCC_PLL_MUL(RCC_OscInitStruct->PLL.PLLMUL));
 1330              		.loc 1 530 0 discriminator 2
 1331 05e2 40F21221 		movw	r1, #530
 1332 05e6 5048     		ldr	r0, .L129
 1333 05e8 FFF7FEFF 		bl	assert_failed
 1334              	.LVL120:
 1335              	.L73:
 531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #if   defined(RCC_CFGR_PLLSRC_HSI_PREDIV)
 1336              		.loc 1 531 0 is_stmt 1
 1337 05ec 636A     		ldr	r3, [r4, #36]
 1338 05ee 73B3     		cbz	r3, .L74
 531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #if   defined(RCC_CFGR_PLLSRC_HSI_PREDIV)
 1339              		.loc 1 531 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/ccdVnXpZ.s 			page 45


 1340 05f0 B3F5802F 		cmp	r3, #262144
 1341 05f4 2BD0     		beq	.L74
 531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #if   defined(RCC_CFGR_PLLSRC_HSI_PREDIV)
 1342              		.loc 1 531 0 discriminator 2
 1343 05f6 B3F5002F 		cmp	r3, #524288
 1344 05fa 28D0     		beq	.L74
 531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #if   defined(RCC_CFGR_PLLSRC_HSI_PREDIV)
 1345              		.loc 1 531 0 discriminator 3
 1346 05fc B3F5402F 		cmp	r3, #786432
 1347 0600 25D0     		beq	.L74
 531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #if   defined(RCC_CFGR_PLLSRC_HSI_PREDIV)
 1348              		.loc 1 531 0 discriminator 4
 1349 0602 B3F5801F 		cmp	r3, #1048576
 1350 0606 22D0     		beq	.L74
 531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #if   defined(RCC_CFGR_PLLSRC_HSI_PREDIV)
 1351              		.loc 1 531 0 discriminator 5
 1352 0608 B3F5A01F 		cmp	r3, #1310720
 1353 060c 1FD0     		beq	.L74
 531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #if   defined(RCC_CFGR_PLLSRC_HSI_PREDIV)
 1354              		.loc 1 531 0 discriminator 6
 1355 060e B3F5C01F 		cmp	r3, #1572864
 1356 0612 1CD0     		beq	.L74
 531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #if   defined(RCC_CFGR_PLLSRC_HSI_PREDIV)
 1357              		.loc 1 531 0 discriminator 7
 1358 0614 B3F5E01F 		cmp	r3, #1835008
 1359 0618 19D0     		beq	.L74
 531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #if   defined(RCC_CFGR_PLLSRC_HSI_PREDIV)
 1360              		.loc 1 531 0 discriminator 8
 1361 061a B3F5001F 		cmp	r3, #2097152
 1362 061e 16D0     		beq	.L74
 531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #if   defined(RCC_CFGR_PLLSRC_HSI_PREDIV)
 1363              		.loc 1 531 0 discriminator 9
 1364 0620 B3F5101F 		cmp	r3, #2359296
 1365 0624 13D0     		beq	.L74
 531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #if   defined(RCC_CFGR_PLLSRC_HSI_PREDIV)
 1366              		.loc 1 531 0 discriminator 10
 1367 0626 B3F5201F 		cmp	r3, #2621440
 1368 062a 10D0     		beq	.L74
 531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #if   defined(RCC_CFGR_PLLSRC_HSI_PREDIV)
 1369              		.loc 1 531 0 discriminator 11
 1370 062c B3F5301F 		cmp	r3, #2883584
 1371 0630 0DD0     		beq	.L74
 531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #if   defined(RCC_CFGR_PLLSRC_HSI_PREDIV)
 1372              		.loc 1 531 0 discriminator 12
 1373 0632 B3F5401F 		cmp	r3, #3145728
 1374 0636 0AD0     		beq	.L74
 531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #if   defined(RCC_CFGR_PLLSRC_HSI_PREDIV)
 1375              		.loc 1 531 0 discriminator 13
 1376 0638 B3F5501F 		cmp	r3, #3407872
 1377 063c 07D0     		beq	.L74
 531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #if   defined(RCC_CFGR_PLLSRC_HSI_PREDIV)
 1378              		.loc 1 531 0 discriminator 14
 1379 063e B3F5601F 		cmp	r3, #3670016
 1380 0642 04D0     		beq	.L74
 531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #if   defined(RCC_CFGR_PLLSRC_HSI_PREDIV)
 1381              		.loc 1 531 0 discriminator 15
 1382 0644 40F21321 		movw	r1, #531
ARM GAS  /tmp/ccdVnXpZ.s 			page 46


 1383 0648 3748     		ldr	r0, .L129
 1384 064a FFF7FEFF 		bl	assert_failed
 1385              	.LVL121:
 1386              	.L74:
 1387              	.LBB243:
 1388              	.LBB244:
 1389              		.loc 2 531 0 is_stmt 1
 1390 064e 4FF08073 		mov	r3, #16777216
 1391              		.syntax unified
 1392              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1393 0652 93FAA3F3 		rbit r3, r3
 1394              	@ 0 "" 2
 1395              	.LVL122:
 1396              		.thumb
 1397              		.syntax unified
 1398              	.LBE244:
 1399              	.LBE243:
 537:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 1400              		.loc 1 537 0
 1401 0656 B3FA83F3 		clz	r3, r3
 1402 065a 03F18453 		add	r3, r3, #276824064
 1403 065e 03F58413 		add	r3, r3, #1081344
 1404 0662 9B00     		lsls	r3, r3, #2
 1405 0664 0022     		movs	r2, #0
 1406 0666 1A60     		str	r2, [r3]
 540:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 1407              		.loc 1 540 0
 1408 0668 FFF7FEFF 		bl	HAL_GetTick
 1409              	.LVL123:
 1410 066c 0546     		mov	r5, r0
 1411              	.LVL124:
 1412              	.L75:
 1413              	.LBB245:
 1414              	.LBB246:
 1415              		.loc 2 531 0
 1416 066e 4FF00073 		mov	r3, #33554432
 1417              		.syntax unified
 1418              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1419 0672 93FAA3F3 		rbit r3, r3
 1420              	@ 0 "" 2
 1421              	.LVL125:
 1422              		.thumb
 1423              		.syntax unified
 1424              	.LBE246:
 1425              	.LBE245:
 543:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 1426              		.loc 1 543 0
 1427 0676 2D4B     		ldr	r3, .L129+4
 1428 0678 1968     		ldr	r1, [r3]
 1429              	.LVL126:
 1430              	.LBB247:
 1431              	.LBB248:
 1432              		.loc 2 531 0
 1433 067a 4FF00073 		mov	r3, #33554432
 1434              		.syntax unified
 1435              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1436 067e 93FAA3F3 		rbit r3, r3
ARM GAS  /tmp/ccdVnXpZ.s 			page 47


 1437              	@ 0 "" 2
 1438              	.LVL127:
 1439              		.thumb
 1440              		.syntax unified
 1441              	.LBE248:
 1442              	.LBE247:
 543:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 1443              		.loc 1 543 0
 1444 0682 B3FA83F3 		clz	r3, r3
 1445 0686 03F01F03 		and	r3, r3, #31
 1446 068a 0122     		movs	r2, #1
 1447 068c 02FA03F3 		lsl	r3, r2, r3
 1448 0690 1942     		tst	r1, r3
 1449 0692 06D0     		beq	.L123
 545:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           {
 1450              		.loc 1 545 0
 1451 0694 FFF7FEFF 		bl	HAL_GetTick
 1452              	.LVL128:
 1453 0698 401B     		subs	r0, r0, r5
 1454 069a 0228     		cmp	r0, #2
 1455 069c E7D9     		bls	.L75
 547:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           }
 1456              		.loc 1 547 0
 1457 069e 0320     		movs	r0, #3
 1458 06a0 3DE0     		b	.L13
 1459              	.L123:
 558:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****                            RCC_OscInitStruct->PLL.PLLMUL);
 1460              		.loc 1 558 0
 1461 06a2 2249     		ldr	r1, .L129+4
 1462 06a4 4B68     		ldr	r3, [r1, #4]
 1463 06a6 23F47413 		bic	r3, r3, #3997696
 1464 06aa 626A     		ldr	r2, [r4, #36]
 1465 06ac 206A     		ldr	r0, [r4, #32]
 1466 06ae 0243     		orrs	r2, r2, r0
 1467 06b0 1343     		orrs	r3, r3, r2
 1468 06b2 4B60     		str	r3, [r1, #4]
 1469              	.LVL129:
 1470              	.LBB249:
 1471              	.LBB250:
 1472              		.loc 2 531 0
 1473 06b4 4FF08073 		mov	r3, #16777216
 1474              		.syntax unified
 1475              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1476 06b8 93FAA3F3 		rbit r3, r3
 1477              	@ 0 "" 2
 1478              	.LVL130:
 1479              		.thumb
 1480              		.syntax unified
 1481              	.LBE250:
 1482              	.LBE249:
 562:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 1483              		.loc 1 562 0
 1484 06bc B3FA83F3 		clz	r3, r3
 1485 06c0 03F18453 		add	r3, r3, #276824064
 1486 06c4 03F58413 		add	r3, r3, #1081344
 1487 06c8 9B00     		lsls	r3, r3, #2
 1488 06ca 0122     		movs	r2, #1
ARM GAS  /tmp/ccdVnXpZ.s 			page 48


 1489 06cc 1A60     		str	r2, [r3]
 565:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 1490              		.loc 1 565 0
 1491 06ce FFF7FEFF 		bl	HAL_GetTick
 1492              	.LVL131:
 1493 06d2 0446     		mov	r4, r0
 1494              	.LVL132:
 1495              	.L79:
 1496              	.LBB251:
 1497              	.LBB252:
 1498              		.loc 2 531 0
 1499 06d4 4FF00073 		mov	r3, #33554432
 1500              		.syntax unified
 1501              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1502 06d8 93FAA3F3 		rbit r3, r3
 1503              	@ 0 "" 2
 1504              	.LVL133:
 1505              		.thumb
 1506              		.syntax unified
 1507              	.LBE252:
 1508              	.LBE251:
 568:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 1509              		.loc 1 568 0
 1510 06dc 134B     		ldr	r3, .L129+4
 1511 06de 1968     		ldr	r1, [r3]
 1512              	.LVL134:
 1513              	.LBB253:
 1514              	.LBB254:
 1515              		.loc 2 531 0
 1516 06e0 4FF00073 		mov	r3, #33554432
 1517              		.syntax unified
 1518              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1519 06e4 93FAA3F3 		rbit r3, r3
 1520              	@ 0 "" 2
 1521              	.LVL135:
 1522              		.thumb
 1523              		.syntax unified
 1524              	.LBE254:
 1525              	.LBE253:
 568:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 1526              		.loc 1 568 0
 1527 06e8 B3FA83F3 		clz	r3, r3
 1528 06ec 03F01F03 		and	r3, r3, #31
 1529 06f0 0122     		movs	r2, #1
 1530 06f2 02FA03F3 		lsl	r3, r2, r3
 1531 06f6 1942     		tst	r1, r3
 1532 06f8 06D1     		bne	.L124
 570:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           {
 1533              		.loc 1 570 0
 1534 06fa FFF7FEFF 		bl	HAL_GetTick
 1535              	.LVL136:
 1536 06fe 001B     		subs	r0, r0, r4
 1537 0700 0228     		cmp	r0, #2
 1538 0702 E7D9     		bls	.L79
 572:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           }
 1539              		.loc 1 572 0
 1540 0704 0320     		movs	r0, #3
ARM GAS  /tmp/ccdVnXpZ.s 			page 49


 1541 0706 0AE0     		b	.L13
 1542              	.L124:
 590:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           }
 591:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 592:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 593:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 594:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     else
 595:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 596:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       return HAL_ERROR;
 597:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 598:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 599:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 600:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   return HAL_OK;
 1543              		.loc 1 600 0
 1544 0708 0020     		movs	r0, #0
 1545 070a 08E0     		b	.L13
 1546              	.L122:
 1547 070c 0020     		movs	r0, #0
 1548 070e 06E0     		b	.L13
 1549              	.LVL137:
 1550              	.L109:
 296:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 1551              		.loc 1 296 0
 1552 0710 0120     		movs	r0, #1
 1553 0712 04E0     		b	.L13
 1554              	.LVL138:
 1555              	.L97:
 1556              	.LBB255:
 493:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 1557              		.loc 1 493 0
 1558 0714 0320     		movs	r0, #3
 1559 0716 02E0     		b	.L13
 1560              	.L98:
 507:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 1561              		.loc 1 507 0
 1562 0718 0320     		movs	r0, #3
 1563 071a 00E0     		b	.L13
 1564              	.LVL139:
 1565              	.L99:
 1566              	.LBE255:
 1567              		.loc 1 600 0
 1568 071c 0020     		movs	r0, #0
 1569              	.LVL140:
 1570              	.L13:
 601:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
 1571              		.loc 1 601 0
 1572 071e 02B0     		add	sp, sp, #8
 1573              	.LCFI2:
 1574              		.cfi_remember_state
 1575              		.cfi_def_cfa_offset 16
 1576              		@ sp needed
 1577 0720 70BD     		pop	{r4, r5, r6, pc}
 1578              	.LVL141:
 1579              	.L100:
 1580              	.LCFI3:
 1581              		.cfi_restore_state
 596:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
ARM GAS  /tmp/ccdVnXpZ.s 			page 50


 1582              		.loc 1 596 0
 1583 0722 0120     		movs	r0, #1
 1584 0724 FBE7     		b	.L13
 1585              	.L130:
 1586 0726 00BF     		.align	2
 1587              	.L129:
 1588 0728 00000000 		.word	.LC0
 1589 072c 00100240 		.word	1073876992
 1590              		.cfi_endproc
 1591              	.LFE124:
 1593              		.section	.text.HAL_RCC_MCOConfig,"ax",%progbits
 1594              		.align	1
 1595              		.global	HAL_RCC_MCOConfig
 1596              		.syntax unified
 1597              		.thumb
 1598              		.thumb_func
 1599              		.fpu fpv4-sp-d16
 1601              	HAL_RCC_MCOConfig:
 1602              	.LFB126:
 602:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 603:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 604:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Initializes the CPU, AHB and APB buses clocks according to the specified 
 605:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         parameters in the RCC_ClkInitStruct.
 606:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @param  RCC_ClkInitStruct pointer to an RCC_OscInitTypeDef structure that
 607:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         contains the configuration information for the RCC peripheral.
 608:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @param  FLatency FLASH Latency                   
 609:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *          The value of this parameter depend on device used within the same series
 610:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency 
 611:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         and updated by @ref HAL_RCC_GetHCLKFreq() function called within this function
 612:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *
 613:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   The HSI is used (enabled by hardware) as system clock source after
 614:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         start-up from Reset, wake-up from STOP and STANDBY mode, or in case
 615:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         of failure of the HSE used directly or indirectly as system clock
 616:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         (if the Clock Security System CSS is enabled).
 617:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *           
 618:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   A switch from one clock source to another occurs only if the target
 619:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         clock source is ready (clock stable after start-up delay or PLL locked). 
 620:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         If a clock source which is not yet ready is selected, the switch will
 621:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         occur when the clock source will be ready. 
 622:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         You can use @ref HAL_RCC_GetClockConfig() function to know which clock is
 623:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         currently used as system clock source.
 624:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval HAL status
 625:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 626:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
 627:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
 628:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   uint32_t tickstart = 0U;
 629:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 630:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Check the parameters */
 631:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   assert_param(RCC_ClkInitStruct != NULL);
 632:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   assert_param(IS_RCC_CLOCKTYPE(RCC_ClkInitStruct->ClockType));
 633:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   assert_param(IS_FLASH_LATENCY(FLatency));
 634:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 635:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* To correctly read data from FLASH memory, the number of wait states (LATENCY) 
 636:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   must be correctly programmed according to the frequency of the CPU clock 
 637:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     (HCLK) of the device. */
 638:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 639:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Increasing the number of wait states because of higher CPU frequency */
ARM GAS  /tmp/ccdVnXpZ.s 			page 51


 640:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(FLatency > (FLASH->ACR & FLASH_ACR_LATENCY))
 641:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {    
 642:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 643:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 644:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
 645:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Check that the new number of wait states is taken into account to access the Flash
 646:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     memory by reading the FLASH_ACR register */
 647:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if((FLASH->ACR & FLASH_ACR_LATENCY) != FLatency)
 648:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 649:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       return HAL_ERROR;
 650:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 651:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 652:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 653:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /*-------------------------- HCLK Configuration --------------------------*/
 654:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 655:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 656:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
 657:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 658:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 659:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 660:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /*------------------------- SYSCLK Configuration ---------------------------*/ 
 661:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 662:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {    
 663:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));
 664:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
 665:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* HSE is selected as System Clock Source */
 666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 667:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 668:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Check the HSE ready flag */  
 669:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 670:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 671:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         return HAL_ERROR;
 672:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 673:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 674:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* PLL is selected as System Clock Source */
 675:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 676:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 677:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Check the PLL ready flag */  
 678:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 679:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 680:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         return HAL_ERROR;
 681:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 682:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 683:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* HSI is selected as System Clock Source */
 684:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     else
 685:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 686:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Check the HSI ready flag */  
 687:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 688:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 689:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         return HAL_ERROR;
 690:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 691:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 692:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 693:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 694:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Get Start Tick */
 695:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     tickstart = HAL_GetTick();
 696:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
ARM GAS  /tmp/ccdVnXpZ.s 			page 52


 697:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 698:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 699:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSE)
 700:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 701:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 702:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 703:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           return HAL_TIMEOUT;
 704:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 705:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 706:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 707:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 708:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 709:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 710:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 711:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 712:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 713:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           return HAL_TIMEOUT;
 714:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 715:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 716:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 717:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     else
 718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 719:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSI)
 720:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 721:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 722:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 723:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           return HAL_TIMEOUT;
 724:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 725:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 726:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }      
 727:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }    
 728:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Decreasing the number of wait states because of lower CPU frequency */
 729:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(FLatency < (FLASH->ACR & FLASH_ACR_LATENCY))
 730:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {    
 731:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 732:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 733:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
 734:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Check that the new number of wait states is taken into account to access the Flash
 735:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     memory by reading the FLASH_ACR register */
 736:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if((FLASH->ACR & FLASH_ACR_LATENCY) != FLatency)
 737:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 738:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       return HAL_ERROR;
 739:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 740:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }    
 741:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 742:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /*-------------------------- PCLK1 Configuration ---------------------------*/ 
 743:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 744:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 745:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
 746:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 747:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 748:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 749:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /*-------------------------- PCLK2 Configuration ---------------------------*/ 
 750:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 751:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 752:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
 753:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
ARM GAS  /tmp/ccdVnXpZ.s 			page 53


 754:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 755:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****  
 756:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Update the SystemCoreClock global variable */
 757:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CF
 758:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 759:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Configure the source of time base considering new system clocks settings*/
 760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   HAL_InitTick (TICK_INT_PRIORITY);
 761:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 762:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   return HAL_OK;
 763:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
 764:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 765:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 766:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @}
 767:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 768:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 769:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions_Group2 Peripheral Control functions
 770:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *  @brief   RCC clocks control functions
 771:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *
 772:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   @verbatim   
 773:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   ===============================================================================
 774:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****                   ##### Peripheral Control functions #####
 775:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   ===============================================================================  
 776:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     [..]
 777:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     This subsection provides a set of functions allowing to control the RCC Clocks 
 778:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     frequencies.
 779:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 780:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   @endverbatim
 781:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @{
 782:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 783:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 784:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #if defined(RCC_CFGR_MCOPRE)
 785:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 786:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Selects the clock source to output on MCO pin.
 787:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   MCO pin should be configured in alternate function mode.
 788:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @param  RCC_MCOx specifies the output direction for the clock source.
 789:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 790:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1 Clock source to output on MCO1 pin(PA8).
 791:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @param  RCC_MCOSource specifies the clock source to output.
 792:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 793:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_NOCLOCK     No clock selected
 794:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_SYSCLK      System Clock selected as MCO clock
 795:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI         HSI selected as MCO clock
 796:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSE         HSE selected as MCO clock
 797:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_LSI         LSI selected as MCO clock
 798:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_LSE         LSE selected as MCO clock
 799:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK      PLLCLK selected as MCO clock
 800:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK_DIV2 PLLCLK Divided by 2 selected as MCO clock
 801:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @param  RCC_MCODiv specifies the MCO DIV.
 802:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 803:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_1   no division applied to MCO clock
 804:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_2   division by 2 applied to MCO clock
 805:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_4   division by 4 applied to MCO clock
 806:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_8   division by 8 applied to MCO clock
 807:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_16  division by 16 applied to MCO clock
 808:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_32  division by 32 applied to MCO clock
 809:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_64  division by 64 applied to MCO clock
 810:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_128 division by 128 applied to MCO clock
ARM GAS  /tmp/ccdVnXpZ.s 			page 54


 811:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval None
 812:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 813:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #else
 814:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 815:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Selects the clock source to output on MCO pin.
 816:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   MCO pin should be configured in alternate function mode.
 817:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @param  RCC_MCOx specifies the output direction for the clock source.
 818:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1 Clock source to output on MCO1 pin(PA8).
 820:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @param  RCC_MCOSource specifies the clock source to output.
 821:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 822:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_NOCLOCK     No clock selected as MCO clock
 823:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_SYSCLK      System clock selected as MCO clock
 824:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI         HSI selected as MCO clock
 825:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSE         HSE selected as MCO clock
 826:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_LSI         LSI selected as MCO clock
 827:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_LSE         LSE selected as MCO clock
 828:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK_DIV2 PLLCLK Divided by 2 selected as MCO clock
 829:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @param  RCC_MCODiv specifies the MCO DIV.
 830:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 831:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_1 no division applied to MCO clock
 832:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval None
 833:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 834:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #endif
 835:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** void HAL_RCC_MCOConfig(uint32_t RCC_MCOx, uint32_t RCC_MCOSource, uint32_t RCC_MCODiv)
 836:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
 1603              		.loc 1 836 0
 1604              		.cfi_startproc
 1605              		@ args = 0, pretend = 0, frame = 24
 1606              		@ frame_needed = 0, uses_anonymous_args = 0
 1607              	.LVL142:
 1608 0000 30B5     		push	{r4, r5, lr}
 1609              	.LCFI4:
 1610              		.cfi_def_cfa_offset 12
 1611              		.cfi_offset 4, -12
 1612              		.cfi_offset 5, -8
 1613              		.cfi_offset 14, -4
 1614 0002 87B0     		sub	sp, sp, #28
 1615              	.LCFI5:
 1616              		.cfi_def_cfa_offset 40
 1617 0004 0C46     		mov	r4, r1
 1618 0006 1546     		mov	r5, r2
 837:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   GPIO_InitTypeDef gpio;
 838:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 839:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Check the parameters */
 840:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   assert_param(IS_RCC_MCO(RCC_MCOx));
 1619              		.loc 1 840 0
 1620 0008 0028     		cmp	r0, #0
 1621 000a 39D1     		bne	.L136
 1622              	.LVL143:
 1623              	.L132:
 841:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   assert_param(IS_RCC_MCODIV(RCC_MCODiv));
 1624              		.loc 1 841 0
 1625 000c 002D     		cmp	r5, #0
 1626 000e 3DD1     		bne	.L137
 1627              	.L133:
 842:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   assert_param(IS_RCC_MCO1SOURCE(RCC_MCOSource));
ARM GAS  /tmp/ccdVnXpZ.s 			page 55


 1628              		.loc 1 842 0
 1629 0010 B4B1     		cbz	r4, .L134
 1630              		.loc 1 842 0 is_stmt 0 discriminator 1
 1631 0012 B4F1007F 		cmp	r4, #33554432
 1632 0016 13D0     		beq	.L134
 1633              		.loc 1 842 0 discriminator 2
 1634 0018 B4F1407F 		cmp	r4, #50331648
 1635 001c 10D0     		beq	.L134
 1636              		.loc 1 842 0 discriminator 3
 1637 001e B4F1806F 		cmp	r4, #67108864
 1638 0022 0DD0     		beq	.L134
 1639              		.loc 1 842 0 discriminator 4
 1640 0024 B4F1A06F 		cmp	r4, #83886080
 1641 0028 0AD0     		beq	.L134
 1642              		.loc 1 842 0 discriminator 5
 1643 002a B4F1C06F 		cmp	r4, #100663296
 1644 002e 07D0     		beq	.L134
 1645              		.loc 1 842 0 discriminator 6
 1646 0030 B4F1E06F 		cmp	r4, #117440512
 1647 0034 04D0     		beq	.L134
 1648              		.loc 1 842 0 discriminator 7
 1649 0036 40F24A31 		movw	r1, #842
 1650 003a 1748     		ldr	r0, .L138
 1651 003c FFF7FEFF 		bl	assert_failed
 1652              	.LVL144:
 1653              	.L134:
 843:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 844:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Configure the MCO1 pin in alternate function mode */
 845:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   gpio.Mode      = GPIO_MODE_AF_PP;
 1654              		.loc 1 845 0 is_stmt 1
 1655 0040 0223     		movs	r3, #2
 1656 0042 0293     		str	r3, [sp, #8]
 846:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   gpio.Speed     = GPIO_SPEED_FREQ_HIGH;
 1657              		.loc 1 846 0
 1658 0044 0323     		movs	r3, #3
 1659 0046 0493     		str	r3, [sp, #16]
 847:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   gpio.Pull      = GPIO_NOPULL;
 1660              		.loc 1 847 0
 1661 0048 0023     		movs	r3, #0
 1662 004a 0393     		str	r3, [sp, #12]
 848:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   gpio.Pin       = MCO1_PIN;
 1663              		.loc 1 848 0
 1664 004c 4FF48072 		mov	r2, #256
 1665 0050 0192     		str	r2, [sp, #4]
 849:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   gpio.Alternate = GPIO_AF0_MCO;
 1666              		.loc 1 849 0
 1667 0052 0593     		str	r3, [sp, #20]
 1668              	.LBB256:
 850:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 851:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* MCO1 Clock Enable */
 852:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   MCO1_CLK_ENABLE();
 1669              		.loc 1 852 0
 1670 0054 114D     		ldr	r5, .L138+4
 1671              	.LVL145:
 1672 0056 6B69     		ldr	r3, [r5, #20]
 1673 0058 43F40033 		orr	r3, r3, #131072
 1674 005c 6B61     		str	r3, [r5, #20]
ARM GAS  /tmp/ccdVnXpZ.s 			page 56


 1675 005e 6B69     		ldr	r3, [r5, #20]
 1676 0060 03F40033 		and	r3, r3, #131072
 1677 0064 0093     		str	r3, [sp]
 1678 0066 009B     		ldr	r3, [sp]
 1679              	.LBE256:
 853:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 854:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   HAL_GPIO_Init(MCO1_GPIO_PORT, &gpio);
 1680              		.loc 1 854 0
 1681 0068 01A9     		add	r1, sp, #4
 1682 006a 4FF09040 		mov	r0, #1207959552
 1683 006e FFF7FEFF 		bl	HAL_GPIO_Init
 1684              	.LVL146:
 855:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 856:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Configure the MCO clock source */
 857:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   __HAL_RCC_MCO1_CONFIG(RCC_MCOSource, RCC_MCODiv);
 1685              		.loc 1 857 0
 1686 0072 6B68     		ldr	r3, [r5, #4]
 1687 0074 23F0E063 		bic	r3, r3, #117440512
 1688 0078 1C43     		orrs	r4, r4, r3
 1689              	.LVL147:
 1690 007a 6C60     		str	r4, [r5, #4]
 858:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
 1691              		.loc 1 858 0
 1692 007c 07B0     		add	sp, sp, #28
 1693              	.LCFI6:
 1694              		.cfi_remember_state
 1695              		.cfi_def_cfa_offset 12
 1696              		@ sp needed
 1697 007e 30BD     		pop	{r4, r5, pc}
 1698              	.LVL148:
 1699              	.L136:
 1700              	.LCFI7:
 1701              		.cfi_restore_state
 840:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   assert_param(IS_RCC_MCODIV(RCC_MCODiv));
 1702              		.loc 1 840 0 discriminator 1
 1703 0080 4FF45271 		mov	r1, #840
 1704              	.LVL149:
 1705 0084 0448     		ldr	r0, .L138
 1706              	.LVL150:
 1707 0086 FFF7FEFF 		bl	assert_failed
 1708              	.LVL151:
 1709 008a BFE7     		b	.L132
 1710              	.L137:
 841:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   assert_param(IS_RCC_MCO1SOURCE(RCC_MCOSource));
 1711              		.loc 1 841 0 discriminator 1
 1712 008c 40F24931 		movw	r1, #841
 1713 0090 0148     		ldr	r0, .L138
 1714 0092 FFF7FEFF 		bl	assert_failed
 1715              	.LVL152:
 1716 0096 BBE7     		b	.L133
 1717              	.L139:
 1718              		.align	2
 1719              	.L138:
 1720 0098 00000000 		.word	.LC0
 1721 009c 00100240 		.word	1073876992
 1722              		.cfi_endproc
 1723              	.LFE126:
ARM GAS  /tmp/ccdVnXpZ.s 			page 57


 1725              		.section	.text.HAL_RCC_EnableCSS,"ax",%progbits
 1726              		.align	1
 1727              		.global	HAL_RCC_EnableCSS
 1728              		.syntax unified
 1729              		.thumb
 1730              		.thumb_func
 1731              		.fpu fpv4-sp-d16
 1733              	HAL_RCC_EnableCSS:
 1734              	.LFB127:
 859:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 860:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 861:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Enables the Clock Security System.
 862:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   If a failure is detected on the HSE oscillator clock, this oscillator
 863:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         is automatically disabled and an interrupt is generated to inform the
 864:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         software about the failure (Clock Security System Interrupt, CSSI),
 865:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         allowing the MCU to perform rescue operations. The CSSI is linked to 
 866:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         the Cortex-M4 NMI (Non-Maskable Interrupt) exception vector.  
 867:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval None
 868:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 869:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** void HAL_RCC_EnableCSS(void)
 870:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
 1735              		.loc 1 870 0
 1736              		.cfi_startproc
 1737              		@ args = 0, pretend = 0, frame = 0
 1738              		@ frame_needed = 0, uses_anonymous_args = 0
 1739              		@ link register save eliminated.
 1740              	.LVL153:
 1741              	.LBB257:
 1742              	.LBB258:
 1743              		.loc 2 531 0
 1744 0000 4FF40023 		mov	r3, #524288
 1745              		.syntax unified
 1746              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1747 0004 93FAA3F3 		rbit r3, r3
 1748              	@ 0 "" 2
 1749              	.LVL154:
 1750              		.thumb
 1751              		.syntax unified
 1752              	.LBE258:
 1753              	.LBE257:
 871:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *(__IO uint32_t *) RCC_CR_CSSON_BB = (uint32_t)ENABLE;
 1754              		.loc 1 871 0
 1755 0008 B3FA83F3 		clz	r3, r3
 1756 000c 03F18453 		add	r3, r3, #276824064
 1757 0010 03F58413 		add	r3, r3, #1081344
 1758 0014 9B00     		lsls	r3, r3, #2
 1759 0016 0122     		movs	r2, #1
 1760 0018 1A60     		str	r2, [r3]
 1761 001a 7047     		bx	lr
 1762              		.cfi_endproc
 1763              	.LFE127:
 1765              		.section	.text.HAL_RCC_DisableCSS,"ax",%progbits
 1766              		.align	1
 1767              		.global	HAL_RCC_DisableCSS
 1768              		.syntax unified
 1769              		.thumb
 1770              		.thumb_func
ARM GAS  /tmp/ccdVnXpZ.s 			page 58


 1771              		.fpu fpv4-sp-d16
 1773              	HAL_RCC_DisableCSS:
 1774              	.LFB128:
 872:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
 873:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 874:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 875:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Disables the Clock Security System.
 876:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval None
 877:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 878:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** void HAL_RCC_DisableCSS(void)
 879:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
 1775              		.loc 1 879 0
 1776              		.cfi_startproc
 1777              		@ args = 0, pretend = 0, frame = 0
 1778              		@ frame_needed = 0, uses_anonymous_args = 0
 1779              		@ link register save eliminated.
 1780              	.LVL155:
 1781              	.LBB259:
 1782              	.LBB260:
 1783              		.loc 2 531 0
 1784 0000 4FF40023 		mov	r3, #524288
 1785              		.syntax unified
 1786              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1787 0004 93FAA3F3 		rbit r3, r3
 1788              	@ 0 "" 2
 1789              	.LVL156:
 1790              		.thumb
 1791              		.syntax unified
 1792              	.LBE260:
 1793              	.LBE259:
 880:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *(__IO uint32_t *) RCC_CR_CSSON_BB = (uint32_t)DISABLE;
 1794              		.loc 1 880 0
 1795 0008 B3FA83F3 		clz	r3, r3
 1796 000c 03F18453 		add	r3, r3, #276824064
 1797 0010 03F58413 		add	r3, r3, #1081344
 1798 0014 9B00     		lsls	r3, r3, #2
 1799 0016 0022     		movs	r2, #0
 1800 0018 1A60     		str	r2, [r3]
 1801 001a 7047     		bx	lr
 1802              		.cfi_endproc
 1803              	.LFE128:
 1805              		.section	.text.HAL_RCC_GetSysClockFreq,"ax",%progbits
 1806              		.align	1
 1807              		.global	HAL_RCC_GetSysClockFreq
 1808              		.syntax unified
 1809              		.thumb
 1810              		.thumb_func
 1811              		.fpu fpv4-sp-d16
 1813              	HAL_RCC_GetSysClockFreq:
 1814              	.LFB129:
 881:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
 882:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 883:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 884:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Returns the SYSCLK frequency     
 885:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   The system frequency computed by this function is not the real 
 886:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         frequency in the chip. It is calculated based on the predefined 
 887:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         constant and the selected clock source:
ARM GAS  /tmp/ccdVnXpZ.s 			page 59


 888:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note     If SYSCLK source is HSI, function returns values based on HSI_VALUE(*)
 889:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note     If SYSCLK source is HSE, function returns a value based on HSE_VALUE
 890:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *           divided by PREDIV factor(**)
 891:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note     If SYSCLK source is PLL, function returns a value based on HSE_VALUE
 892:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *           divided by PREDIV factor(**) or HSI_VALUE(*) multiplied by the PLL factor.
 893:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note     (*) HSI_VALUE is a constant defined in stm32f3xx_hal_conf.h file (default value
 894:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *               8 MHz) but the real value may vary depending on the variations
 895:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *               in voltage and temperature.
 896:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note     (**) HSE_VALUE is a constant defined in stm32f3xx_hal_conf.h file (default value
 897:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *                8 MHz), user has to ensure that HSE_VALUE is same as the real
 898:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *                frequency of the crystal used. Otherwise, this function may
 899:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *                have wrong result.
 900:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *                  
 901:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   The result of this function could be not correct when using fractional
 902:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         value for HSE crystal.
 903:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *           
 904:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   This function can be used by the user application to compute the 
 905:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         baud-rate for the communication peripherals or configure other parameters.
 906:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *           
 907:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   Each time SYSCLK changes, this function must be called to update the
 908:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         right SYSCLK value. Otherwise, any configuration based on this function will be incorre
 909:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         
 910:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval SYSCLK frequency
 911:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 912:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** uint32_t HAL_RCC_GetSysClockFreq(void)
 913:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
 1815              		.loc 1 913 0
 1816              		.cfi_startproc
 1817              		@ args = 0, pretend = 0, frame = 0
 1818              		@ frame_needed = 0, uses_anonymous_args = 0
 1819              		@ link register save eliminated.
 1820              	.LVL157:
 914:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   uint32_t tmpreg = 0U, prediv = 0U, pllclk = 0U, pllmul = 0U;
 915:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   uint32_t sysclockfreq = 0U;
 916:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 917:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   tmpreg = RCC->CFGR;
 1821              		.loc 1 917 0
 1822 0000 164B     		ldr	r3, .L149
 1823 0002 5B68     		ldr	r3, [r3, #4]
 1824              	.LVL158:
 918:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 919:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 920:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   switch (tmpreg & RCC_CFGR_SWS)
 1825              		.loc 1 920 0
 1826 0004 03F00C02 		and	r2, r3, #12
 1827 0008 082A     		cmp	r2, #8
 1828 000a 24D1     		bne	.L147
 921:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     case RCC_SYSCLKSOURCE_STATUS_HSE:  /* HSE used as system clock */
 923:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 924:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       sysclockfreq = HSE_VALUE;
 925:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       break;
 926:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 927:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     case RCC_SYSCLKSOURCE_STATUS_PLLCLK:  /* PLL used as system clock */
 928:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 929:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       pllmul = aPLLMULFactorTable[(uint32_t)(tmpreg & RCC_CFGR_PLLMUL) >> POSITION_VAL(RCC_CFGR_PLL
 1829              		.loc 1 929 0
ARM GAS  /tmp/ccdVnXpZ.s 			page 60


 1830 000c 03F47011 		and	r1, r3, #3932160
 1831              	.LVL159:
 1832              	.LBB261:
 1833              	.LBB262:
 1834              		.loc 2 531 0
 1835 0010 4FF47012 		mov	r2, #3932160
 1836              		.syntax unified
 1837              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1838 0014 92FAA2F2 		rbit r2, r2
 1839              	@ 0 "" 2
 1840              	.LVL160:
 1841              		.thumb
 1842              		.syntax unified
 1843              	.LBE262:
 1844              	.LBE261:
 1845              		.loc 1 929 0
 1846 0018 B2FA82F2 		clz	r2, r2
 1847 001c 21FA02F2 		lsr	r2, r1, r2
 1848 0020 0F49     		ldr	r1, .L149+4
 1849 0022 885C     		ldrb	r0, [r1, r2]	@ zero_extendqisi2
 1850              	.LVL161:
 930:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       prediv = aPredivFactorTable[(uint32_t)(RCC->CFGR2 & RCC_CFGR2_PREDIV) >> POSITION_VAL(RCC_CFG
 1851              		.loc 1 930 0
 1852 0024 0D4A     		ldr	r2, .L149
 1853 0026 D26A     		ldr	r2, [r2, #44]
 1854 0028 02F00F02 		and	r2, r2, #15
 1855              	.LVL162:
 1856              	.LBB263:
 1857              	.LBB264:
 1858              		.loc 2 531 0
 1859 002c 0F21     		movs	r1, #15
 1860              		.syntax unified
 1861              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1862 002e 91FAA1F1 		rbit r1, r1
 1863              	@ 0 "" 2
 1864              	.LVL163:
 1865              		.thumb
 1866              		.syntax unified
 1867              	.LBE264:
 1868              	.LBE263:
 1869              		.loc 1 930 0
 1870 0032 B1FA81F1 		clz	r1, r1
 1871 0036 CA40     		lsrs	r2, r2, r1
 1872 0038 0A49     		ldr	r1, .L149+8
 1873 003a 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 1874              	.LVL164:
 931:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #if defined(RCC_CFGR_PLLSRC_HSI_DIV2)
 932:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       if ((tmpreg & RCC_CFGR_PLLSRC) != RCC_PLLSOURCE_HSI)
 1875              		.loc 1 932 0
 1876 003c 13F4803F 		tst	r3, #65536
 1877 0040 03D1     		bne	.L148
 933:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 934:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* HSE used as PLL clock source : PLLCLK = HSE/PREDIV * PLLMUL */
 935:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         pllclk = (HSE_VALUE / prediv) * pllmul;
 936:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 937:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       else
 938:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
ARM GAS  /tmp/ccdVnXpZ.s 			page 61


 939:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* HSI used as PLL clock source : PLLCLK = HSI/2 * PLLMUL */
 940:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         pllclk = (HSI_VALUE >> 1U) * pllmul;
 1878              		.loc 1 940 0
 1879 0042 094B     		ldr	r3, .L149+12
 1880              	.LVL165:
 1881 0044 03FB00F0 		mul	r0, r3, r0
 1882              	.LVL166:
 1883 0048 7047     		bx	lr
 1884              	.LVL167:
 1885              	.L148:
 935:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 1886              		.loc 1 935 0
 1887 004a 084B     		ldr	r3, .L149+16
 1888              	.LVL168:
 1889 004c B3FBF2F3 		udiv	r3, r3, r2
 1890 0050 03FB00F0 		mul	r0, r3, r0
 1891              	.LVL169:
 1892 0054 7047     		bx	lr
 1893              	.LVL170:
 1894              	.L147:
 924:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       break;
 1895              		.loc 1 924 0
 1896 0056 0548     		ldr	r0, .L149+16
 1897              	.LVL171:
 941:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 942:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #else
 943:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       if ((tmpreg & RCC_CFGR_PLLSRC_HSE_PREDIV) == RCC_CFGR_PLLSRC_HSE_PREDIV)
 944:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 945:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* HSE used as PLL clock source : PLLCLK = HSE/PREDIV * PLLMUL */
 946:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         pllclk = (HSE_VALUE / prediv) * pllmul;
 947:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 948:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       else
 949:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 950:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* HSI used as PLL clock source : PLLCLK = HSI/PREDIV * PLLMUL */
 951:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         pllclk = (HSI_VALUE / prediv) * pllmul;
 952:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 953:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #endif /* RCC_CFGR_PLLSRC_HSI_DIV2 */
 954:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       sysclockfreq = pllclk;
 955:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       break;
 956:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 957:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     case RCC_SYSCLKSOURCE_STATUS_HSI:  /* HSI used as system clock source */
 958:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     default: /* HSI used as system clock */
 959:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 960:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       sysclockfreq = HSI_VALUE;
 961:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       break;
 962:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 963:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 964:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   return sysclockfreq;
 965:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
 1898              		.loc 1 965 0
 1899 0058 7047     		bx	lr
 1900              	.L150:
 1901 005a 00BF     		.align	2
 1902              	.L149:
 1903 005c 00100240 		.word	1073876992
 1904 0060 00000000 		.word	.LANCHOR0
 1905 0064 00000000 		.word	.LANCHOR1
ARM GAS  /tmp/ccdVnXpZ.s 			page 62


 1906 0068 00093D00 		.word	4000000
 1907 006c 00127A00 		.word	8000000
 1908              		.cfi_endproc
 1909              	.LFE129:
 1911              		.section	.text.HAL_RCC_ClockConfig,"ax",%progbits
 1912              		.align	1
 1913              		.global	HAL_RCC_ClockConfig
 1914              		.syntax unified
 1915              		.thumb
 1916              		.thumb_func
 1917              		.fpu fpv4-sp-d16
 1919              	HAL_RCC_ClockConfig:
 1920              	.LFB125:
 627:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   uint32_t tickstart = 0U;
 1921              		.loc 1 627 0
 1922              		.cfi_startproc
 1923              		@ args = 0, pretend = 0, frame = 0
 1924              		@ frame_needed = 0, uses_anonymous_args = 0
 1925              	.LVL172:
 1926 0000 70B5     		push	{r4, r5, r6, lr}
 1927              	.LCFI8:
 1928              		.cfi_def_cfa_offset 16
 1929              		.cfi_offset 4, -16
 1930              		.cfi_offset 5, -12
 1931              		.cfi_offset 6, -8
 1932              		.cfi_offset 14, -4
 1933 0002 0D46     		mov	r5, r1
 1934              	.LVL173:
 631:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   assert_param(IS_RCC_CLOCKTYPE(RCC_ClkInitStruct->ClockType));
 1935              		.loc 1 631 0
 1936 0004 0446     		mov	r4, r0
 1937 0006 C0B1     		cbz	r0, .L192
 1938              	.LVL174:
 1939              	.L152:
 632:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   assert_param(IS_FLASH_LATENCY(FLatency));
 1940              		.loc 1 632 0
 1941 0008 2368     		ldr	r3, [r4]
 1942 000a 13F00F0F 		tst	r3, #15
 1943 000e 1AD0     		beq	.L193
 1944              	.L153:
 633:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 1945              		.loc 1 633 0
 1946 0010 022D     		cmp	r5, #2
 1947 0012 1ED8     		bhi	.L194
 1948              	.L154:
 640:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {    
 1949              		.loc 1 640 0
 1950 0014 9B4B     		ldr	r3, .L198
 1951 0016 1B68     		ldr	r3, [r3]
 1952 0018 03F00703 		and	r3, r3, #7
 1953 001c 9D42     		cmp	r5, r3
 1954 001e 1ED9     		bls	.L155
 643:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
 1955              		.loc 1 643 0
 1956 0020 984A     		ldr	r2, .L198
 1957 0022 1368     		ldr	r3, [r2]
 1958 0024 23F00703 		bic	r3, r3, #7
ARM GAS  /tmp/ccdVnXpZ.s 			page 63


 1959 0028 2B43     		orrs	r3, r3, r5
 1960 002a 1360     		str	r3, [r2]
 647:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 1961              		.loc 1 647 0
 1962 002c 1368     		ldr	r3, [r2]
 1963 002e 03F00703 		and	r3, r3, #7
 1964 0032 9D42     		cmp	r5, r3
 1965 0034 13D0     		beq	.L155
 649:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 1966              		.loc 1 649 0
 1967 0036 0120     		movs	r0, #1
 1968 0038 70BD     		pop	{r4, r5, r6, pc}
 1969              	.LVL175:
 1970              	.L192:
 631:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   assert_param(IS_RCC_CLOCKTYPE(RCC_ClkInitStruct->ClockType));
 1971              		.loc 1 631 0 discriminator 1
 1972 003a 40F27721 		movw	r1, #631
 1973              	.LVL176:
 1974 003e 9248     		ldr	r0, .L198+4
 1975              	.LVL177:
 1976 0040 FFF7FEFF 		bl	assert_failed
 1977              	.LVL178:
 1978 0044 E0E7     		b	.L152
 1979              	.L193:
 632:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   assert_param(IS_FLASH_LATENCY(FLatency));
 1980              		.loc 1 632 0 discriminator 1
 1981 0046 4FF41E71 		mov	r1, #632
 1982 004a 8F48     		ldr	r0, .L198+4
 1983 004c FFF7FEFF 		bl	assert_failed
 1984              	.LVL179:
 1985 0050 DEE7     		b	.L153
 1986              	.L194:
 633:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 1987              		.loc 1 633 0 discriminator 1
 1988 0052 40F27921 		movw	r1, #633
 1989 0056 8C48     		ldr	r0, .L198+4
 1990 0058 FFF7FEFF 		bl	assert_failed
 1991              	.LVL180:
 1992 005c DAE7     		b	.L154
 1993              	.L155:
 654:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 1994              		.loc 1 654 0
 1995 005e 2368     		ldr	r3, [r4]
 1996 0060 13F0020F 		tst	r3, #2
 1997 0064 1DD0     		beq	.L157
 656:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 1998              		.loc 1 656 0
 1999 0066 A368     		ldr	r3, [r4, #8]
 2000 0068 A3B1     		cbz	r3, .L158
 656:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 2001              		.loc 1 656 0 is_stmt 0 discriminator 1
 2002 006a 802B     		cmp	r3, #128
 2003 006c 12D0     		beq	.L158
 656:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 2004              		.loc 1 656 0 discriminator 2
 2005 006e 902B     		cmp	r3, #144
 2006 0070 10D0     		beq	.L158
ARM GAS  /tmp/ccdVnXpZ.s 			page 64


 656:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 2007              		.loc 1 656 0 discriminator 3
 2008 0072 A02B     		cmp	r3, #160
 2009 0074 0ED0     		beq	.L158
 656:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 2010              		.loc 1 656 0 discriminator 4
 2011 0076 B02B     		cmp	r3, #176
 2012 0078 0CD0     		beq	.L158
 656:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 2013              		.loc 1 656 0 discriminator 5
 2014 007a C02B     		cmp	r3, #192
 2015 007c 0AD0     		beq	.L158
 656:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 2016              		.loc 1 656 0 discriminator 6
 2017 007e D02B     		cmp	r3, #208
 2018 0080 08D0     		beq	.L158
 656:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 2019              		.loc 1 656 0 discriminator 7
 2020 0082 E02B     		cmp	r3, #224
 2021 0084 06D0     		beq	.L158
 656:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 2022              		.loc 1 656 0 discriminator 8
 2023 0086 F02B     		cmp	r3, #240
 2024 0088 04D0     		beq	.L158
 656:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 2025              		.loc 1 656 0 discriminator 9
 2026 008a 4FF42471 		mov	r1, #656
 2027 008e 7E48     		ldr	r0, .L198+4
 2028 0090 FFF7FEFF 		bl	assert_failed
 2029              	.LVL181:
 2030              	.L158:
 657:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 2031              		.loc 1 657 0 is_stmt 1
 2032 0094 7D4A     		ldr	r2, .L198+8
 2033 0096 5368     		ldr	r3, [r2, #4]
 2034 0098 23F0F003 		bic	r3, r3, #240
 2035 009c A168     		ldr	r1, [r4, #8]
 2036 009e 0B43     		orrs	r3, r3, r1
 2037 00a0 5360     		str	r3, [r2, #4]
 2038              	.L157:
 661:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {    
 2039              		.loc 1 661 0
 2040 00a2 2368     		ldr	r3, [r4]
 2041 00a4 13F0010F 		tst	r3, #1
 2042 00a8 00F08480 		beq	.L159
 663:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
 2043              		.loc 1 663 0
 2044 00ac 6368     		ldr	r3, [r4, #4]
 2045 00ae 022B     		cmp	r3, #2
 2046 00b0 32D8     		bhi	.L195
 2047              	.L160:
 666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 2048              		.loc 1 666 0
 2049 00b2 6368     		ldr	r3, [r4, #4]
 2050 00b4 012B     		cmp	r3, #1
 2051 00b6 35D0     		beq	.L196
 675:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
ARM GAS  /tmp/ccdVnXpZ.s 			page 65


 2052              		.loc 1 675 0
 2053 00b8 022B     		cmp	r3, #2
 2054 00ba 48D0     		beq	.L197
 2055              	.LVL182:
 2056              	.LBB265:
 2057              	.LBB266:
 2058              		.loc 2 531 0
 2059 00bc 0222     		movs	r2, #2
 2060              		.syntax unified
 2061              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2062 00be 92FAA2F2 		rbit r2, r2
 2063              	@ 0 "" 2
 2064              	.LVL183:
 2065              		.thumb
 2066              		.syntax unified
 2067              	.LBE266:
 2068              	.LBE265:
 687:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 2069              		.loc 1 687 0
 2070 00c2 724A     		ldr	r2, .L198+8
 2071 00c4 1068     		ldr	r0, [r2]
 2072              	.LVL184:
 2073              	.LBB267:
 2074              	.LBB268:
 2075              		.loc 2 531 0
 2076 00c6 0222     		movs	r2, #2
 2077              		.syntax unified
 2078              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2079 00c8 92FAA2F2 		rbit r2, r2
 2080              	@ 0 "" 2
 2081              	.LVL185:
 2082              		.thumb
 2083              		.syntax unified
 2084              	.LBE268:
 2085              	.LBE267:
 687:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 2086              		.loc 1 687 0
 2087 00cc B2FA82F2 		clz	r2, r2
 2088 00d0 02F01F02 		and	r2, r2, #31
 2089 00d4 0121     		movs	r1, #1
 2090 00d6 01FA02F2 		lsl	r2, r1, r2
 2091 00da 1042     		tst	r0, r2
 2092 00dc 00F0D080 		beq	.L185
 2093              	.L164:
 692:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 2094              		.loc 1 692 0
 2095 00e0 6A49     		ldr	r1, .L198+8
 2096 00e2 4A68     		ldr	r2, [r1, #4]
 2097 00e4 22F00302 		bic	r2, r2, #3
 2098 00e8 1343     		orrs	r3, r3, r2
 2099 00ea 4B60     		str	r3, [r1, #4]
 695:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
 2100              		.loc 1 695 0
 2101 00ec FFF7FEFF 		bl	HAL_GetTick
 2102              	.LVL186:
 2103 00f0 0646     		mov	r6, r0
 2104              	.LVL187:
ARM GAS  /tmp/ccdVnXpZ.s 			page 66


 697:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 2105              		.loc 1 697 0
 2106 00f2 6368     		ldr	r3, [r4, #4]
 2107 00f4 012B     		cmp	r3, #1
 2108 00f6 3FD0     		beq	.L170
 707:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 2109              		.loc 1 707 0
 2110 00f8 022B     		cmp	r3, #2
 2111 00fa 4CD0     		beq	.L173
 2112              	.LVL188:
 2113              	.L174:
 719:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 2114              		.loc 1 719 0
 2115 00fc 634B     		ldr	r3, .L198+8
 2116 00fe 5B68     		ldr	r3, [r3, #4]
 2117 0100 13F00C0F 		tst	r3, #12
 2118 0104 56D0     		beq	.L159
 721:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 2119              		.loc 1 721 0
 2120 0106 FFF7FEFF 		bl	HAL_GetTick
 2121              	.LVL189:
 2122 010a 801B     		subs	r0, r0, r6
 2123 010c 41F28833 		movw	r3, #5000
 2124 0110 9842     		cmp	r0, r3
 2125 0112 F3D9     		bls	.L174
 723:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 2126              		.loc 1 723 0
 2127 0114 0320     		movs	r0, #3
 2128 0116 70BD     		pop	{r4, r5, r6, pc}
 2129              	.LVL190:
 2130              	.L195:
 663:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
 2131              		.loc 1 663 0 discriminator 1
 2132 0118 40F29721 		movw	r1, #663
 2133 011c 5A48     		ldr	r0, .L198+4
 2134 011e FFF7FEFF 		bl	assert_failed
 2135              	.LVL191:
 2136 0122 C6E7     		b	.L160
 2137              	.L196:
 2138              	.LVL192:
 2139              	.LBB269:
 2140              	.LBB270:
 2141              		.loc 2 531 0
 2142 0124 4FF40032 		mov	r2, #131072
 2143              		.syntax unified
 2144              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2145 0128 92FAA2F2 		rbit r2, r2
 2146              	@ 0 "" 2
 2147              	.LVL193:
 2148              		.thumb
 2149              		.syntax unified
 2150              	.LBE270:
 2151              	.LBE269:
 669:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 2152              		.loc 1 669 0
 2153 012c 574A     		ldr	r2, .L198+8
 2154 012e 1068     		ldr	r0, [r2]
ARM GAS  /tmp/ccdVnXpZ.s 			page 67


 2155              	.LVL194:
 2156              	.LBB271:
 2157              	.LBB272:
 2158              		.loc 2 531 0
 2159 0130 4FF40032 		mov	r2, #131072
 2160              		.syntax unified
 2161              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2162 0134 92FAA2F2 		rbit r2, r2
 2163              	@ 0 "" 2
 2164              	.LVL195:
 2165              		.thumb
 2166              		.syntax unified
 2167              	.LBE272:
 2168              	.LBE271:
 669:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 2169              		.loc 1 669 0
 2170 0138 B2FA82F2 		clz	r2, r2
 2171 013c 02F01F02 		and	r2, r2, #31
 2172 0140 0121     		movs	r1, #1
 2173 0142 01FA02F2 		lsl	r2, r1, r2
 2174 0146 1042     		tst	r0, r2
 2175 0148 CAD1     		bne	.L164
 671:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 2176              		.loc 1 671 0
 2177 014a 0120     		movs	r0, #1
 2178 014c 70BD     		pop	{r4, r5, r6, pc}
 2179              	.LVL196:
 2180              	.L197:
 2181              	.LBB273:
 2182              	.LBB274:
 2183              		.loc 2 531 0
 2184 014e 4FF00072 		mov	r2, #33554432
 2185              		.syntax unified
 2186              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2187 0152 92FAA2F2 		rbit r2, r2
 2188              	@ 0 "" 2
 2189              	.LVL197:
 2190              		.thumb
 2191              		.syntax unified
 2192              	.LBE274:
 2193              	.LBE273:
 678:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 2194              		.loc 1 678 0
 2195 0156 4D4A     		ldr	r2, .L198+8
 2196 0158 1068     		ldr	r0, [r2]
 2197              	.LVL198:
 2198              	.LBB275:
 2199              	.LBB276:
 2200              		.loc 2 531 0
 2201 015a 4FF00072 		mov	r2, #33554432
 2202              		.syntax unified
 2203              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2204 015e 92FAA2F2 		rbit r2, r2
 2205              	@ 0 "" 2
 2206              	.LVL199:
 2207              		.thumb
 2208              		.syntax unified
ARM GAS  /tmp/ccdVnXpZ.s 			page 68


 2209              	.LBE276:
 2210              	.LBE275:
 678:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 2211              		.loc 1 678 0
 2212 0162 B2FA82F2 		clz	r2, r2
 2213 0166 02F01F02 		and	r2, r2, #31
 2214 016a 0121     		movs	r1, #1
 2215 016c 01FA02F2 		lsl	r2, r1, r2
 2216 0170 1042     		tst	r0, r2
 2217 0172 B5D1     		bne	.L164
 680:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 2218              		.loc 1 680 0
 2219 0174 0120     		movs	r0, #1
 2220 0176 70BD     		pop	{r4, r5, r6, pc}
 2221              	.LVL200:
 2222              	.L170:
 699:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 2223              		.loc 1 699 0
 2224 0178 444B     		ldr	r3, .L198+8
 2225 017a 5B68     		ldr	r3, [r3, #4]
 2226 017c 03F00C03 		and	r3, r3, #12
 2227 0180 042B     		cmp	r3, #4
 2228 0182 17D0     		beq	.L159
 701:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 2229              		.loc 1 701 0
 2230 0184 FFF7FEFF 		bl	HAL_GetTick
 2231              	.LVL201:
 2232 0188 801B     		subs	r0, r0, r6
 2233 018a 41F28833 		movw	r3, #5000
 2234 018e 9842     		cmp	r0, r3
 2235 0190 F2D9     		bls	.L170
 703:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 2236              		.loc 1 703 0
 2237 0192 0320     		movs	r0, #3
 2238 0194 70BD     		pop	{r4, r5, r6, pc}
 2239              	.LVL202:
 2240              	.L173:
 709:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 2241              		.loc 1 709 0
 2242 0196 3D4B     		ldr	r3, .L198+8
 2243 0198 5B68     		ldr	r3, [r3, #4]
 2244 019a 03F00C03 		and	r3, r3, #12
 2245 019e 082B     		cmp	r3, #8
 2246 01a0 08D0     		beq	.L159
 711:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 2247              		.loc 1 711 0
 2248 01a2 FFF7FEFF 		bl	HAL_GetTick
 2249              	.LVL203:
 2250 01a6 801B     		subs	r0, r0, r6
 2251 01a8 41F28833 		movw	r3, #5000
 2252 01ac 9842     		cmp	r0, r3
 2253 01ae F2D9     		bls	.L173
 713:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 2254              		.loc 1 713 0
 2255 01b0 0320     		movs	r0, #3
 2256 01b2 70BD     		pop	{r4, r5, r6, pc}
 2257              	.LVL204:
ARM GAS  /tmp/ccdVnXpZ.s 			page 69


 2258              	.L159:
 729:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {    
 2259              		.loc 1 729 0
 2260 01b4 334B     		ldr	r3, .L198
 2261 01b6 1B68     		ldr	r3, [r3]
 2262 01b8 03F00703 		and	r3, r3, #7
 2263 01bc 9D42     		cmp	r5, r3
 2264 01be 0CD2     		bcs	.L177
 732:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
 2265              		.loc 1 732 0
 2266 01c0 304A     		ldr	r2, .L198
 2267 01c2 1368     		ldr	r3, [r2]
 2268 01c4 23F00703 		bic	r3, r3, #7
 2269 01c8 2B43     		orrs	r3, r3, r5
 2270 01ca 1360     		str	r3, [r2]
 736:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 2271              		.loc 1 736 0
 2272 01cc 1368     		ldr	r3, [r2]
 2273 01ce 03F00703 		and	r3, r3, #7
 2274 01d2 9D42     		cmp	r5, r3
 2275 01d4 01D0     		beq	.L177
 738:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 2276              		.loc 1 738 0
 2277 01d6 0120     		movs	r0, #1
 763:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 2278              		.loc 1 763 0
 2279 01d8 70BD     		pop	{r4, r5, r6, pc}
 2280              	.LVL205:
 2281              	.L177:
 743:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 2282              		.loc 1 743 0
 2283 01da 2368     		ldr	r3, [r4]
 2284 01dc 13F0040F 		tst	r3, #4
 2285 01e0 19D0     		beq	.L178
 745:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 2286              		.loc 1 745 0
 2287 01e2 E368     		ldr	r3, [r4, #12]
 2288 01e4 83B1     		cbz	r3, .L179
 745:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 2289              		.loc 1 745 0 is_stmt 0 discriminator 1
 2290 01e6 B3F5806F 		cmp	r3, #1024
 2291 01ea 0DD0     		beq	.L179
 745:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 2292              		.loc 1 745 0 discriminator 2
 2293 01ec B3F5A06F 		cmp	r3, #1280
 2294 01f0 0AD0     		beq	.L179
 745:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 2295              		.loc 1 745 0 discriminator 3
 2296 01f2 B3F5C06F 		cmp	r3, #1536
 2297 01f6 07D0     		beq	.L179
 745:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 2298              		.loc 1 745 0 discriminator 4
 2299 01f8 B3F5E06F 		cmp	r3, #1792
 2300 01fc 04D0     		beq	.L179
 745:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 2301              		.loc 1 745 0 discriminator 5
 2302 01fe 40F2E921 		movw	r1, #745
ARM GAS  /tmp/ccdVnXpZ.s 			page 70


 2303 0202 2148     		ldr	r0, .L198+4
 2304 0204 FFF7FEFF 		bl	assert_failed
 2305              	.LVL206:
 2306              	.L179:
 746:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 2307              		.loc 1 746 0 is_stmt 1
 2308 0208 204A     		ldr	r2, .L198+8
 2309 020a 5368     		ldr	r3, [r2, #4]
 2310 020c 23F4E063 		bic	r3, r3, #1792
 2311 0210 E168     		ldr	r1, [r4, #12]
 2312 0212 0B43     		orrs	r3, r3, r1
 2313 0214 5360     		str	r3, [r2, #4]
 2314              	.L178:
 750:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 2315              		.loc 1 750 0
 2316 0216 2368     		ldr	r3, [r4]
 2317 0218 13F0080F 		tst	r3, #8
 2318 021c 1AD0     		beq	.L180
 752:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 2319              		.loc 1 752 0
 2320 021e 2369     		ldr	r3, [r4, #16]
 2321 0220 83B1     		cbz	r3, .L181
 752:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 2322              		.loc 1 752 0 is_stmt 0 discriminator 1
 2323 0222 B3F5806F 		cmp	r3, #1024
 2324 0226 0DD0     		beq	.L181
 752:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 2325              		.loc 1 752 0 discriminator 2
 2326 0228 B3F5A06F 		cmp	r3, #1280
 2327 022c 0AD0     		beq	.L181
 752:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 2328              		.loc 1 752 0 discriminator 3
 2329 022e B3F5C06F 		cmp	r3, #1536
 2330 0232 07D0     		beq	.L181
 752:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 2331              		.loc 1 752 0 discriminator 4
 2332 0234 B3F5E06F 		cmp	r3, #1792
 2333 0238 04D0     		beq	.L181
 752:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 2334              		.loc 1 752 0 discriminator 5
 2335 023a 4FF43C71 		mov	r1, #752
 2336 023e 1248     		ldr	r0, .L198+4
 2337 0240 FFF7FEFF 		bl	assert_failed
 2338              	.LVL207:
 2339              	.L181:
 753:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 2340              		.loc 1 753 0 is_stmt 1
 2341 0244 114A     		ldr	r2, .L198+8
 2342 0246 5368     		ldr	r3, [r2, #4]
 2343 0248 23F46053 		bic	r3, r3, #14336
 2344 024c 2169     		ldr	r1, [r4, #16]
 2345 024e 43EAC103 		orr	r3, r3, r1, lsl #3
 2346 0252 5360     		str	r3, [r2, #4]
 2347              	.L180:
 757:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 2348              		.loc 1 757 0
 2349 0254 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
ARM GAS  /tmp/ccdVnXpZ.s 			page 71


 2350              	.LVL208:
 2351 0258 0C4B     		ldr	r3, .L198+8
 2352 025a 5B68     		ldr	r3, [r3, #4]
 2353 025c 03F0F003 		and	r3, r3, #240
 2354              	.LVL209:
 2355              	.LBB277:
 2356              	.LBB278:
 2357              		.loc 2 531 0
 2358 0260 F022     		movs	r2, #240
 2359              		.syntax unified
 2360              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2361 0262 92FAA2F2 		rbit r2, r2
 2362              	@ 0 "" 2
 2363              	.LVL210:
 2364              		.thumb
 2365              		.syntax unified
 2366              	.LBE278:
 2367              	.LBE277:
 757:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 2368              		.loc 1 757 0
 2369 0266 B2FA82F2 		clz	r2, r2
 2370 026a D340     		lsrs	r3, r3, r2
 2371 026c 084A     		ldr	r2, .L198+12
 2372 026e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 2373 0270 D840     		lsrs	r0, r0, r3
 2374 0272 084B     		ldr	r3, .L198+16
 2375 0274 1860     		str	r0, [r3]
 760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 2376              		.loc 1 760 0
 2377 0276 0020     		movs	r0, #0
 2378 0278 FFF7FEFF 		bl	HAL_InitTick
 2379              	.LVL211:
 762:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
 2380              		.loc 1 762 0
 2381 027c 0020     		movs	r0, #0
 2382 027e 70BD     		pop	{r4, r5, r6, pc}
 2383              	.LVL212:
 2384              	.L185:
 689:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 2385              		.loc 1 689 0
 2386 0280 0120     		movs	r0, #1
 2387 0282 70BD     		pop	{r4, r5, r6, pc}
 2388              	.LVL213:
 2389              	.L199:
 2390              		.align	2
 2391              	.L198:
 2392 0284 00200240 		.word	1073881088
 2393 0288 00000000 		.word	.LC0
 2394 028c 00100240 		.word	1073876992
 2395 0290 00000000 		.word	AHBPrescTable
 2396 0294 00000000 		.word	SystemCoreClock
 2397              		.cfi_endproc
 2398              	.LFE125:
 2400              		.section	.text.HAL_RCC_GetHCLKFreq,"ax",%progbits
 2401              		.align	1
 2402              		.global	HAL_RCC_GetHCLKFreq
 2403              		.syntax unified
ARM GAS  /tmp/ccdVnXpZ.s 			page 72


 2404              		.thumb
 2405              		.thumb_func
 2406              		.fpu fpv4-sp-d16
 2408              	HAL_RCC_GetHCLKFreq:
 2409              	.LFB130:
 966:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 967:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 968:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Returns the HCLK frequency     
 969:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   Each time HCLK changes, this function must be called to update the
 970:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         right HCLK value. Otherwise, any configuration based on this function will be incorrect
 971:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * 
 972:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency 
 973:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         and updated within this function
 974:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval HCLK frequency
 975:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 976:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** uint32_t HAL_RCC_GetHCLKFreq(void)
 977:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
 2410              		.loc 1 977 0
 2411              		.cfi_startproc
 2412              		@ args = 0, pretend = 0, frame = 0
 2413              		@ frame_needed = 0, uses_anonymous_args = 0
 2414              		@ link register save eliminated.
 978:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   return SystemCoreClock;
 979:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
 2415              		.loc 1 979 0
 2416 0000 014B     		ldr	r3, .L201
 2417 0002 1868     		ldr	r0, [r3]
 2418 0004 7047     		bx	lr
 2419              	.L202:
 2420 0006 00BF     		.align	2
 2421              	.L201:
 2422 0008 00000000 		.word	SystemCoreClock
 2423              		.cfi_endproc
 2424              	.LFE130:
 2426              		.section	.text.HAL_RCC_GetPCLK1Freq,"ax",%progbits
 2427              		.align	1
 2428              		.global	HAL_RCC_GetPCLK1Freq
 2429              		.syntax unified
 2430              		.thumb
 2431              		.thumb_func
 2432              		.fpu fpv4-sp-d16
 2434              	HAL_RCC_GetPCLK1Freq:
 2435              	.LFB131:
 980:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 981:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 982:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Returns the PCLK1 frequency     
 983:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   Each time PCLK1 changes, this function must be called to update the
 984:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrec
 985:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval PCLK1 frequency
 986:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 987:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** uint32_t HAL_RCC_GetPCLK1Freq(void)
 988:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
 2436              		.loc 1 988 0
 2437              		.cfi_startproc
 2438              		@ args = 0, pretend = 0, frame = 0
 2439              		@ frame_needed = 0, uses_anonymous_args = 0
 2440 0000 08B5     		push	{r3, lr}
ARM GAS  /tmp/ccdVnXpZ.s 			page 73


 2441              	.LCFI9:
 2442              		.cfi_def_cfa_offset 8
 2443              		.cfi_offset 3, -8
 2444              		.cfi_offset 14, -4
 989:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
 990:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1) >> RCC_CFGR_PPRE1_BIT
 2445              		.loc 1 990 0
 2446 0002 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 2447              	.LVL214:
 2448 0006 074B     		ldr	r3, .L205
 2449 0008 5B68     		ldr	r3, [r3, #4]
 2450 000a 03F4E063 		and	r3, r3, #1792
 2451              	.LVL215:
 2452              	.LBB279:
 2453              	.LBB280:
 2454              		.loc 2 531 0
 2455 000e 4FF4E062 		mov	r2, #1792
 2456              		.syntax unified
 2457              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2458 0012 92FAA2F2 		rbit r2, r2
 2459              	@ 0 "" 2
 2460              	.LVL216:
 2461              		.thumb
 2462              		.syntax unified
 2463              	.LBE280:
 2464              	.LBE279:
 2465              		.loc 1 990 0
 2466 0016 B2FA82F2 		clz	r2, r2
 2467 001a D340     		lsrs	r3, r3, r2
 2468 001c 024A     		ldr	r2, .L205+4
 2469 001e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 991:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }    
 2470              		.loc 1 991 0
 2471 0020 D840     		lsrs	r0, r0, r3
 2472 0022 08BD     		pop	{r3, pc}
 2473              	.L206:
 2474              		.align	2
 2475              	.L205:
 2476 0024 00100240 		.word	1073876992
 2477 0028 00000000 		.word	APBPrescTable
 2478              		.cfi_endproc
 2479              	.LFE131:
 2481              		.section	.text.HAL_RCC_GetPCLK2Freq,"ax",%progbits
 2482              		.align	1
 2483              		.global	HAL_RCC_GetPCLK2Freq
 2484              		.syntax unified
 2485              		.thumb
 2486              		.thumb_func
 2487              		.fpu fpv4-sp-d16
 2489              	HAL_RCC_GetPCLK2Freq:
 2490              	.LFB132:
 992:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 993:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 994:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Returns the PCLK2 frequency     
 995:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   Each time PCLK2 changes, this function must be called to update the
 996:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrec
 997:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval PCLK2 frequency
ARM GAS  /tmp/ccdVnXpZ.s 			page 74


 998:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 999:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** uint32_t HAL_RCC_GetPCLK2Freq(void)
1000:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
 2491              		.loc 1 1000 0
 2492              		.cfi_startproc
 2493              		@ args = 0, pretend = 0, frame = 0
 2494              		@ frame_needed = 0, uses_anonymous_args = 0
 2495 0000 08B5     		push	{r3, lr}
 2496              	.LCFI10:
 2497              		.cfi_def_cfa_offset 8
 2498              		.cfi_offset 3, -8
 2499              		.cfi_offset 14, -4
1001:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
1002:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   return (HAL_RCC_GetHCLKFreq()>> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2) >> RCC_CFGR_PPRE2_BITN
 2500              		.loc 1 1002 0
 2501 0002 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 2502              	.LVL217:
 2503 0006 074B     		ldr	r3, .L209
 2504 0008 5B68     		ldr	r3, [r3, #4]
 2505 000a 03F46053 		and	r3, r3, #14336
 2506              	.LVL218:
 2507              	.LBB281:
 2508              	.LBB282:
 2509              		.loc 2 531 0
 2510 000e 4FF46052 		mov	r2, #14336
 2511              		.syntax unified
 2512              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2513 0012 92FAA2F2 		rbit r2, r2
 2514              	@ 0 "" 2
 2515              	.LVL219:
 2516              		.thumb
 2517              		.syntax unified
 2518              	.LBE282:
 2519              	.LBE281:
 2520              		.loc 1 1002 0
 2521 0016 B2FA82F2 		clz	r2, r2
 2522 001a D340     		lsrs	r3, r3, r2
 2523 001c 024A     		ldr	r2, .L209+4
 2524 001e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
1003:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** } 
 2525              		.loc 1 1003 0
 2526 0020 D840     		lsrs	r0, r0, r3
 2527 0022 08BD     		pop	{r3, pc}
 2528              	.L210:
 2529              		.align	2
 2530              	.L209:
 2531 0024 00100240 		.word	1073876992
 2532 0028 00000000 		.word	APBPrescTable
 2533              		.cfi_endproc
 2534              	.LFE132:
 2536              		.section	.text.HAL_RCC_GetOscConfig,"ax",%progbits
 2537              		.align	1
 2538              		.global	HAL_RCC_GetOscConfig
 2539              		.syntax unified
 2540              		.thumb
 2541              		.thumb_func
 2542              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccdVnXpZ.s 			page 75


 2544              	HAL_RCC_GetOscConfig:
 2545              	.LFB133:
1004:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
1005:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
1006:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Configures the RCC_OscInitStruct according to the internal 
1007:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * RCC configuration registers.
1008:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @param  RCC_OscInitStruct pointer to an RCC_OscInitTypeDef structure that 
1009:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * will be configured.
1010:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval None
1011:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
1012:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** void HAL_RCC_GetOscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
1013:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
 2546              		.loc 1 1013 0
 2547              		.cfi_startproc
 2548              		@ args = 0, pretend = 0, frame = 0
 2549              		@ frame_needed = 0, uses_anonymous_args = 0
 2550              	.LVL220:
 2551 0000 10B5     		push	{r4, lr}
 2552              	.LCFI11:
 2553              		.cfi_def_cfa_offset 8
 2554              		.cfi_offset 4, -8
 2555              		.cfi_offset 14, -4
1014:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Check the parameters */
1015:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   assert_param(RCC_OscInitStruct != NULL);
 2556              		.loc 1 1015 0
 2557 0002 0446     		mov	r4, r0
 2558 0004 0028     		cmp	r0, #0
 2559 0006 3DD0     		beq	.L226
 2560              	.LVL221:
 2561              	.L212:
1016:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
1017:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Set all possible values for the Oscillator type parameter ---------------*/
1018:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   RCC_OscInitStruct->OscillatorType = RCC_OSCILLATORTYPE_HSE | RCC_OSCILLATORTYPE_HSI  \
 2562              		.loc 1 1018 0
 2563 0008 0F23     		movs	r3, #15
 2564 000a 2360     		str	r3, [r4]
1019:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****                   | RCC_OSCILLATORTYPE_LSE | RCC_OSCILLATORTYPE_LSI;
1020:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
1021:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
1022:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get the HSE configuration -----------------------------------------------*/
1023:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_HSEBYP) == RCC_CR_HSEBYP)
 2565              		.loc 1 1023 0
 2566 000c 304B     		ldr	r3, .L228
 2567 000e 1B68     		ldr	r3, [r3]
 2568 0010 13F4802F 		tst	r3, #262144
 2569 0014 3CD0     		beq	.L213
1024:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1025:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_BYPASS;
 2570              		.loc 1 1025 0
 2571 0016 4FF4A023 		mov	r3, #327680
 2572 001a 6360     		str	r3, [r4, #4]
 2573              	.L214:
1026:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1027:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   else if((RCC->CR &RCC_CR_HSEON) == RCC_CR_HSEON)
1028:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1029:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_ON;
1030:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
ARM GAS  /tmp/ccdVnXpZ.s 			page 76


1031:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   else
1032:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1033:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_OFF;
1034:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1035:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #if defined(RCC_CFGR_PLLSRC_HSI_DIV2)
1036:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   RCC_OscInitStruct->HSEPredivValue = __HAL_RCC_HSE_GET_PREDIV();
 2574              		.loc 1 1036 0
 2575 001c 2C4A     		ldr	r2, .L228
 2576 001e D36A     		ldr	r3, [r2, #44]
 2577 0020 03F00F03 		and	r3, r3, #15
 2578 0024 A360     		str	r3, [r4, #8]
1037:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #endif
1038:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
1039:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get the HSI configuration -----------------------------------------------*/
1040:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_HSION) == RCC_CR_HSION)
 2579              		.loc 1 1040 0
 2580 0026 1368     		ldr	r3, [r2]
 2581 0028 13F0010F 		tst	r3, #1
 2582 002c 3CD0     		beq	.L216
1041:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1042:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     RCC_OscInitStruct->HSIState = RCC_HSI_ON;
 2583              		.loc 1 1042 0
 2584 002e 0123     		movs	r3, #1
 2585 0030 2361     		str	r3, [r4, #16]
 2586              	.L217:
1043:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1044:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   else
1045:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1046:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     RCC_OscInitStruct->HSIState = RCC_HSI_OFF;
1047:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1048:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
1049:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   RCC_OscInitStruct->HSICalibrationValue = (uint32_t)((RCC->CR & RCC_CR_HSITRIM) >> POSITION_VAL(RC
 2587              		.loc 1 1049 0
 2588 0032 2749     		ldr	r1, .L228
 2589 0034 0B68     		ldr	r3, [r1]
 2590 0036 03F0F803 		and	r3, r3, #248
 2591              	.LVL222:
 2592              	.LBB283:
 2593              	.LBB284:
 2594              		.loc 2 531 0
 2595 003a F822     		movs	r2, #248
 2596              		.syntax unified
 2597              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2598 003c 92FAA2F2 		rbit r2, r2
 2599              	@ 0 "" 2
 2600              	.LVL223:
 2601              		.thumb
 2602              		.syntax unified
 2603              	.LBE284:
 2604              	.LBE283:
 2605              		.loc 1 1049 0
 2606 0040 B2FA82F2 		clz	r2, r2
 2607 0044 D340     		lsrs	r3, r3, r2
 2608 0046 6361     		str	r3, [r4, #20]
1050:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
1051:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get the LSE configuration -----------------------------------------------*/
1052:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if((RCC->BDCR &RCC_BDCR_LSEBYP) == RCC_BDCR_LSEBYP)
ARM GAS  /tmp/ccdVnXpZ.s 			page 77


 2609              		.loc 1 1052 0
 2610 0048 0B6A     		ldr	r3, [r1, #32]
 2611 004a 13F0040F 		tst	r3, #4
 2612 004e 2ED0     		beq	.L218
1053:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1054:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_BYPASS;
 2613              		.loc 1 1054 0
 2614 0050 0523     		movs	r3, #5
 2615 0052 E360     		str	r3, [r4, #12]
 2616              	.L219:
1055:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1056:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   else if((RCC->BDCR &RCC_BDCR_LSEON) == RCC_BDCR_LSEON)
1057:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1058:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_ON;
1059:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1060:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   else
1061:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1062:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_OFF;
1063:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1064:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
1065:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get the LSI configuration -----------------------------------------------*/
1066:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if((RCC->CSR &RCC_CSR_LSION) == RCC_CSR_LSION)
 2617              		.loc 1 1066 0
 2618 0054 1E4B     		ldr	r3, .L228
 2619 0056 5B6A     		ldr	r3, [r3, #36]
 2620 0058 13F0010F 		tst	r3, #1
 2621 005c 32D0     		beq	.L221
1067:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1068:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     RCC_OscInitStruct->LSIState = RCC_LSI_ON;
 2622              		.loc 1 1068 0
 2623 005e 0123     		movs	r3, #1
 2624 0060 A361     		str	r3, [r4, #24]
 2625              	.L222:
1069:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1070:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   else
1071:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1072:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     RCC_OscInitStruct->LSIState = RCC_LSI_OFF;
1073:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1074:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
1075:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
1076:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get the PLL configuration -----------------------------------------------*/
1077:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_PLLON) == RCC_CR_PLLON)
 2626              		.loc 1 1077 0
 2627 0062 1B4B     		ldr	r3, .L228
 2628 0064 1B68     		ldr	r3, [r3]
 2629 0066 13F0807F 		tst	r3, #16777216
 2630 006a 2ED1     		bne	.L227
1078:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1079:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     RCC_OscInitStruct->PLL.PLLState = RCC_PLL_ON;
1080:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1081:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   else
1082:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1083:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     RCC_OscInitStruct->PLL.PLLState = RCC_PLL_OFF;
 2631              		.loc 1 1083 0
 2632 006c 0123     		movs	r3, #1
 2633 006e E361     		str	r3, [r4, #28]
 2634              	.L224:
ARM GAS  /tmp/ccdVnXpZ.s 			page 78


1084:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1085:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLSource = (uint32_t)(RCC->CFGR & RCC_CFGR_PLLSRC);
 2635              		.loc 1 1085 0
 2636 0070 174A     		ldr	r2, .L228
 2637 0072 5368     		ldr	r3, [r2, #4]
 2638 0074 03F48033 		and	r3, r3, #65536
 2639 0078 2362     		str	r3, [r4, #32]
1086:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLMUL = (uint32_t)(RCC->CFGR & RCC_CFGR_PLLMUL);
 2640              		.loc 1 1086 0
 2641 007a 5368     		ldr	r3, [r2, #4]
 2642 007c 03F47013 		and	r3, r3, #3932160
 2643 0080 6362     		str	r3, [r4, #36]
 2644 0082 10BD     		pop	{r4, pc}
 2645              	.LVL224:
 2646              	.L226:
1015:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 2647              		.loc 1 1015 0 discriminator 1
 2648 0084 40F2F731 		movw	r1, #1015
 2649 0088 1248     		ldr	r0, .L228+4
 2650              	.LVL225:
 2651 008a FFF7FEFF 		bl	assert_failed
 2652              	.LVL226:
 2653 008e BBE7     		b	.L212
 2654              	.L213:
1027:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 2655              		.loc 1 1027 0
 2656 0090 0F4B     		ldr	r3, .L228
 2657 0092 1B68     		ldr	r3, [r3]
 2658 0094 13F4803F 		tst	r3, #65536
 2659 0098 03D0     		beq	.L215
1029:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 2660              		.loc 1 1029 0
 2661 009a 4FF48033 		mov	r3, #65536
 2662 009e 6360     		str	r3, [r4, #4]
 2663 00a0 BCE7     		b	.L214
 2664              	.L215:
1033:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 2665              		.loc 1 1033 0
 2666 00a2 0023     		movs	r3, #0
 2667 00a4 6360     		str	r3, [r4, #4]
 2668 00a6 B9E7     		b	.L214
 2669              	.L216:
1046:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 2670              		.loc 1 1046 0
 2671 00a8 0023     		movs	r3, #0
 2672 00aa 2361     		str	r3, [r4, #16]
 2673 00ac C1E7     		b	.L217
 2674              	.L218:
1056:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 2675              		.loc 1 1056 0
 2676 00ae 084B     		ldr	r3, .L228
 2677 00b0 1B6A     		ldr	r3, [r3, #32]
 2678 00b2 13F0010F 		tst	r3, #1
 2679 00b6 02D0     		beq	.L220
1058:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 2680              		.loc 1 1058 0
 2681 00b8 0123     		movs	r3, #1
ARM GAS  /tmp/ccdVnXpZ.s 			page 79


 2682 00ba E360     		str	r3, [r4, #12]
 2683 00bc CAE7     		b	.L219
 2684              	.L220:
1062:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 2685              		.loc 1 1062 0
 2686 00be 0023     		movs	r3, #0
 2687 00c0 E360     		str	r3, [r4, #12]
 2688 00c2 C7E7     		b	.L219
 2689              	.L221:
1072:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 2690              		.loc 1 1072 0
 2691 00c4 0023     		movs	r3, #0
 2692 00c6 A361     		str	r3, [r4, #24]
 2693 00c8 CBE7     		b	.L222
 2694              	.L227:
1079:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 2695              		.loc 1 1079 0
 2696 00ca 0223     		movs	r3, #2
 2697 00cc E361     		str	r3, [r4, #28]
 2698 00ce CFE7     		b	.L224
 2699              	.L229:
 2700              		.align	2
 2701              	.L228:
 2702 00d0 00100240 		.word	1073876992
 2703 00d4 00000000 		.word	.LC0
 2704              		.cfi_endproc
 2705              	.LFE133:
 2707              		.section	.text.HAL_RCC_GetClockConfig,"ax",%progbits
 2708              		.align	1
 2709              		.global	HAL_RCC_GetClockConfig
 2710              		.syntax unified
 2711              		.thumb
 2712              		.thumb_func
 2713              		.fpu fpv4-sp-d16
 2715              	HAL_RCC_GetClockConfig:
 2716              	.LFB134:
1087:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #if defined(RCC_CFGR_PLLSRC_HSI_PREDIV)
1088:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PREDIV = (uint32_t)(RCC->CFGR2 & RCC_CFGR2_PREDIV);
1089:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #endif /* RCC_CFGR_PLLSRC_HSI_PREDIV */
1090:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
1091:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
1092:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
1093:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Get the RCC_ClkInitStruct according to the internal 
1094:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * RCC configuration registers.
1095:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @param  RCC_ClkInitStruct pointer to an RCC_ClkInitTypeDef structure that 
1096:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * contains the current clock configuration.
1097:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @param  pFLatency Pointer on the Flash Latency.
1098:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval None
1099:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
1100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
1101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
 2717              		.loc 1 1101 0
 2718              		.cfi_startproc
 2719              		@ args = 0, pretend = 0, frame = 0
 2720              		@ frame_needed = 0, uses_anonymous_args = 0
 2721              	.LVL227:
 2722 0000 38B5     		push	{r3, r4, r5, lr}
ARM GAS  /tmp/ccdVnXpZ.s 			page 80


 2723              	.LCFI12:
 2724              		.cfi_def_cfa_offset 16
 2725              		.cfi_offset 3, -16
 2726              		.cfi_offset 4, -12
 2727              		.cfi_offset 5, -8
 2728              		.cfi_offset 14, -4
 2729 0002 0D46     		mov	r5, r1
1102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Check the parameters */
1103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   assert_param(RCC_ClkInitStruct != NULL);
 2730              		.loc 1 1103 0
 2731 0004 0446     		mov	r4, r0
 2732 0006 D0B1     		cbz	r0, .L234
 2733              	.LVL228:
 2734              	.L231:
1104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   assert_param(pFLatency != NULL);
 2735              		.loc 1 1104 0
 2736 0008 FDB1     		cbz	r5, .L235
 2737              	.L232:
1105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
1106:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Set all possible values for the Clock type parameter --------------------*/
1107:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | 
 2738              		.loc 1 1107 0
 2739 000a 0F23     		movs	r3, #15
 2740 000c 2360     		str	r3, [r4]
1108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
1109:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get the SYSCLK configuration --------------------------------------------*/ 
1110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 2741              		.loc 1 1110 0
 2742 000e 124B     		ldr	r3, .L236
 2743 0010 5A68     		ldr	r2, [r3, #4]
 2744 0012 02F00302 		and	r2, r2, #3
 2745 0016 6260     		str	r2, [r4, #4]
1111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
1112:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get the HCLK configuration ----------------------------------------------*/ 
1113:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE); 
 2746              		.loc 1 1113 0
 2747 0018 5A68     		ldr	r2, [r3, #4]
 2748 001a 02F0F002 		and	r2, r2, #240
 2749 001e A260     		str	r2, [r4, #8]
1114:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
1115:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get the APB1 configuration ----------------------------------------------*/ 
1116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);   
 2750              		.loc 1 1116 0
 2751 0020 5A68     		ldr	r2, [r3, #4]
 2752 0022 02F4E062 		and	r2, r2, #1792
 2753 0026 E260     		str	r2, [r4, #12]
1117:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
1118:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get the APB2 configuration ----------------------------------------------*/ 
1119:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 2754              		.loc 1 1119 0
 2755 0028 5B68     		ldr	r3, [r3, #4]
 2756 002a DB08     		lsrs	r3, r3, #3
 2757 002c 03F4E063 		and	r3, r3, #1792
 2758 0030 2361     		str	r3, [r4, #16]
1120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
1121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get the Flash Wait State (Latency) configuration ------------------------*/   
1122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY); 
ARM GAS  /tmp/ccdVnXpZ.s 			page 81


 2759              		.loc 1 1122 0
 2760 0032 0A4B     		ldr	r3, .L236+4
 2761 0034 1B68     		ldr	r3, [r3]
 2762 0036 03F00703 		and	r3, r3, #7
 2763 003a 2B60     		str	r3, [r5]
 2764 003c 38BD     		pop	{r3, r4, r5, pc}
 2765              	.LVL229:
 2766              	.L234:
1103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   assert_param(pFLatency != NULL);
 2767              		.loc 1 1103 0 discriminator 1
 2768 003e 40F24F41 		movw	r1, #1103
 2769              	.LVL230:
 2770 0042 0748     		ldr	r0, .L236+8
 2771              	.LVL231:
 2772 0044 FFF7FEFF 		bl	assert_failed
 2773              	.LVL232:
 2774 0048 DEE7     		b	.L231
 2775              	.L235:
1104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 2776              		.loc 1 1104 0 discriminator 1
 2777 004a 4FF48A61 		mov	r1, #1104
 2778 004e 0448     		ldr	r0, .L236+8
 2779 0050 FFF7FEFF 		bl	assert_failed
 2780              	.LVL233:
 2781 0054 D9E7     		b	.L232
 2782              	.L237:
 2783 0056 00BF     		.align	2
 2784              	.L236:
 2785 0058 00100240 		.word	1073876992
 2786 005c 00200240 		.word	1073881088
 2787 0060 00000000 		.word	.LC0
 2788              		.cfi_endproc
 2789              	.LFE134:
 2791              		.section	.text.HAL_RCC_CSSCallback,"ax",%progbits
 2792              		.align	1
 2793              		.weak	HAL_RCC_CSSCallback
 2794              		.syntax unified
 2795              		.thumb
 2796              		.thumb_func
 2797              		.fpu fpv4-sp-d16
 2799              	HAL_RCC_CSSCallback:
 2800              	.LFB136:
1123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
1124:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
1125:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
1126:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief This function handles the RCC CSS interrupt request.
1127:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note This API should be called under the NMI_Handler().
1128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval None
1129:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
1130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** void HAL_RCC_NMI_IRQHandler(void)
1131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
1132:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Check RCC CSSF flag  */
1133:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(__HAL_RCC_GET_IT(RCC_IT_CSS))
1134:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1135:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* RCC Clock Security System interrupt user callback */
1136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     HAL_RCC_CSSCallback();
1137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
ARM GAS  /tmp/ccdVnXpZ.s 			page 82


1138:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Clear RCC CSS pending bit */
1139:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     __HAL_RCC_CLEAR_IT(RCC_IT_CSS);
1140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1141:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
1142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
1143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
1144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  RCC Clock Security System interrupt callback
1145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval none
1146:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
1147:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** __weak void HAL_RCC_CSSCallback(void)
1148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
 2801              		.loc 1 1148 0
 2802              		.cfi_startproc
 2803              		@ args = 0, pretend = 0, frame = 0
 2804              		@ frame_needed = 0, uses_anonymous_args = 0
 2805              		@ link register save eliminated.
 2806 0000 7047     		bx	lr
 2807              		.cfi_endproc
 2808              	.LFE136:
 2810              		.section	.text.HAL_RCC_NMI_IRQHandler,"ax",%progbits
 2811              		.align	1
 2812              		.global	HAL_RCC_NMI_IRQHandler
 2813              		.syntax unified
 2814              		.thumb
 2815              		.thumb_func
 2816              		.fpu fpv4-sp-d16
 2818              	HAL_RCC_NMI_IRQHandler:
 2819              	.LFB135:
1131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Check RCC CSSF flag  */
 2820              		.loc 1 1131 0
 2821              		.cfi_startproc
 2822              		@ args = 0, pretend = 0, frame = 0
 2823              		@ frame_needed = 0, uses_anonymous_args = 0
1131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Check RCC CSSF flag  */
 2824              		.loc 1 1131 0
 2825 0000 08B5     		push	{r3, lr}
 2826              	.LCFI13:
 2827              		.cfi_def_cfa_offset 8
 2828              		.cfi_offset 3, -8
 2829              		.cfi_offset 14, -4
1133:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 2830              		.loc 1 1133 0
 2831 0002 064B     		ldr	r3, .L243
 2832 0004 9B68     		ldr	r3, [r3, #8]
 2833 0006 13F0800F 		tst	r3, #128
 2834 000a 00D1     		bne	.L242
 2835              	.L239:
 2836 000c 08BD     		pop	{r3, pc}
 2837              	.L242:
1136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
 2838              		.loc 1 1136 0
 2839 000e FFF7FEFF 		bl	HAL_RCC_CSSCallback
 2840              	.LVL234:
1139:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 2841              		.loc 1 1139 0
 2842 0012 8022     		movs	r2, #128
 2843 0014 024B     		ldr	r3, .L243+4
ARM GAS  /tmp/ccdVnXpZ.s 			page 83


 2844 0016 1A70     		strb	r2, [r3]
1141:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 2845              		.loc 1 1141 0
 2846 0018 F8E7     		b	.L239
 2847              	.L244:
 2848 001a 00BF     		.align	2
 2849              	.L243:
 2850 001c 00100240 		.word	1073876992
 2851 0020 0A100240 		.word	1073877002
 2852              		.cfi_endproc
 2853              	.LFE135:
 2855              		.global	aPredivFactorTable
 2856              		.global	aPLLMULFactorTable
 2857              		.section	.rodata.HAL_RCC_OscConfig.str1.4,"aMS",%progbits,1
 2858              		.align	2
 2859              	.LC0:
 2860 0000 44726976 		.ascii	"Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc."
 2860      6572732F 
 2860      53544D33 
 2860      32463378 
 2860      785F4841 
 2861 0033 6300     		.ascii	"c\000"
 2862              		.section	.rodata.aPLLMULFactorTable,"a",%progbits
 2863              		.align	2
 2864              		.set	.LANCHOR0,. + 0
 2867              	aPLLMULFactorTable:
 2868 0000 02       		.byte	2
 2869 0001 03       		.byte	3
 2870 0002 04       		.byte	4
 2871 0003 05       		.byte	5
 2872 0004 06       		.byte	6
 2873 0005 07       		.byte	7
 2874 0006 08       		.byte	8
 2875 0007 09       		.byte	9
 2876 0008 0A       		.byte	10
 2877 0009 0B       		.byte	11
 2878 000a 0C       		.byte	12
 2879 000b 0D       		.byte	13
 2880 000c 0E       		.byte	14
 2881 000d 0F       		.byte	15
 2882 000e 10       		.byte	16
 2883 000f 10       		.byte	16
 2884              		.section	.rodata.aPredivFactorTable,"a",%progbits
 2885              		.align	2
 2886              		.set	.LANCHOR1,. + 0
 2889              	aPredivFactorTable:
 2890 0000 01       		.byte	1
 2891 0001 02       		.byte	2
 2892 0002 03       		.byte	3
 2893 0003 04       		.byte	4
 2894 0004 05       		.byte	5
 2895 0005 06       		.byte	6
 2896 0006 07       		.byte	7
 2897 0007 08       		.byte	8
 2898 0008 09       		.byte	9
 2899 0009 0A       		.byte	10
 2900 000a 0B       		.byte	11
ARM GAS  /tmp/ccdVnXpZ.s 			page 84


 2901 000b 0C       		.byte	12
 2902 000c 0D       		.byte	13
 2903 000d 0E       		.byte	14
 2904 000e 0F       		.byte	15
 2905 000f 10       		.byte	16
 2906              		.text
 2907              	.Letext0:
 2908              		.file 3 "/home/saicharan/arm/arm-none-eabi/include/machine/_default_types.h"
 2909              		.file 4 "/home/saicharan/arm/arm-none-eabi/include/stdint.h"
 2910              		.file 5 "Drivers/CMSIS/Include/core_cm4.h"
 2911              		.file 6 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/system_stm32f3xx.h"
 2912              		.file 7 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303xc.h"
 2913              		.file 8 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f3xx.h"
 2914              		.file 9 "/home/saicharan/arm/arm-none-eabi/include/sys/lock.h"
 2915              		.file 10 "/home/saicharan/arm/arm-none-eabi/include/sys/_types.h"
 2916              		.file 11 "/home/saicharan/arm/lib/gcc/arm-none-eabi/6.3.0/include/stddef.h"
 2917              		.file 12 "/home/saicharan/arm/arm-none-eabi/include/sys/reent.h"
 2918              		.file 13 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 2919              		.file 14 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rcc.h"
 2920              		.file 15 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_gpio.h"
 2921              		.file 16 "Inc/stm32f3xx_hal_conf.h"
 2922              		.file 17 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal.h"
ARM GAS  /tmp/ccdVnXpZ.s 			page 85


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f3xx_hal_rcc.c
     /tmp/ccdVnXpZ.s:18     .text.HAL_RCC_DeInit:0000000000000000 $t
     /tmp/ccdVnXpZ.s:25     .text.HAL_RCC_DeInit:0000000000000000 HAL_RCC_DeInit
     /tmp/ccdVnXpZ.s:69     .text.HAL_RCC_DeInit:0000000000000038 $d
     /tmp/ccdVnXpZ.s:77     .text.HAL_RCC_OscConfig:0000000000000000 $t
     /tmp/ccdVnXpZ.s:84     .text.HAL_RCC_OscConfig:0000000000000000 HAL_RCC_OscConfig
     /tmp/ccdVnXpZ.s:713    .text.HAL_RCC_OscConfig:0000000000000308 $d
     /tmp/ccdVnXpZ.s:721    .text.HAL_RCC_OscConfig:0000000000000314 $t
     /tmp/ccdVnXpZ.s:1319   .text.HAL_RCC_OscConfig:00000000000005c8 $d
     /tmp/ccdVnXpZ.s:1325   .text.HAL_RCC_OscConfig:00000000000005d8 $t
     /tmp/ccdVnXpZ.s:1588   .text.HAL_RCC_OscConfig:0000000000000728 $d
     /tmp/ccdVnXpZ.s:1594   .text.HAL_RCC_MCOConfig:0000000000000000 $t
     /tmp/ccdVnXpZ.s:1601   .text.HAL_RCC_MCOConfig:0000000000000000 HAL_RCC_MCOConfig
     /tmp/ccdVnXpZ.s:1720   .text.HAL_RCC_MCOConfig:0000000000000098 $d
     /tmp/ccdVnXpZ.s:1726   .text.HAL_RCC_EnableCSS:0000000000000000 $t
     /tmp/ccdVnXpZ.s:1733   .text.HAL_RCC_EnableCSS:0000000000000000 HAL_RCC_EnableCSS
     /tmp/ccdVnXpZ.s:1766   .text.HAL_RCC_DisableCSS:0000000000000000 $t
     /tmp/ccdVnXpZ.s:1773   .text.HAL_RCC_DisableCSS:0000000000000000 HAL_RCC_DisableCSS
     /tmp/ccdVnXpZ.s:1806   .text.HAL_RCC_GetSysClockFreq:0000000000000000 $t
     /tmp/ccdVnXpZ.s:1813   .text.HAL_RCC_GetSysClockFreq:0000000000000000 HAL_RCC_GetSysClockFreq
     /tmp/ccdVnXpZ.s:1903   .text.HAL_RCC_GetSysClockFreq:000000000000005c $d
     /tmp/ccdVnXpZ.s:1912   .text.HAL_RCC_ClockConfig:0000000000000000 $t
     /tmp/ccdVnXpZ.s:1919   .text.HAL_RCC_ClockConfig:0000000000000000 HAL_RCC_ClockConfig
     /tmp/ccdVnXpZ.s:2392   .text.HAL_RCC_ClockConfig:0000000000000284 $d
     /tmp/ccdVnXpZ.s:2401   .text.HAL_RCC_GetHCLKFreq:0000000000000000 $t
     /tmp/ccdVnXpZ.s:2408   .text.HAL_RCC_GetHCLKFreq:0000000000000000 HAL_RCC_GetHCLKFreq
     /tmp/ccdVnXpZ.s:2422   .text.HAL_RCC_GetHCLKFreq:0000000000000008 $d
     /tmp/ccdVnXpZ.s:2427   .text.HAL_RCC_GetPCLK1Freq:0000000000000000 $t
     /tmp/ccdVnXpZ.s:2434   .text.HAL_RCC_GetPCLK1Freq:0000000000000000 HAL_RCC_GetPCLK1Freq
     /tmp/ccdVnXpZ.s:2476   .text.HAL_RCC_GetPCLK1Freq:0000000000000024 $d
     /tmp/ccdVnXpZ.s:2482   .text.HAL_RCC_GetPCLK2Freq:0000000000000000 $t
     /tmp/ccdVnXpZ.s:2489   .text.HAL_RCC_GetPCLK2Freq:0000000000000000 HAL_RCC_GetPCLK2Freq
     /tmp/ccdVnXpZ.s:2531   .text.HAL_RCC_GetPCLK2Freq:0000000000000024 $d
     /tmp/ccdVnXpZ.s:2537   .text.HAL_RCC_GetOscConfig:0000000000000000 $t
     /tmp/ccdVnXpZ.s:2544   .text.HAL_RCC_GetOscConfig:0000000000000000 HAL_RCC_GetOscConfig
     /tmp/ccdVnXpZ.s:2702   .text.HAL_RCC_GetOscConfig:00000000000000d0 $d
     /tmp/ccdVnXpZ.s:2708   .text.HAL_RCC_GetClockConfig:0000000000000000 $t
     /tmp/ccdVnXpZ.s:2715   .text.HAL_RCC_GetClockConfig:0000000000000000 HAL_RCC_GetClockConfig
     /tmp/ccdVnXpZ.s:2785   .text.HAL_RCC_GetClockConfig:0000000000000058 $d
     /tmp/ccdVnXpZ.s:2792   .text.HAL_RCC_CSSCallback:0000000000000000 $t
     /tmp/ccdVnXpZ.s:2799   .text.HAL_RCC_CSSCallback:0000000000000000 HAL_RCC_CSSCallback
     /tmp/ccdVnXpZ.s:2811   .text.HAL_RCC_NMI_IRQHandler:0000000000000000 $t
     /tmp/ccdVnXpZ.s:2818   .text.HAL_RCC_NMI_IRQHandler:0000000000000000 HAL_RCC_NMI_IRQHandler
     /tmp/ccdVnXpZ.s:2850   .text.HAL_RCC_NMI_IRQHandler:000000000000001c $d
     /tmp/ccdVnXpZ.s:2889   .rodata.aPredivFactorTable:0000000000000000 aPredivFactorTable
     /tmp/ccdVnXpZ.s:2867   .rodata.aPLLMULFactorTable:0000000000000000 aPLLMULFactorTable
     /tmp/ccdVnXpZ.s:2858   .rodata.HAL_RCC_OscConfig.str1.4:0000000000000000 $d
     /tmp/ccdVnXpZ.s:2863   .rodata.aPLLMULFactorTable:0000000000000000 $d
     /tmp/ccdVnXpZ.s:2885   .rodata.aPredivFactorTable:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
SystemCoreClock
assert_failed
HAL_GetTick
HAL_GPIO_Init
ARM GAS  /tmp/ccdVnXpZ.s 			page 86


HAL_InitTick
AHBPrescTable
APBPrescTable
