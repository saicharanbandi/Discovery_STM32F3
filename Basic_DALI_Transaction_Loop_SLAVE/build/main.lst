ARM GAS  /tmp/cciojoWF.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	MX_GPIO_Init:
  25              	.LFB126:
  26              		.file 1 "Src/main.c"
   1:Src/main.c    **** /**
   2:Src/main.c    ****   ******************************************************************************
   3:Src/main.c    ****   * File Name          : main.c
   4:Src/main.c    ****   * Description        : Main program body
   5:Src/main.c    ****   ******************************************************************************
   6:Src/main.c    ****   ** This notice applies to any and all portions of this file
   7:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
   8:Src/main.c    ****   * USER CODE END. Other portions of this file, whether 
   9:Src/main.c    ****   * inserted by the user or by software development tools
  10:Src/main.c    ****   * are owned by their respective copyright owners.
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * COPYRIGHT(c) 2017 STMicroelectronics
  13:Src/main.c    ****   *
  14:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without modification,
  15:Src/main.c    ****   * are permitted provided that the following conditions are met:
  16:Src/main.c    ****   *   1. Redistributions of source code must retain the above copyright notice,
  17:Src/main.c    ****   *      this list of conditions and the following disclaimer.
  18:Src/main.c    ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  19:Src/main.c    ****   *      this list of conditions and the following disclaimer in the documentation
  20:Src/main.c    ****   *      and/or other materials provided with the distribution.
  21:Src/main.c    ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  22:Src/main.c    ****   *      may be used to endorse or promote products derived from this software
  23:Src/main.c    ****   *      without specific prior written permission.
  24:Src/main.c    ****   *
  25:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  26:Src/main.c    ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  27:Src/main.c    ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  28:Src/main.c    ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  29:Src/main.c    ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  30:Src/main.c    ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  31:Src/main.c    ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  32:Src/main.c    ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
ARM GAS  /tmp/cciojoWF.s 			page 2


  33:Src/main.c    ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  34:Src/main.c    ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  35:Src/main.c    ****   *
  36:Src/main.c    ****   ******************************************************************************
  37:Src/main.c    ****   */
  38:Src/main.c    **** 
  39:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  40:Src/main.c    **** #include "main.h"
  41:Src/main.c    **** #include "stm32f3xx_hal.h"
  42:Src/main.c    **** 
  43:Src/main.c    **** /* USER CODE BEGIN Includes */
  44:Src/main.c    **** 
  45:Src/main.c    **** /* USER CODE END Includes */
  46:Src/main.c    **** 
  47:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  48:Src/main.c    **** TIM_HandleTypeDef htim2;
  49:Src/main.c    **** 
  50:Src/main.c    **** /* USER CODE BEGIN PV */
  51:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  52:Src/main.c    **** unsigned char start_timer = 0;
  53:Src/main.c    **** int tick_count = 0;
  54:Src/main.c    **** unsigned char bit_count = 0;
  55:Src/main.c    **** /* array initialization for receive buffer */
  56:Src/main.c    **** volatile unsigned char dali_slave_array_receive_buffer[17];
  57:Src/main.c    **** 
  58:Src/main.c    **** /*Address and command byte received variables */
  59:Src/main.c    **** volatile unsigned char slave_addr_byte_received;
  60:Src/main.c    **** volatile unsigned char slave_cmd_byte_received;
  61:Src/main.c    **** /* USER CODE END PV */
  62:Src/main.c    **** 
  63:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  64:Src/main.c    **** void SystemClock_Config(void);
  65:Src/main.c    **** static void MX_GPIO_Init(void);
  66:Src/main.c    **** static void MX_TIM2_Init(void);
  67:Src/main.c    **** 
  68:Src/main.c    **** /* USER CODE BEGIN PFP */
  69:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  70:Src/main.c    **** void Forward_Frame_Received(void);
  71:Src/main.c    **** void DALI_Slave_Receiving_Data(void);
  72:Src/main.c    **** /* USER CODE END PFP */
  73:Src/main.c    **** 
  74:Src/main.c    **** /* USER CODE BEGIN 0 */
  75:Src/main.c    **** 
  76:Src/main.c    **** /* USER CODE END 0 */
  77:Src/main.c    **** 
  78:Src/main.c    **** int main(void)
  79:Src/main.c    **** {
  80:Src/main.c    **** 
  81:Src/main.c    ****   /* USER CODE BEGIN 1 */
  82:Src/main.c    **** 
  83:Src/main.c    ****   /* USER CODE END 1 */
  84:Src/main.c    **** 
  85:Src/main.c    ****   /* MCU Configuration----------------------------------------------------------*/
  86:Src/main.c    **** 
  87:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  88:Src/main.c    ****   HAL_Init();
  89:Src/main.c    **** 
ARM GAS  /tmp/cciojoWF.s 			page 3


  90:Src/main.c    ****   /* USER CODE BEGIN Init */
  91:Src/main.c    **** 
  92:Src/main.c    ****   /* USER CODE END Init */
  93:Src/main.c    **** 
  94:Src/main.c    ****   /* Configure the system clock */
  95:Src/main.c    ****   SystemClock_Config();
  96:Src/main.c    **** 
  97:Src/main.c    ****   /* USER CODE BEGIN SysInit */
  98:Src/main.c    **** 
  99:Src/main.c    ****   /* USER CODE END SysInit */
 100:Src/main.c    **** 
 101:Src/main.c    ****   /* Initialize all configured peripherals */
 102:Src/main.c    ****   MX_GPIO_Init();
 103:Src/main.c    ****   MX_TIM2_Init();
 104:Src/main.c    **** 
 105:Src/main.c    ****   /* USER CODE BEGIN 2 */
 106:Src/main.c    ****   /* Wait for the first interrupt to occur - beware of first bit*/
 107:Src/main.c    ****   while(start_timer == 0)
 108:Src/main.c    ****     {
 109:Src/main.c    ****     }
 110:Src/main.c    **** 
 111:Src/main.c    ****   /* Start timer in base_IT mode */
 112:Src/main.c    ****   if(HAL_TIM_Base_Start_IT(&htim2) != HAL_OK)
 113:Src/main.c    ****     {
 114:Src/main.c    ****       _Error_Handler(__FILE__, __LINE__);
 115:Src/main.c    ****     }
 116:Src/main.c    **** 
 117:Src/main.c    ****   
 118:Src/main.c    ****   /* USER CODE END 2 */
 119:Src/main.c    **** 
 120:Src/main.c    ****   /* Infinite loop */
 121:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 122:Src/main.c    ****   while (1)
 123:Src/main.c    ****   {
 124:Src/main.c    ****   /* USER CODE END WHILE */
 125:Src/main.c    **** 
 126:Src/main.c    ****   /* USER CODE BEGIN 3 */
 127:Src/main.c    **** 
 128:Src/main.c    ****   }
 129:Src/main.c    ****   /* USER CODE END 3 */
 130:Src/main.c    **** 
 131:Src/main.c    **** }
 132:Src/main.c    **** 
 133:Src/main.c    **** /** System Clock Configuration
 134:Src/main.c    **** */
 135:Src/main.c    **** void SystemClock_Config(void)
 136:Src/main.c    **** {
 137:Src/main.c    **** 
 138:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct;
 139:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 140:Src/main.c    **** 
 141:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 142:Src/main.c    ****     */
 143:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 144:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 145:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 146:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
ARM GAS  /tmp/cciojoWF.s 			page 4


 147:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 148:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL16;
 149:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 150:Src/main.c    ****   {
 151:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 152:Src/main.c    ****   }
 153:Src/main.c    **** 
 154:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 155:Src/main.c    ****     */
 156:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 157:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 158:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 159:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 160:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 161:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 162:Src/main.c    **** 
 163:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 164:Src/main.c    ****   {
 165:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 166:Src/main.c    ****   }
 167:Src/main.c    **** 
 168:Src/main.c    ****     /**Configure the Systick interrupt time 
 169:Src/main.c    ****     */
 170:Src/main.c    ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 171:Src/main.c    **** 
 172:Src/main.c    ****     /**Configure the Systick 
 173:Src/main.c    ****     */
 174:Src/main.c    ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 175:Src/main.c    **** 
 176:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
 177:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
 178:Src/main.c    **** }
 179:Src/main.c    **** 
 180:Src/main.c    **** /* TIM2 init function */
 181:Src/main.c    **** static void MX_TIM2_Init(void)
 182:Src/main.c    **** {
 183:Src/main.c    **** 
 184:Src/main.c    ****   TIM_ClockConfigTypeDef sClockSourceConfig;
 185:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig;
 186:Src/main.c    **** 
 187:Src/main.c    ****   htim2.Instance = TIM2;
 188:Src/main.c    ****   htim2.Init.Prescaler = 63;
 189:Src/main.c    ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 190:Src/main.c    ****   htim2.Init.Period = 103;
 191:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 192:Src/main.c    ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 193:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 194:Src/main.c    ****   {
 195:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 196:Src/main.c    ****   }
 197:Src/main.c    **** 
 198:Src/main.c    ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 199:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 200:Src/main.c    ****   {
 201:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 202:Src/main.c    ****   }
 203:Src/main.c    **** 
ARM GAS  /tmp/cciojoWF.s 			page 5


 204:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 205:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 206:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 207:Src/main.c    ****   {
 208:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 209:Src/main.c    ****   }
 210:Src/main.c    **** 
 211:Src/main.c    **** }
 212:Src/main.c    **** 
 213:Src/main.c    **** /** Configure pins as 
 214:Src/main.c    ****         * Analog 
 215:Src/main.c    ****         * Input 
 216:Src/main.c    ****         * Output
 217:Src/main.c    ****         * EVENT_OUT
 218:Src/main.c    ****         * EXTI
 219:Src/main.c    **** */
 220:Src/main.c    **** static void MX_GPIO_Init(void)
 221:Src/main.c    **** {
  27              		.loc 1 221 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 32
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 20
  34              		.cfi_offset 4, -20
  35              		.cfi_offset 5, -16
  36              		.cfi_offset 6, -12
  37              		.cfi_offset 7, -8
  38              		.cfi_offset 14, -4
  39 0002 89B0     		sub	sp, sp, #36
  40              	.LCFI1:
  41              		.cfi_def_cfa_offset 56
  42              	.LBB2:
 222:Src/main.c    **** 
 223:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct;
 224:Src/main.c    **** 
 225:Src/main.c    ****   /* GPIO Ports Clock Enable */
 226:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  43              		.loc 1 226 0
  44 0004 2D4B     		ldr	r3, .L3
  45 0006 5A69     		ldr	r2, [r3, #20]
  46 0008 42F40032 		orr	r2, r2, #131072
  47 000c 5A61     		str	r2, [r3, #20]
  48 000e 5A69     		ldr	r2, [r3, #20]
  49 0010 02F40032 		and	r2, r2, #131072
  50 0014 0192     		str	r2, [sp, #4]
  51 0016 019A     		ldr	r2, [sp, #4]
  52              	.LBE2:
  53              	.LBB3:
 227:Src/main.c    ****   __HAL_RCC_GPIOE_CLK_ENABLE();
  54              		.loc 1 227 0
  55 0018 5A69     		ldr	r2, [r3, #20]
  56 001a 42F40012 		orr	r2, r2, #2097152
  57 001e 5A61     		str	r2, [r3, #20]
  58 0020 5B69     		ldr	r3, [r3, #20]
  59 0022 03F40013 		and	r3, r3, #2097152
ARM GAS  /tmp/cciojoWF.s 			page 6


  60 0026 0293     		str	r3, [sp, #8]
  61 0028 029B     		ldr	r3, [sp, #8]
  62              	.LBE3:
 228:Src/main.c    **** 
 229:Src/main.c    ****   /*Configure GPIO pin Output Level */
 230:Src/main.c    ****   HAL_GPIO_WritePin(Manch_Tx_GPIO_Port, Manch_Tx_Pin, GPIO_PIN_RESET);
  63              		.loc 1 230 0
  64 002a 0022     		movs	r2, #0
  65 002c 0421     		movs	r1, #4
  66 002e 4FF09040 		mov	r0, #1207959552
  67 0032 FFF7FEFF 		bl	HAL_GPIO_WritePin
  68              	.LVL0:
 231:Src/main.c    **** 
 232:Src/main.c    ****   /*Configure GPIO pin Output Level */
 233:Src/main.c    ****   HAL_GPIO_WritePin(GPIOE, LED_Blue_Pin|LED_Red_Pin|LED_Orange_Pin|LED_Green_Pin 
  69              		.loc 1 233 0
  70 0036 224F     		ldr	r7, .L3+4
  71 0038 0022     		movs	r2, #0
  72 003a 4FF47F41 		mov	r1, #65280
  73 003e 3846     		mov	r0, r7
  74 0040 FFF7FEFF 		bl	HAL_GPIO_WritePin
  75              	.LVL1:
 234:Src/main.c    ****                           |LED_BLUE_Pin|LED_RED_Pin|LED_ORANGE_Pin|LED_GREEN_Pin, GPIO_PIN_RESET);
 235:Src/main.c    **** 
 236:Src/main.c    ****   /*Configure GPIO pin : USER_BUTTON_Pin */
 237:Src/main.c    ****   GPIO_InitStruct.Pin = USER_BUTTON_Pin;
  76              		.loc 1 237 0
  77 0044 0124     		movs	r4, #1
  78 0046 0394     		str	r4, [sp, #12]
 238:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
  79              		.loc 1 238 0
  80 0048 1E4B     		ldr	r3, .L3+8
  81 004a 0493     		str	r3, [sp, #16]
 239:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_PULLDOWN;
  82              		.loc 1 239 0
  83 004c 0226     		movs	r6, #2
  84 004e 0596     		str	r6, [sp, #20]
 240:Src/main.c    ****   HAL_GPIO_Init(USER_BUTTON_GPIO_Port, &GPIO_InitStruct);
  85              		.loc 1 240 0
  86 0050 03A9     		add	r1, sp, #12
  87 0052 4FF09040 		mov	r0, #1207959552
  88 0056 FFF7FEFF 		bl	HAL_GPIO_Init
  89              	.LVL2:
 241:Src/main.c    **** 
 242:Src/main.c    ****   /*Configure GPIO pin : Manch_Tx_Pin */
 243:Src/main.c    ****   GPIO_InitStruct.Pin = Manch_Tx_Pin;
  90              		.loc 1 243 0
  91 005a 0423     		movs	r3, #4
  92 005c 0393     		str	r3, [sp, #12]
 244:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  93              		.loc 1 244 0
  94 005e 0494     		str	r4, [sp, #16]
 245:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_PULLDOWN;
  95              		.loc 1 245 0
  96 0060 0596     		str	r6, [sp, #20]
 246:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  97              		.loc 1 246 0
ARM GAS  /tmp/cciojoWF.s 			page 7


  98 0062 0025     		movs	r5, #0
  99 0064 0695     		str	r5, [sp, #24]
 247:Src/main.c    ****   HAL_GPIO_Init(Manch_Tx_GPIO_Port, &GPIO_InitStruct);
 100              		.loc 1 247 0
 101 0066 03A9     		add	r1, sp, #12
 102 0068 4FF09040 		mov	r0, #1207959552
 103 006c FFF7FEFF 		bl	HAL_GPIO_Init
 104              	.LVL3:
 248:Src/main.c    **** 
 249:Src/main.c    ****   /*Configure GPIO pin : Manch_Rx_Pin */
 250:Src/main.c    ****   GPIO_InitStruct.Pin = Manch_Rx_Pin;
 105              		.loc 1 250 0
 106 0070 1023     		movs	r3, #16
 107 0072 0393     		str	r3, [sp, #12]
 251:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING_FALLING;
 108              		.loc 1 251 0
 109 0074 144B     		ldr	r3, .L3+12
 110 0076 0493     		str	r3, [sp, #16]
 252:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 111              		.loc 1 252 0
 112 0078 0594     		str	r4, [sp, #20]
 253:Src/main.c    ****   HAL_GPIO_Init(Manch_Rx_GPIO_Port, &GPIO_InitStruct);
 113              		.loc 1 253 0
 114 007a 03A9     		add	r1, sp, #12
 115 007c 4FF09040 		mov	r0, #1207959552
 116 0080 FFF7FEFF 		bl	HAL_GPIO_Init
 117              	.LVL4:
 254:Src/main.c    **** 
 255:Src/main.c    ****   /*Configure GPIO pins : LED_Blue_Pin LED_Red_Pin LED_Orange_Pin LED_Green_Pin 
 256:Src/main.c    ****                            LED_BLUE_Pin LED_RED_Pin LED_ORANGE_Pin LED_GREEN_Pin */
 257:Src/main.c    ****   GPIO_InitStruct.Pin = LED_Blue_Pin|LED_Red_Pin|LED_Orange_Pin|LED_Green_Pin 
 118              		.loc 1 257 0
 119 0084 4FF47F43 		mov	r3, #65280
 120 0088 0393     		str	r3, [sp, #12]
 258:Src/main.c    ****                           |LED_BLUE_Pin|LED_RED_Pin|LED_ORANGE_Pin|LED_GREEN_Pin;
 259:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 121              		.loc 1 259 0
 122 008a 0494     		str	r4, [sp, #16]
 260:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 123              		.loc 1 260 0
 124 008c 0596     		str	r6, [sp, #20]
 261:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 125              		.loc 1 261 0
 126 008e 0695     		str	r5, [sp, #24]
 262:Src/main.c    ****   HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 127              		.loc 1 262 0
 128 0090 03A9     		add	r1, sp, #12
 129 0092 3846     		mov	r0, r7
 130 0094 FFF7FEFF 		bl	HAL_GPIO_Init
 131              	.LVL5:
 263:Src/main.c    **** 
 264:Src/main.c    ****   /* EXTI interrupt init*/
 265:Src/main.c    ****   HAL_NVIC_SetPriority(EXTI0_IRQn, 1, 0);
 132              		.loc 1 265 0
 133 0098 2A46     		mov	r2, r5
 134 009a 2146     		mov	r1, r4
 135 009c 0620     		movs	r0, #6
ARM GAS  /tmp/cciojoWF.s 			page 8


 136 009e FFF7FEFF 		bl	HAL_NVIC_SetPriority
 137              	.LVL6:
 266:Src/main.c    ****   HAL_NVIC_EnableIRQ(EXTI0_IRQn);
 138              		.loc 1 266 0
 139 00a2 0620     		movs	r0, #6
 140 00a4 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 141              	.LVL7:
 267:Src/main.c    **** 
 268:Src/main.c    ****   HAL_NVIC_SetPriority(EXTI4_IRQn, 1, 0);
 142              		.loc 1 268 0
 143 00a8 2A46     		mov	r2, r5
 144 00aa 2146     		mov	r1, r4
 145 00ac 0A20     		movs	r0, #10
 146 00ae FFF7FEFF 		bl	HAL_NVIC_SetPriority
 147              	.LVL8:
 269:Src/main.c    ****   HAL_NVIC_EnableIRQ(EXTI4_IRQn);
 148              		.loc 1 269 0
 149 00b2 0A20     		movs	r0, #10
 150 00b4 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 151              	.LVL9:
 270:Src/main.c    **** 
 271:Src/main.c    **** }
 152              		.loc 1 271 0
 153 00b8 09B0     		add	sp, sp, #36
 154              	.LCFI2:
 155              		.cfi_def_cfa_offset 20
 156              		@ sp needed
 157 00ba F0BD     		pop	{r4, r5, r6, r7, pc}
 158              	.L4:
 159              		.align	2
 160              	.L3:
 161 00bc 00100240 		.word	1073876992
 162 00c0 00100048 		.word	1207963648
 163 00c4 00001110 		.word	269549568
 164 00c8 00003110 		.word	271646720
 165              		.cfi_endproc
 166              	.LFE126:
 168              		.section	.text.Forward_Frame_Received,"ax",%progbits
 169              		.align	1
 170              		.global	Forward_Frame_Received
 171              		.syntax unified
 172              		.thumb
 173              		.thumb_func
 174              		.fpu fpv4-sp-d16
 176              	Forward_Frame_Received:
 177              	.LFB129:
 272:Src/main.c    **** 
 273:Src/main.c    **** /* USER CODE BEGIN 4 */
 274:Src/main.c    **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 275:Src/main.c    **** {
 276:Src/main.c    ****   DALI_Slave_Receiving_Data();
 277:Src/main.c    **** }
 278:Src/main.c    **** 
 279:Src/main.c    **** void DALI_Slave_Receiving_Data(void)
 280:Src/main.c    **** {
 281:Src/main.c    ****   // WHEN FIRST CHANGE ON PIN IS DETECTED, tick_count IS RESTARTED
 282:Src/main.c    ****   /* **************************************************************** */
ARM GAS  /tmp/cciojoWF.s 			page 9


 283:Src/main.c    ****   /* The following value changed from 2 to 3 because minor changes in the Master code ! Beware */
 284:Src/main.c    ****   if(tick_count == (bit_count * 8 + 3))
 285:Src/main.c    ****     {
 286:Src/main.c    ****       if(HAL_GPIO_ReadPin(Manch_Rx_GPIO_Port, Manch_Rx_Pin) == GPIO_PIN_SET)
 287:Src/main.c    **** 	{
 288:Src/main.c    **** 	  dali_slave_array_receive_buffer[bit_count] = 0;
 289:Src/main.c    **** 	}
 290:Src/main.c    ****       else if(HAL_GPIO_ReadPin(Manch_Rx_GPIO_Port, Manch_Rx_Pin) == GPIO_PIN_RESET)
 291:Src/main.c    **** 	{
 292:Src/main.c    **** 	  dali_slave_array_receive_buffer[bit_count] = 1;
 293:Src/main.c    **** 	}
 294:Src/main.c    ****       /* USED FOR DEBUGGING */
 295:Src/main.c    ****       /* if(bit_count == 16) */
 296:Src/main.c    ****       /* 	{ */
 297:Src/main.c    ****       /* 	  if(HAL_GPIO_ReadPin(Manch_Rx_GPIO_Port, Manch_Rx_Pin) == GPIO_PIN_SET) */
 298:Src/main.c    ****       /* 	    { */
 299:Src/main.c    ****       /* 	      HAL_GPIO_WritePin(LED_GREEN_GPIO_Port, LED_GREEN_Pin, GPIO_PIN_SET); */
 300:Src/main.c    ****       /* 	    } */
 301:Src/main.c    ****       /* 	  else */
 302:Src/main.c    ****       /* 	    { */
 303:Src/main.c    ****       /* 	      HAL_GPIO_WritePin(LED_RED_GPIO_Port, LED_RED_Pin, GPIO_PIN_SET); */
 304:Src/main.c    ****       /* 	    } */
 305:Src/main.c    ****       /* 	} */
 306:Src/main.c    ****       /* USED FOR DEBUGGING */
 307:Src/main.c    ****     }
 308:Src/main.c    ****   // increment ticks
 309:Src/main.c    ****   tick_count++;
 310:Src/main.c    **** 
 311:Src/main.c    ****   // increment bit_count
 312:Src/main.c    ****   if(tick_count % 8 == 0)
 313:Src/main.c    ****     {
 314:Src/main.c    ****       bit_count++;
 315:Src/main.c    ****     }
 316:Src/main.c    **** 
 317:Src/main.c    ****   // transfer completed
 318:Src/main.c    ****   if(bit_count > 16)
 319:Src/main.c    ****     {
 320:Src/main.c    ****       // Forward_frame_receive function
 321:Src/main.c    ****       Forward_Frame_Received();
 322:Src/main.c    ****       
 323:Src/main.c    ****       // set dali state
 324:Src/main.c    ****       
 325:Src/main.c    ****       // turn TIM_Base_IT to stop
 326:Src/main.c    ****       if(HAL_TIM_Base_Stop_IT(&htim2) != HAL_OK)
 327:Src/main.c    **** 	{
 328:Src/main.c    **** 	  _Error_Handler(__FILE__, __LINE__);
 329:Src/main.c    **** 	}
 330:Src/main.c    **** 
 331:Src/main.c    ****       
 332:Src/main.c    ****     }
 333:Src/main.c    **** }
 334:Src/main.c    **** 
 335:Src/main.c    **** void Forward_Frame_Received(void)
 336:Src/main.c    **** {
 178              		.loc 1 336 0
 179              		.cfi_startproc
 180              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/cciojoWF.s 			page 10


 181              		@ frame_needed = 0, uses_anonymous_args = 0
 182 0000 08B5     		push	{r3, lr}
 183              	.LCFI3:
 184              		.cfi_def_cfa_offset 8
 185              		.cfi_offset 3, -8
 186              		.cfi_offset 14, -4
 187              	.LVL10:
 337:Src/main.c    ****   unsigned char i;
 338:Src/main.c    ****   for (i = 1; i < 17; i++) // skip first bit - start bit
 188              		.loc 1 338 0
 189 0002 0123     		movs	r3, #1
 190 0004 0AE0     		b	.L6
 191              	.LVL11:
 192              	.L8:
 339:Src/main.c    ****     {
 340:Src/main.c    ****       if(dali_slave_array_receive_buffer[i] == 1)
 341:Src/main.c    **** 	{
 342:Src/main.c    **** 	  // address byte
 343:Src/main.c    **** 	  if(i < 9)
 344:Src/main.c    **** 	    {
 345:Src/main.c    ****               slave_addr_byte_received |= (1 << (8 - i));
 346:Src/main.c    **** 	    }
 347:Src/main.c    **** 	  // command byte
 348:Src/main.c    **** 	  else
 349:Src/main.c    **** 	    {
 350:Src/main.c    **** 	      slave_cmd_byte_received |= (1 << (7 - (i - 9)));
 193              		.loc 1 350 0
 194 0006 C3F11001 		rsb	r1, r3, #16
 195 000a 0122     		movs	r2, #1
 196 000c 8A40     		lsls	r2, r2, r1
 197 000e 1948     		ldr	r0, .L16
 198 0010 0178     		ldrb	r1, [r0]	@ zero_extendqisi2
 199 0012 1143     		orrs	r1, r1, r2
 200 0014 C9B2     		uxtb	r1, r1
 201 0016 0170     		strb	r1, [r0]
 202              	.L7:
 338:Src/main.c    ****     {
 203              		.loc 1 338 0 discriminator 2
 204 0018 0133     		adds	r3, r3, #1
 205              	.LVL12:
 206 001a DBB2     		uxtb	r3, r3
 207              	.LVL13:
 208              	.L6:
 338:Src/main.c    ****     {
 209              		.loc 1 338 0 is_stmt 0 discriminator 1
 210 001c 102B     		cmp	r3, #16
 211 001e 0FD8     		bhi	.L13
 340:Src/main.c    **** 	{
 212              		.loc 1 340 0 is_stmt 1
 213 0020 154A     		ldr	r2, .L16+4
 214 0022 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 215 0024 D2B2     		uxtb	r2, r2
 216 0026 012A     		cmp	r2, #1
 217 0028 F6D1     		bne	.L7
 343:Src/main.c    **** 	    {
 218              		.loc 1 343 0
 219 002a 082B     		cmp	r3, #8
ARM GAS  /tmp/cciojoWF.s 			page 11


 220 002c EBD8     		bhi	.L8
 345:Src/main.c    **** 	    }
 221              		.loc 1 345 0
 222 002e C3F10801 		rsb	r1, r3, #8
 223 0032 8A40     		lsls	r2, r2, r1
 224 0034 1148     		ldr	r0, .L16+8
 225 0036 0178     		ldrb	r1, [r0]	@ zero_extendqisi2
 226 0038 1143     		orrs	r1, r1, r2
 227 003a C9B2     		uxtb	r1, r1
 228 003c 0170     		strb	r1, [r0]
 229 003e EBE7     		b	.L7
 230              	.L13:
 351:Src/main.c    **** 	    }
 352:Src/main.c    **** 	}
 353:Src/main.c    ****     }
 354:Src/main.c    ****     
 355:Src/main.c    ****   if(slave_addr_byte_received == 0xD5)
 231              		.loc 1 355 0
 232 0040 0E4B     		ldr	r3, .L16+8
 233              	.LVL14:
 234 0042 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 235 0044 DBB2     		uxtb	r3, r3
 236 0046 D52B     		cmp	r3, #213
 237 0048 05D0     		beq	.L14
 238              	.L10:
 356:Src/main.c    ****     {
 357:Src/main.c    ****       HAL_GPIO_WritePin(LED_Blue_GPIO_Port, LED_Blue_Pin, GPIO_PIN_SET);
 358:Src/main.c    ****       
 359:Src/main.c    ****     }
 360:Src/main.c    ****   if(slave_cmd_byte_received == 0x56)
 239              		.loc 1 360 0
 240 004a 0A4B     		ldr	r3, .L16
 241 004c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 242 004e DBB2     		uxtb	r3, r3
 243 0050 562B     		cmp	r3, #86
 244 0052 07D0     		beq	.L15
 245              	.L5:
 246 0054 08BD     		pop	{r3, pc}
 247              	.L14:
 357:Src/main.c    ****       
 248              		.loc 1 357 0
 249 0056 0122     		movs	r2, #1
 250 0058 4FF48071 		mov	r1, #256
 251 005c 0848     		ldr	r0, .L16+12
 252 005e FFF7FEFF 		bl	HAL_GPIO_WritePin
 253              	.LVL15:
 254 0062 F2E7     		b	.L10
 255              	.L15:
 361:Src/main.c    ****     {
 362:Src/main.c    ****       HAL_GPIO_WritePin(LED_Green_GPIO_Port, LED_Green_Pin, GPIO_PIN_SET);
 256              		.loc 1 362 0
 257 0064 0122     		movs	r2, #1
 258 0066 4FF40061 		mov	r1, #2048
 259 006a 0548     		ldr	r0, .L16+12
 260 006c FFF7FEFF 		bl	HAL_GPIO_WritePin
 261              	.LVL16:
 363:Src/main.c    ****     }
ARM GAS  /tmp/cciojoWF.s 			page 12


 364:Src/main.c    **** }
 262              		.loc 1 364 0
 263 0070 F0E7     		b	.L5
 264              	.L17:
 265 0072 00BF     		.align	2
 266              	.L16:
 267 0074 00000000 		.word	slave_cmd_byte_received
 268 0078 00000000 		.word	dali_slave_array_receive_buffer
 269 007c 00000000 		.word	slave_addr_byte_received
 270 0080 00100048 		.word	1207963648
 271              		.cfi_endproc
 272              	.LFE129:
 274              		.section	.text._Error_Handler,"ax",%progbits
 275              		.align	1
 276              		.global	_Error_Handler
 277              		.syntax unified
 278              		.thumb
 279              		.thumb_func
 280              		.fpu fpv4-sp-d16
 282              	_Error_Handler:
 283              	.LFB130:
 365:Src/main.c    **** 	
 366:Src/main.c    **** 
 367:Src/main.c    ****       
 368:Src/main.c    ****       
 369:Src/main.c    **** /* USER CODE END 4 */
 370:Src/main.c    **** 
 371:Src/main.c    **** /**
 372:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 373:Src/main.c    ****   * @param  None
 374:Src/main.c    ****   * @retval None
 375:Src/main.c    ****   */
 376:Src/main.c    **** void _Error_Handler(char * file, int line)
 377:Src/main.c    **** {
 284              		.loc 1 377 0
 285              		.cfi_startproc
 286              		@ Volatile: function does not return.
 287              		@ args = 0, pretend = 0, frame = 0
 288              		@ frame_needed = 0, uses_anonymous_args = 0
 289              		@ link register save eliminated.
 290              	.LVL17:
 291              	.L19:
 292 0000 FEE7     		b	.L19
 293              		.cfi_endproc
 294              	.LFE130:
 296              		.section	.text.MX_TIM2_Init,"ax",%progbits
 297              		.align	1
 298              		.syntax unified
 299              		.thumb
 300              		.thumb_func
 301              		.fpu fpv4-sp-d16
 303              	MX_TIM2_Init:
 304              	.LFB125:
 182:Src/main.c    **** 
 305              		.loc 1 182 0
 306              		.cfi_startproc
 307              		@ args = 0, pretend = 0, frame = 32
ARM GAS  /tmp/cciojoWF.s 			page 13


 308              		@ frame_needed = 0, uses_anonymous_args = 0
 182:Src/main.c    **** 
 309              		.loc 1 182 0
 310 0000 00B5     		push	{lr}
 311              	.LCFI4:
 312              		.cfi_def_cfa_offset 4
 313              		.cfi_offset 14, -4
 314 0002 89B0     		sub	sp, sp, #36
 315              	.LCFI5:
 316              		.cfi_def_cfa_offset 40
 187:Src/main.c    ****   htim2.Init.Prescaler = 63;
 317              		.loc 1 187 0
 318 0004 1748     		ldr	r0, .L28
 319 0006 4FF08043 		mov	r3, #1073741824
 320 000a 0360     		str	r3, [r0]
 188:Src/main.c    ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 321              		.loc 1 188 0
 322 000c 3F23     		movs	r3, #63
 323 000e 4360     		str	r3, [r0, #4]
 189:Src/main.c    ****   htim2.Init.Period = 103;
 324              		.loc 1 189 0
 325 0010 0023     		movs	r3, #0
 326 0012 8360     		str	r3, [r0, #8]
 190:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 327              		.loc 1 190 0
 328 0014 6722     		movs	r2, #103
 329 0016 C260     		str	r2, [r0, #12]
 191:Src/main.c    ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 330              		.loc 1 191 0
 331 0018 0361     		str	r3, [r0, #16]
 192:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 332              		.loc 1 192 0
 333 001a 8023     		movs	r3, #128
 334 001c 8361     		str	r3, [r0, #24]
 193:Src/main.c    ****   {
 335              		.loc 1 193 0
 336 001e FFF7FEFF 		bl	HAL_TIM_Base_Init
 337              	.LVL18:
 338 0022 98B9     		cbnz	r0, .L25
 198:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 339              		.loc 1 198 0
 340 0024 08A9     		add	r1, sp, #32
 341 0026 4FF48053 		mov	r3, #4096
 342 002a 41F8103D 		str	r3, [r1, #-16]!
 199:Src/main.c    ****   {
 343              		.loc 1 199 0
 344 002e 0D48     		ldr	r0, .L28
 345 0030 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 346              	.LVL19:
 347 0034 70B9     		cbnz	r0, .L26
 204:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 348              		.loc 1 204 0
 349 0036 0023     		movs	r3, #0
 350 0038 0193     		str	r3, [sp, #4]
 205:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 351              		.loc 1 205 0
 352 003a 0393     		str	r3, [sp, #12]
ARM GAS  /tmp/cciojoWF.s 			page 14


 206:Src/main.c    ****   {
 353              		.loc 1 206 0
 354 003c 01A9     		add	r1, sp, #4
 355 003e 0948     		ldr	r0, .L28
 356 0040 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 357              	.LVL20:
 358 0044 50B9     		cbnz	r0, .L27
 211:Src/main.c    **** 
 359              		.loc 1 211 0
 360 0046 09B0     		add	sp, sp, #36
 361              	.LCFI6:
 362              		.cfi_remember_state
 363              		.cfi_def_cfa_offset 4
 364              		@ sp needed
 365 0048 5DF804FB 		ldr	pc, [sp], #4
 366              	.L25:
 367              	.LCFI7:
 368              		.cfi_restore_state
 195:Src/main.c    ****   }
 369              		.loc 1 195 0
 370 004c C321     		movs	r1, #195
 371 004e 0648     		ldr	r0, .L28+4
 372 0050 FFF7FEFF 		bl	_Error_Handler
 373              	.LVL21:
 374              	.L26:
 201:Src/main.c    ****   }
 375              		.loc 1 201 0
 376 0054 C921     		movs	r1, #201
 377 0056 0448     		ldr	r0, .L28+4
 378 0058 FFF7FEFF 		bl	_Error_Handler
 379              	.LVL22:
 380              	.L27:
 208:Src/main.c    ****   }
 381              		.loc 1 208 0
 382 005c D021     		movs	r1, #208
 383 005e 0248     		ldr	r0, .L28+4
 384 0060 FFF7FEFF 		bl	_Error_Handler
 385              	.LVL23:
 386              	.L29:
 387              		.align	2
 388              	.L28:
 389 0064 00000000 		.word	htim2
 390 0068 00000000 		.word	.LC0
 391              		.cfi_endproc
 392              	.LFE125:
 394              		.section	.text.SystemClock_Config,"ax",%progbits
 395              		.align	1
 396              		.global	SystemClock_Config
 397              		.syntax unified
 398              		.thumb
 399              		.thumb_func
 400              		.fpu fpv4-sp-d16
 402              	SystemClock_Config:
 403              	.LFB124:
 136:Src/main.c    **** 
 404              		.loc 1 136 0
 405              		.cfi_startproc
ARM GAS  /tmp/cciojoWF.s 			page 15


 406              		@ args = 0, pretend = 0, frame = 64
 407              		@ frame_needed = 0, uses_anonymous_args = 0
 408 0000 00B5     		push	{lr}
 409              	.LCFI8:
 410              		.cfi_def_cfa_offset 4
 411              		.cfi_offset 14, -4
 412 0002 91B0     		sub	sp, sp, #68
 413              	.LCFI9:
 414              		.cfi_def_cfa_offset 72
 143:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 415              		.loc 1 143 0
 416 0004 0223     		movs	r3, #2
 417 0006 0693     		str	r3, [sp, #24]
 144:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 418              		.loc 1 144 0
 419 0008 0122     		movs	r2, #1
 420 000a 0A92     		str	r2, [sp, #40]
 145:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 421              		.loc 1 145 0
 422 000c 1022     		movs	r2, #16
 423 000e 0B92     		str	r2, [sp, #44]
 146:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 424              		.loc 1 146 0
 425 0010 0D93     		str	r3, [sp, #52]
 147:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL16;
 426              		.loc 1 147 0
 427 0012 0023     		movs	r3, #0
 428 0014 0E93     		str	r3, [sp, #56]
 148:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 429              		.loc 1 148 0
 430 0016 4FF46013 		mov	r3, #3670016
 431 001a 0F93     		str	r3, [sp, #60]
 149:Src/main.c    ****   {
 432              		.loc 1 149 0
 433 001c 06A8     		add	r0, sp, #24
 434 001e FFF7FEFF 		bl	HAL_RCC_OscConfig
 435              	.LVL24:
 436 0022 08BB     		cbnz	r0, .L34
 156:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 437              		.loc 1 156 0
 438 0024 0F23     		movs	r3, #15
 439 0026 0193     		str	r3, [sp, #4]
 158:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 440              		.loc 1 158 0
 441 0028 0221     		movs	r1, #2
 442 002a 0291     		str	r1, [sp, #8]
 159:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 443              		.loc 1 159 0
 444 002c 0023     		movs	r3, #0
 445 002e 0393     		str	r3, [sp, #12]
 160:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 446              		.loc 1 160 0
 447 0030 4FF48062 		mov	r2, #1024
 448 0034 0492     		str	r2, [sp, #16]
 161:Src/main.c    **** 
 449              		.loc 1 161 0
 450 0036 0593     		str	r3, [sp, #20]
ARM GAS  /tmp/cciojoWF.s 			page 16


 163:Src/main.c    ****   {
 451              		.loc 1 163 0
 452 0038 01A8     		add	r0, sp, #4
 453 003a FFF7FEFF 		bl	HAL_RCC_ClockConfig
 454              	.LVL25:
 455 003e B8B9     		cbnz	r0, .L35
 170:Src/main.c    **** 
 456              		.loc 1 170 0
 457 0040 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 458              	.LVL26:
 459 0044 0C4B     		ldr	r3, .L36
 460 0046 A3FB0030 		umull	r3, r0, r3, r0
 461 004a 8009     		lsrs	r0, r0, #6
 462 004c FFF7FEFF 		bl	HAL_SYSTICK_Config
 463              	.LVL27:
 174:Src/main.c    **** 
 464              		.loc 1 174 0
 465 0050 0420     		movs	r0, #4
 466 0052 FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 467              	.LVL28:
 177:Src/main.c    **** }
 468              		.loc 1 177 0
 469 0056 0022     		movs	r2, #0
 470 0058 1146     		mov	r1, r2
 471 005a 4FF0FF30 		mov	r0, #-1
 472 005e FFF7FEFF 		bl	HAL_NVIC_SetPriority
 473              	.LVL29:
 178:Src/main.c    **** 
 474              		.loc 1 178 0
 475 0062 11B0     		add	sp, sp, #68
 476              	.LCFI10:
 477              		.cfi_remember_state
 478              		.cfi_def_cfa_offset 4
 479              		@ sp needed
 480 0064 5DF804FB 		ldr	pc, [sp], #4
 481              	.L34:
 482              	.LCFI11:
 483              		.cfi_restore_state
 151:Src/main.c    ****   }
 484              		.loc 1 151 0
 485 0068 9721     		movs	r1, #151
 486 006a 0448     		ldr	r0, .L36+4
 487 006c FFF7FEFF 		bl	_Error_Handler
 488              	.LVL30:
 489              	.L35:
 165:Src/main.c    ****   }
 490              		.loc 1 165 0
 491 0070 A521     		movs	r1, #165
 492 0072 0248     		ldr	r0, .L36+4
 493 0074 FFF7FEFF 		bl	_Error_Handler
 494              	.LVL31:
 495              	.L37:
 496              		.align	2
 497              	.L36:
 498 0078 D34D6210 		.word	274877907
 499 007c 00000000 		.word	.LC0
 500              		.cfi_endproc
ARM GAS  /tmp/cciojoWF.s 			page 17


 501              	.LFE124:
 503              		.section	.text.main,"ax",%progbits
 504              		.align	1
 505              		.global	main
 506              		.syntax unified
 507              		.thumb
 508              		.thumb_func
 509              		.fpu fpv4-sp-d16
 511              	main:
 512              	.LFB123:
  79:Src/main.c    **** 
 513              		.loc 1 79 0
 514              		.cfi_startproc
 515              		@ Volatile: function does not return.
 516              		@ args = 0, pretend = 0, frame = 0
 517              		@ frame_needed = 0, uses_anonymous_args = 0
 518 0000 08B5     		push	{r3, lr}
 519              	.LCFI12:
 520              		.cfi_def_cfa_offset 8
 521              		.cfi_offset 3, -8
 522              		.cfi_offset 14, -4
  88:Src/main.c    **** 
 523              		.loc 1 88 0
 524 0002 FFF7FEFF 		bl	HAL_Init
 525              	.LVL32:
  95:Src/main.c    **** 
 526              		.loc 1 95 0
 527 0006 FFF7FEFF 		bl	SystemClock_Config
 528              	.LVL33:
 102:Src/main.c    ****   MX_TIM2_Init();
 529              		.loc 1 102 0
 530 000a FFF7FEFF 		bl	MX_GPIO_Init
 531              	.LVL34:
 103:Src/main.c    **** 
 532              		.loc 1 103 0
 533 000e FFF7FEFF 		bl	MX_TIM2_Init
 534              	.LVL35:
 535              	.L39:
 107:Src/main.c    ****     {
 536              		.loc 1 107 0 discriminator 1
 537 0012 064B     		ldr	r3, .L43
 538 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 539 0016 002B     		cmp	r3, #0
 540 0018 FBD0     		beq	.L39
 112:Src/main.c    ****     {
 541              		.loc 1 112 0
 542 001a 0548     		ldr	r0, .L43+4
 543 001c FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 544              	.LVL36:
 545 0020 00B9     		cbnz	r0, .L42
 546              	.L40:
 547 0022 FEE7     		b	.L40
 548              	.L42:
 114:Src/main.c    ****     }
 549              		.loc 1 114 0
 550 0024 7221     		movs	r1, #114
 551 0026 0348     		ldr	r0, .L43+8
ARM GAS  /tmp/cciojoWF.s 			page 18


 552 0028 FFF7FEFF 		bl	_Error_Handler
 553              	.LVL37:
 554              	.L44:
 555              		.align	2
 556              	.L43:
 557 002c 00000000 		.word	.LANCHOR0
 558 0030 00000000 		.word	htim2
 559 0034 00000000 		.word	.LC0
 560              		.cfi_endproc
 561              	.LFE123:
 563              		.section	.text.DALI_Slave_Receiving_Data,"ax",%progbits
 564              		.align	1
 565              		.global	DALI_Slave_Receiving_Data
 566              		.syntax unified
 567              		.thumb
 568              		.thumb_func
 569              		.fpu fpv4-sp-d16
 571              	DALI_Slave_Receiving_Data:
 572              	.LFB128:
 280:Src/main.c    ****   // WHEN FIRST CHANGE ON PIN IS DETECTED, tick_count IS RESTARTED
 573              		.loc 1 280 0
 574              		.cfi_startproc
 575              		@ args = 0, pretend = 0, frame = 0
 576              		@ frame_needed = 0, uses_anonymous_args = 0
 577 0000 08B5     		push	{r3, lr}
 578              	.LCFI13:
 579              		.cfi_def_cfa_offset 8
 580              		.cfi_offset 3, -8
 581              		.cfi_offset 14, -4
 284:Src/main.c    ****     {
 582              		.loc 1 284 0
 583 0002 1F4B     		ldr	r3, .L54
 584 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 585 0006 DB00     		lsls	r3, r3, #3
 586 0008 0333     		adds	r3, r3, #3
 587 000a 1E4A     		ldr	r2, .L54+4
 588 000c 1268     		ldr	r2, [r2]
 589 000e 9342     		cmp	r3, r2
 590 0010 0FD0     		beq	.L51
 591              	.L46:
 309:Src/main.c    **** 
 592              		.loc 1 309 0
 593 0012 1C4A     		ldr	r2, .L54+4
 594 0014 1368     		ldr	r3, [r2]
 595 0016 0133     		adds	r3, r3, #1
 596 0018 1360     		str	r3, [r2]
 312:Src/main.c    ****     {
 597              		.loc 1 312 0
 598 001a 13F0070F 		tst	r3, #7
 599 001e 03D1     		bne	.L48
 314:Src/main.c    ****     }
 600              		.loc 1 314 0
 601 0020 174A     		ldr	r2, .L54
 602 0022 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 603 0024 0133     		adds	r3, r3, #1
 604 0026 1370     		strb	r3, [r2]
 605              	.L48:
ARM GAS  /tmp/cciojoWF.s 			page 19


 318:Src/main.c    ****     {
 606              		.loc 1 318 0
 607 0028 154B     		ldr	r3, .L54
 608 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 609 002c 102B     		cmp	r3, #16
 610 002e 1AD8     		bhi	.L52
 611              	.L45:
 612 0030 08BD     		pop	{r3, pc}
 613              	.L51:
 286:Src/main.c    **** 	{
 614              		.loc 1 286 0
 615 0032 1021     		movs	r1, #16
 616 0034 4FF09040 		mov	r0, #1207959552
 617 0038 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 618              	.LVL38:
 619 003c 0128     		cmp	r0, #1
 620 003e 0CD0     		beq	.L53
 290:Src/main.c    **** 	{
 621              		.loc 1 290 0
 622 0040 1021     		movs	r1, #16
 623 0042 4FF09040 		mov	r0, #1207959552
 624 0046 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 625              	.LVL39:
 626 004a 0028     		cmp	r0, #0
 627 004c E1D1     		bne	.L46
 292:Src/main.c    **** 	}
 628              		.loc 1 292 0
 629 004e 0C4B     		ldr	r3, .L54
 630 0050 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 631 0052 0121     		movs	r1, #1
 632 0054 0C4A     		ldr	r2, .L54+8
 633 0056 D154     		strb	r1, [r2, r3]
 634 0058 DBE7     		b	.L46
 635              	.L53:
 288:Src/main.c    **** 	}
 636              		.loc 1 288 0
 637 005a 094B     		ldr	r3, .L54
 638 005c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 639 005e 0021     		movs	r1, #0
 640 0060 094A     		ldr	r2, .L54+8
 641 0062 D154     		strb	r1, [r2, r3]
 642 0064 D5E7     		b	.L46
 643              	.L52:
 321:Src/main.c    ****       
 644              		.loc 1 321 0
 645 0066 FFF7FEFF 		bl	Forward_Frame_Received
 646              	.LVL40:
 326:Src/main.c    **** 	{
 647              		.loc 1 326 0
 648 006a 0848     		ldr	r0, .L54+12
 649 006c FFF7FEFF 		bl	HAL_TIM_Base_Stop_IT
 650              	.LVL41:
 651 0070 0028     		cmp	r0, #0
 652 0072 DDD0     		beq	.L45
 328:Src/main.c    **** 	}
 653              		.loc 1 328 0
 654 0074 4FF4A471 		mov	r1, #328
ARM GAS  /tmp/cciojoWF.s 			page 20


 655 0078 0548     		ldr	r0, .L54+16
 656 007a FFF7FEFF 		bl	_Error_Handler
 657              	.LVL42:
 658              	.L55:
 659 007e 00BF     		.align	2
 660              	.L54:
 661 0080 00000000 		.word	.LANCHOR1
 662 0084 00000000 		.word	.LANCHOR2
 663 0088 00000000 		.word	dali_slave_array_receive_buffer
 664 008c 00000000 		.word	htim2
 665 0090 00000000 		.word	.LC0
 666              		.cfi_endproc
 667              	.LFE128:
 669              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 670              		.align	1
 671              		.global	HAL_TIM_PeriodElapsedCallback
 672              		.syntax unified
 673              		.thumb
 674              		.thumb_func
 675              		.fpu fpv4-sp-d16
 677              	HAL_TIM_PeriodElapsedCallback:
 678              	.LFB127:
 275:Src/main.c    ****   DALI_Slave_Receiving_Data();
 679              		.loc 1 275 0
 680              		.cfi_startproc
 681              		@ args = 0, pretend = 0, frame = 0
 682              		@ frame_needed = 0, uses_anonymous_args = 0
 683              	.LVL43:
 684 0000 08B5     		push	{r3, lr}
 685              	.LCFI14:
 686              		.cfi_def_cfa_offset 8
 687              		.cfi_offset 3, -8
 688              		.cfi_offset 14, -4
 276:Src/main.c    **** }
 689              		.loc 1 276 0
 690 0002 FFF7FEFF 		bl	DALI_Slave_Receiving_Data
 691              	.LVL44:
 692 0006 08BD     		pop	{r3, pc}
 693              		.cfi_endproc
 694              	.LFE127:
 696              		.section	.text.assert_failed,"ax",%progbits
 697              		.align	1
 698              		.global	assert_failed
 699              		.syntax unified
 700              		.thumb
 701              		.thumb_func
 702              		.fpu fpv4-sp-d16
 704              	assert_failed:
 705              	.LFB131:
 378:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 379:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 380:Src/main.c    ****   while(1) 
 381:Src/main.c    ****   {
 382:Src/main.c    ****   }
 383:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */ 
 384:Src/main.c    **** }
 385:Src/main.c    **** 
ARM GAS  /tmp/cciojoWF.s 			page 21


 386:Src/main.c    **** #ifdef USE_FULL_ASSERT
 387:Src/main.c    **** 
 388:Src/main.c    **** /**
 389:Src/main.c    ****    * @brief Reports the name of the source file and the source line number
 390:Src/main.c    ****    * where the assert_param error has occurred.
 391:Src/main.c    ****    * @param file: pointer to the source file name
 392:Src/main.c    ****    * @param line: assert_param error line source number
 393:Src/main.c    ****    * @retval None
 394:Src/main.c    ****    */
 395:Src/main.c    **** void assert_failed(uint8_t* file, uint32_t line)
 396:Src/main.c    **** {
 706              		.loc 1 396 0
 707              		.cfi_startproc
 708              		@ args = 0, pretend = 0, frame = 0
 709              		@ frame_needed = 0, uses_anonymous_args = 0
 710              		@ link register save eliminated.
 711              	.LVL45:
 712 0000 7047     		bx	lr
 713              		.cfi_endproc
 714              	.LFE131:
 716              		.comm	slave_cmd_byte_received,1,1
 717              		.comm	slave_addr_byte_received,1,1
 718              		.comm	dali_slave_array_receive_buffer,17,4
 719              		.global	bit_count
 720              		.global	tick_count
 721              		.global	start_timer
 722              		.comm	htim2,64,4
 723              		.section	.bss.bit_count,"aw",%nobits
 724              		.set	.LANCHOR1,. + 0
 727              	bit_count:
 728 0000 00       		.space	1
 729              		.section	.bss.start_timer,"aw",%nobits
 730              		.set	.LANCHOR0,. + 0
 733              	start_timer:
 734 0000 00       		.space	1
 735              		.section	.bss.tick_count,"aw",%nobits
 736              		.align	2
 737              		.set	.LANCHOR2,. + 0
 740              	tick_count:
 741 0000 00000000 		.space	4
 742              		.section	.rodata.MX_TIM2_Init.str1.4,"aMS",%progbits,1
 743              		.align	2
 744              	.LC0:
 745 0000 5372632F 		.ascii	"Src/main.c\000"
 745      6D61696E 
 745      2E6300
 746              		.text
 747              	.Letext0:
 748              		.file 2 "/home/saicharan/arm/arm-none-eabi/include/machine/_default_types.h"
 749              		.file 3 "/home/saicharan/arm/arm-none-eabi/include/stdint.h"
 750              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 751              		.file 5 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/system_stm32f3xx.h"
 752              		.file 6 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303xc.h"
 753              		.file 7 "/home/saicharan/arm/arm-none-eabi/include/sys/lock.h"
 754              		.file 8 "/home/saicharan/arm/arm-none-eabi/include/sys/_types.h"
 755              		.file 9 "/home/saicharan/arm/lib/gcc/arm-none-eabi/6.3.0/include/stddef.h"
 756              		.file 10 "/home/saicharan/arm/arm-none-eabi/include/sys/reent.h"
ARM GAS  /tmp/cciojoWF.s 			page 22


 757              		.file 11 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 758              		.file 12 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rcc.h"
 759              		.file 13 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_gpio.h"
 760              		.file 14 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 761              		.file 15 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_tim.h"
 762              		.file 16 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_tim_ex.h"
 763              		.file 17 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_cortex.h"
 764              		.file 18 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal.h"
ARM GAS  /tmp/cciojoWF.s 			page 23


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/cciojoWF.s:18     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/cciojoWF.s:24     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/cciojoWF.s:161    .text.MX_GPIO_Init:00000000000000bc $d
     /tmp/cciojoWF.s:169    .text.Forward_Frame_Received:0000000000000000 $t
     /tmp/cciojoWF.s:176    .text.Forward_Frame_Received:0000000000000000 Forward_Frame_Received
     /tmp/cciojoWF.s:267    .text.Forward_Frame_Received:0000000000000074 $d
                            *COM*:0000000000000001 slave_cmd_byte_received
                            *COM*:0000000000000011 dali_slave_array_receive_buffer
                            *COM*:0000000000000001 slave_addr_byte_received
     /tmp/cciojoWF.s:275    .text._Error_Handler:0000000000000000 $t
     /tmp/cciojoWF.s:282    .text._Error_Handler:0000000000000000 _Error_Handler
     /tmp/cciojoWF.s:297    .text.MX_TIM2_Init:0000000000000000 $t
     /tmp/cciojoWF.s:303    .text.MX_TIM2_Init:0000000000000000 MX_TIM2_Init
     /tmp/cciojoWF.s:389    .text.MX_TIM2_Init:0000000000000064 $d
                            *COM*:0000000000000040 htim2
     /tmp/cciojoWF.s:395    .text.SystemClock_Config:0000000000000000 $t
     /tmp/cciojoWF.s:402    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/cciojoWF.s:498    .text.SystemClock_Config:0000000000000078 $d
     /tmp/cciojoWF.s:504    .text.main:0000000000000000 $t
     /tmp/cciojoWF.s:511    .text.main:0000000000000000 main
     /tmp/cciojoWF.s:557    .text.main:000000000000002c $d
     /tmp/cciojoWF.s:564    .text.DALI_Slave_Receiving_Data:0000000000000000 $t
     /tmp/cciojoWF.s:571    .text.DALI_Slave_Receiving_Data:0000000000000000 DALI_Slave_Receiving_Data
     /tmp/cciojoWF.s:661    .text.DALI_Slave_Receiving_Data:0000000000000080 $d
     /tmp/cciojoWF.s:670    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
     /tmp/cciojoWF.s:677    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
     /tmp/cciojoWF.s:697    .text.assert_failed:0000000000000000 $t
     /tmp/cciojoWF.s:704    .text.assert_failed:0000000000000000 assert_failed
     /tmp/cciojoWF.s:727    .bss.bit_count:0000000000000000 bit_count
     /tmp/cciojoWF.s:740    .bss.tick_count:0000000000000000 tick_count
     /tmp/cciojoWF.s:733    .bss.start_timer:0000000000000000 start_timer
     /tmp/cciojoWF.s:728    .bss.bit_count:0000000000000000 $d
     /tmp/cciojoWF.s:734    .bss.start_timer:0000000000000000 $d
     /tmp/cciojoWF.s:736    .bss.tick_count:0000000000000000 $d
     /tmp/cciojoWF.s:743    .rodata.MX_TIM2_Init.str1.4:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIMEx_MasterConfigSynchronization
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_Init
HAL_TIM_Base_Start_IT
HAL_GPIO_ReadPin
HAL_TIM_Base_Stop_IT
