ARM GAS  /tmp/ccNg6ei3.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	MX_GPIO_Init:
  25              	.LFB125:
  26              		.file 1 "Src/main.c"
   1:Src/main.c    **** /**
   2:Src/main.c    ****   ******************************************************************************
   3:Src/main.c    ****   * File Name          : main.c
   4:Src/main.c    ****   * Description        : Main program body
   5:Src/main.c    ****   ******************************************************************************
   6:Src/main.c    ****   ** This notice applies to any and all portions of this file
   7:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
   8:Src/main.c    ****   * USER CODE END. Other portions of this file, whether 
   9:Src/main.c    ****   * inserted by the user or by software development tools
  10:Src/main.c    ****   * are owned by their respective copyright owners.
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * COPYRIGHT(c) 2017 STMicroelectronics
  13:Src/main.c    ****   *
  14:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without modification,
  15:Src/main.c    ****   * are permitted provided that the following conditions are met:
  16:Src/main.c    ****   *   1. Redistributions of source code must retain the above copyright notice,
  17:Src/main.c    ****   *      this list of conditions and the following disclaimer.
  18:Src/main.c    ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  19:Src/main.c    ****   *      this list of conditions and the following disclaimer in the documentation
  20:Src/main.c    ****   *      and/or other materials provided with the distribution.
  21:Src/main.c    ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  22:Src/main.c    ****   *      may be used to endorse or promote products derived from this software
  23:Src/main.c    ****   *      without specific prior written permission.
  24:Src/main.c    ****   *
  25:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  26:Src/main.c    ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  27:Src/main.c    ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  28:Src/main.c    ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  29:Src/main.c    ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  30:Src/main.c    ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  31:Src/main.c    ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  32:Src/main.c    ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
ARM GAS  /tmp/ccNg6ei3.s 			page 2


  33:Src/main.c    ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  34:Src/main.c    ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  35:Src/main.c    ****   *
  36:Src/main.c    ****   ******************************************************************************
  37:Src/main.c    ****   */
  38:Src/main.c    **** 
  39:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  40:Src/main.c    **** #include "main.h"
  41:Src/main.c    **** #include "stm32f3xx_hal.h"
  42:Src/main.c    **** 
  43:Src/main.c    **** /* USER CODE BEGIN Includes */
  44:Src/main.c    **** 
  45:Src/main.c    **** /* USER CODE END Includes */
  46:Src/main.c    **** 
  47:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  48:Src/main.c    **** 
  49:Src/main.c    **** /* USER CODE BEGIN PV */
  50:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  51:Src/main.c    **** 
  52:Src/main.c    **** /* USER CODE END PV */
  53:Src/main.c    **** 
  54:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  55:Src/main.c    **** void SystemClock_Config(void);
  56:Src/main.c    **** static void MX_GPIO_Init(void);
  57:Src/main.c    **** 
  58:Src/main.c    **** /* USER CODE BEGIN PFP */
  59:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  60:Src/main.c    **** 
  61:Src/main.c    **** /* USER CODE END PFP */
  62:Src/main.c    **** 
  63:Src/main.c    **** /* USER CODE BEGIN 0 */
  64:Src/main.c    **** 
  65:Src/main.c    **** /* USER CODE END 0 */
  66:Src/main.c    **** 
  67:Src/main.c    **** int main(void)
  68:Src/main.c    **** {
  69:Src/main.c    **** 
  70:Src/main.c    ****   /* USER CODE BEGIN 1 */
  71:Src/main.c    **** 
  72:Src/main.c    ****   /* USER CODE END 1 */
  73:Src/main.c    **** 
  74:Src/main.c    ****   /* MCU Configuration----------------------------------------------------------*/
  75:Src/main.c    **** 
  76:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  77:Src/main.c    ****   HAL_Init();
  78:Src/main.c    **** 
  79:Src/main.c    ****   /* USER CODE BEGIN Init */
  80:Src/main.c    **** 
  81:Src/main.c    ****   /* USER CODE END Init */
  82:Src/main.c    **** 
  83:Src/main.c    ****   /* Configure the system clock */
  84:Src/main.c    ****   SystemClock_Config();
  85:Src/main.c    **** 
  86:Src/main.c    ****   /* USER CODE BEGIN SysInit */
  87:Src/main.c    **** 
  88:Src/main.c    ****   /* USER CODE END SysInit */
  89:Src/main.c    **** 
ARM GAS  /tmp/ccNg6ei3.s 			page 3


  90:Src/main.c    ****   /* Initialize all configured peripherals */
  91:Src/main.c    ****   MX_GPIO_Init();
  92:Src/main.c    **** 
  93:Src/main.c    ****   /* USER CODE BEGIN 2 */
  94:Src/main.c    **** 
  95:Src/main.c    ****   /* USER CODE END 2 */
  96:Src/main.c    **** 
  97:Src/main.c    ****   /* Infinite loop */
  98:Src/main.c    ****   /* USER CODE BEGIN WHILE */
  99:Src/main.c    ****   while (1)
 100:Src/main.c    ****   {
 101:Src/main.c    ****     HAL_GPIO_TogglePin(GPIOE, GPIO_PIN_8);
 102:Src/main.c    ****     HAL_GPIO_WritePin(GPIOE, GPIO_PIN_11, GPIO_PIN_SET);
 103:Src/main.c    ****     HAL_Delay(250);
 104:Src/main.c    ****   /* USER CODE END WHILE */
 105:Src/main.c    **** 
 106:Src/main.c    ****   /* USER CODE BEGIN 3 */
 107:Src/main.c    **** 
 108:Src/main.c    ****   }
 109:Src/main.c    ****   /* USER CODE END 3 */
 110:Src/main.c    **** 
 111:Src/main.c    **** }
 112:Src/main.c    **** 
 113:Src/main.c    **** /** System Clock Configuration
 114:Src/main.c    **** */
 115:Src/main.c    **** void SystemClock_Config(void)
 116:Src/main.c    **** {
 117:Src/main.c    **** 
 118:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct;
 119:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 120:Src/main.c    **** 
 121:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 122:Src/main.c    ****     */
 123:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 124:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 125:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 126:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 127:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 128:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL8;
 129:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 130:Src/main.c    ****   {
 131:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 132:Src/main.c    ****   }
 133:Src/main.c    **** 
 134:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 135:Src/main.c    ****     */
 136:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 137:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 138:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 139:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 140:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 141:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 142:Src/main.c    **** 
 143:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 144:Src/main.c    ****   {
 145:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 146:Src/main.c    ****   }
ARM GAS  /tmp/ccNg6ei3.s 			page 4


 147:Src/main.c    **** 
 148:Src/main.c    ****     /**Configure the Systick interrupt time 
 149:Src/main.c    ****     */
 150:Src/main.c    ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 151:Src/main.c    **** 
 152:Src/main.c    ****     /**Configure the Systick 
 153:Src/main.c    ****     */
 154:Src/main.c    ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 155:Src/main.c    **** 
 156:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
 157:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
 158:Src/main.c    **** }
 159:Src/main.c    **** 
 160:Src/main.c    **** /** Configure pins as 
 161:Src/main.c    ****         * Analog 
 162:Src/main.c    ****         * Input 
 163:Src/main.c    ****         * Output
 164:Src/main.c    ****         * EVENT_OUT
 165:Src/main.c    ****         * EXTI
 166:Src/main.c    **** */
 167:Src/main.c    **** static void MX_GPIO_Init(void)
 168:Src/main.c    **** {
  27              		.loc 1 168 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 24
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 10B5     		push	{r4, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 4, -8
  35              		.cfi_offset 14, -4
  36 0002 86B0     		sub	sp, sp, #24
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 32
  39              	.LBB2:
 169:Src/main.c    **** 
 170:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct;
 171:Src/main.c    **** 
 172:Src/main.c    ****   /* GPIO Ports Clock Enable */
 173:Src/main.c    ****   __HAL_RCC_GPIOE_CLK_ENABLE();
  40              		.loc 1 173 0
  41 0004 0F4B     		ldr	r3, .L3
  42 0006 5A69     		ldr	r2, [r3, #20]
  43 0008 42F40012 		orr	r2, r2, #2097152
  44 000c 5A61     		str	r2, [r3, #20]
  45 000e 5B69     		ldr	r3, [r3, #20]
  46 0010 03F40013 		and	r3, r3, #2097152
  47 0014 0093     		str	r3, [sp]
  48 0016 009B     		ldr	r3, [sp]
  49              	.LBE2:
 174:Src/main.c    **** 
 175:Src/main.c    ****   /*Configure GPIO pin Output Level */
 176:Src/main.c    ****   HAL_GPIO_WritePin(GPIOE, GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_11, GPIO_PIN_RESET);
  50              		.loc 1 176 0
  51 0018 0B4C     		ldr	r4, .L3+4
  52 001a 0022     		movs	r2, #0
  53 001c 4FF47061 		mov	r1, #3840
ARM GAS  /tmp/ccNg6ei3.s 			page 5


  54 0020 2046     		mov	r0, r4
  55 0022 FFF7FEFF 		bl	HAL_GPIO_WritePin
  56              	.LVL0:
 177:Src/main.c    **** 
 178:Src/main.c    ****   /*Configure GPIO pins : PE8 PE9 PE10 PE11 */
 179:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_11;
  57              		.loc 1 179 0
  58 0026 4FF47063 		mov	r3, #3840
  59 002a 0193     		str	r3, [sp, #4]
 180:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  60              		.loc 1 180 0
  61 002c 0123     		movs	r3, #1
  62 002e 0293     		str	r3, [sp, #8]
 181:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
  63              		.loc 1 181 0
  64 0030 0023     		movs	r3, #0
  65 0032 0393     		str	r3, [sp, #12]
 182:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  66              		.loc 1 182 0
  67 0034 0493     		str	r3, [sp, #16]
 183:Src/main.c    ****   HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
  68              		.loc 1 183 0
  69 0036 01A9     		add	r1, sp, #4
  70 0038 2046     		mov	r0, r4
  71 003a FFF7FEFF 		bl	HAL_GPIO_Init
  72              	.LVL1:
 184:Src/main.c    **** 
 185:Src/main.c    **** }
  73              		.loc 1 185 0
  74 003e 06B0     		add	sp, sp, #24
  75              	.LCFI2:
  76              		.cfi_def_cfa_offset 8
  77              		@ sp needed
  78 0040 10BD     		pop	{r4, pc}
  79              	.L4:
  80 0042 00BF     		.align	2
  81              	.L3:
  82 0044 00100240 		.word	1073876992
  83 0048 00100048 		.word	1207963648
  84              		.cfi_endproc
  85              	.LFE125:
  87              		.section	.text._Error_Handler,"ax",%progbits
  88              		.align	1
  89              		.global	_Error_Handler
  90              		.syntax unified
  91              		.thumb
  92              		.thumb_func
  93              		.fpu fpv4-sp-d16
  95              	_Error_Handler:
  96              	.LFB126:
 186:Src/main.c    **** 
 187:Src/main.c    **** /* USER CODE BEGIN 4 */
 188:Src/main.c    **** 
 189:Src/main.c    **** /* USER CODE END 4 */
 190:Src/main.c    **** 
 191:Src/main.c    **** /**
 192:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
ARM GAS  /tmp/ccNg6ei3.s 			page 6


 193:Src/main.c    ****   * @param  None
 194:Src/main.c    ****   * @retval None
 195:Src/main.c    ****   */
 196:Src/main.c    **** void _Error_Handler(char * file, int line)
 197:Src/main.c    **** {
  97              		.loc 1 197 0
  98              		.cfi_startproc
  99              		@ Volatile: function does not return.
 100              		@ args = 0, pretend = 0, frame = 0
 101              		@ frame_needed = 0, uses_anonymous_args = 0
 102              		@ link register save eliminated.
 103              	.LVL2:
 104              	.L6:
 105 0000 FEE7     		b	.L6
 106              		.cfi_endproc
 107              	.LFE126:
 109              		.section	.text.SystemClock_Config,"ax",%progbits
 110              		.align	1
 111              		.global	SystemClock_Config
 112              		.syntax unified
 113              		.thumb
 114              		.thumb_func
 115              		.fpu fpv4-sp-d16
 117              	SystemClock_Config:
 118              	.LFB124:
 116:Src/main.c    **** 
 119              		.loc 1 116 0
 120              		.cfi_startproc
 121              		@ args = 0, pretend = 0, frame = 64
 122              		@ frame_needed = 0, uses_anonymous_args = 0
 116:Src/main.c    **** 
 123              		.loc 1 116 0
 124 0000 00B5     		push	{lr}
 125              	.LCFI3:
 126              		.cfi_def_cfa_offset 4
 127              		.cfi_offset 14, -4
 128 0002 91B0     		sub	sp, sp, #68
 129              	.LCFI4:
 130              		.cfi_def_cfa_offset 72
 123:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 131              		.loc 1 123 0
 132 0004 0223     		movs	r3, #2
 133 0006 0693     		str	r3, [sp, #24]
 124:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 134              		.loc 1 124 0
 135 0008 0122     		movs	r2, #1
 136 000a 0A92     		str	r2, [sp, #40]
 125:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 137              		.loc 1 125 0
 138 000c 1022     		movs	r2, #16
 139 000e 0B92     		str	r2, [sp, #44]
 126:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 140              		.loc 1 126 0
 141 0010 0D93     		str	r3, [sp, #52]
 127:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL8;
 142              		.loc 1 127 0
 143 0012 0023     		movs	r3, #0
ARM GAS  /tmp/ccNg6ei3.s 			page 7


 144 0014 0E93     		str	r3, [sp, #56]
 128:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 145              		.loc 1 128 0
 146 0016 4FF4C013 		mov	r3, #1572864
 147 001a 0F93     		str	r3, [sp, #60]
 129:Src/main.c    ****   {
 148              		.loc 1 129 0
 149 001c 06A8     		add	r0, sp, #24
 150 001e FFF7FEFF 		bl	HAL_RCC_OscConfig
 151              	.LVL3:
 152 0022 00BB     		cbnz	r0, .L11
 136:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 153              		.loc 1 136 0
 154 0024 0F23     		movs	r3, #15
 155 0026 0193     		str	r3, [sp, #4]
 138:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 156              		.loc 1 138 0
 157 0028 0223     		movs	r3, #2
 158 002a 0293     		str	r3, [sp, #8]
 139:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 159              		.loc 1 139 0
 160 002c 0023     		movs	r3, #0
 161 002e 0393     		str	r3, [sp, #12]
 140:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 162              		.loc 1 140 0
 163 0030 0493     		str	r3, [sp, #16]
 141:Src/main.c    **** 
 164              		.loc 1 141 0
 165 0032 0593     		str	r3, [sp, #20]
 143:Src/main.c    ****   {
 166              		.loc 1 143 0
 167 0034 0121     		movs	r1, #1
 168 0036 01A8     		add	r0, sp, #4
 169 0038 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 170              	.LVL4:
 171 003c B8B9     		cbnz	r0, .L12
 150:Src/main.c    **** 
 172              		.loc 1 150 0
 173 003e FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 174              	.LVL5:
 175 0042 0D4B     		ldr	r3, .L13
 176 0044 A3FB0030 		umull	r3, r0, r3, r0
 177 0048 8009     		lsrs	r0, r0, #6
 178 004a FFF7FEFF 		bl	HAL_SYSTICK_Config
 179              	.LVL6:
 154:Src/main.c    **** 
 180              		.loc 1 154 0
 181 004e 0420     		movs	r0, #4
 182 0050 FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 183              	.LVL7:
 157:Src/main.c    **** }
 184              		.loc 1 157 0
 185 0054 0022     		movs	r2, #0
 186 0056 1146     		mov	r1, r2
 187 0058 4FF0FF30 		mov	r0, #-1
 188 005c FFF7FEFF 		bl	HAL_NVIC_SetPriority
 189              	.LVL8:
ARM GAS  /tmp/ccNg6ei3.s 			page 8


 158:Src/main.c    **** 
 190              		.loc 1 158 0
 191 0060 11B0     		add	sp, sp, #68
 192              	.LCFI5:
 193              		.cfi_remember_state
 194              		.cfi_def_cfa_offset 4
 195              		@ sp needed
 196 0062 5DF804FB 		ldr	pc, [sp], #4
 197              	.L11:
 198              	.LCFI6:
 199              		.cfi_restore_state
 131:Src/main.c    ****   }
 200              		.loc 1 131 0
 201 0066 8321     		movs	r1, #131
 202 0068 0448     		ldr	r0, .L13+4
 203 006a FFF7FEFF 		bl	_Error_Handler
 204              	.LVL9:
 205              	.L12:
 145:Src/main.c    ****   }
 206              		.loc 1 145 0
 207 006e 9121     		movs	r1, #145
 208 0070 0248     		ldr	r0, .L13+4
 209 0072 FFF7FEFF 		bl	_Error_Handler
 210              	.LVL10:
 211              	.L14:
 212 0076 00BF     		.align	2
 213              	.L13:
 214 0078 D34D6210 		.word	274877907
 215 007c 00000000 		.word	.LC0
 216              		.cfi_endproc
 217              	.LFE124:
 219              		.section	.text.main,"ax",%progbits
 220              		.align	1
 221              		.global	main
 222              		.syntax unified
 223              		.thumb
 224              		.thumb_func
 225              		.fpu fpv4-sp-d16
 227              	main:
 228              	.LFB123:
  68:Src/main.c    **** 
 229              		.loc 1 68 0
 230              		.cfi_startproc
 231              		@ Volatile: function does not return.
 232              		@ args = 0, pretend = 0, frame = 0
 233              		@ frame_needed = 0, uses_anonymous_args = 0
 234 0000 08B5     		push	{r3, lr}
 235              	.LCFI7:
 236              		.cfi_def_cfa_offset 8
 237              		.cfi_offset 3, -8
 238              		.cfi_offset 14, -4
  77:Src/main.c    **** 
 239              		.loc 1 77 0
 240 0002 FFF7FEFF 		bl	HAL_Init
 241              	.LVL11:
  84:Src/main.c    **** 
 242              		.loc 1 84 0
ARM GAS  /tmp/ccNg6ei3.s 			page 9


 243 0006 FFF7FEFF 		bl	SystemClock_Config
 244              	.LVL12:
  91:Src/main.c    **** 
 245              		.loc 1 91 0
 246 000a FFF7FEFF 		bl	MX_GPIO_Init
 247              	.LVL13:
 248              	.L16:
 101:Src/main.c    ****     HAL_GPIO_WritePin(GPIOE, GPIO_PIN_11, GPIO_PIN_SET);
 249              		.loc 1 101 0 discriminator 1
 250 000e 084C     		ldr	r4, .L18
 251 0010 4FF48071 		mov	r1, #256
 252 0014 2046     		mov	r0, r4
 253 0016 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 254              	.LVL14:
 102:Src/main.c    ****     HAL_Delay(250);
 255              		.loc 1 102 0 discriminator 1
 256 001a 0122     		movs	r2, #1
 257 001c 4FF40061 		mov	r1, #2048
 258 0020 2046     		mov	r0, r4
 259 0022 FFF7FEFF 		bl	HAL_GPIO_WritePin
 260              	.LVL15:
 103:Src/main.c    ****   /* USER CODE END WHILE */
 261              		.loc 1 103 0 discriminator 1
 262 0026 FA20     		movs	r0, #250
 263 0028 FFF7FEFF 		bl	HAL_Delay
 264              	.LVL16:
 265 002c EFE7     		b	.L16
 266              	.L19:
 267 002e 00BF     		.align	2
 268              	.L18:
 269 0030 00100048 		.word	1207963648
 270              		.cfi_endproc
 271              	.LFE123:
 273              		.section	.text.assert_failed,"ax",%progbits
 274              		.align	1
 275              		.global	assert_failed
 276              		.syntax unified
 277              		.thumb
 278              		.thumb_func
 279              		.fpu fpv4-sp-d16
 281              	assert_failed:
 282              	.LFB127:
 198:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 199:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 200:Src/main.c    ****   while(1) 
 201:Src/main.c    ****   {
 202:Src/main.c    ****   }
 203:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */ 
 204:Src/main.c    **** }
 205:Src/main.c    **** 
 206:Src/main.c    **** #ifdef USE_FULL_ASSERT
 207:Src/main.c    **** 
 208:Src/main.c    **** /**
 209:Src/main.c    ****    * @brief Reports the name of the source file and the source line number
 210:Src/main.c    ****    * where the assert_param error has occurred.
 211:Src/main.c    ****    * @param file: pointer to the source file name
 212:Src/main.c    ****    * @param line: assert_param error line source number
ARM GAS  /tmp/ccNg6ei3.s 			page 10


 213:Src/main.c    ****    * @retval None
 214:Src/main.c    ****    */
 215:Src/main.c    **** void assert_failed(uint8_t* file, uint32_t line)
 216:Src/main.c    **** {
 283              		.loc 1 216 0
 284              		.cfi_startproc
 285              		@ args = 0, pretend = 0, frame = 0
 286              		@ frame_needed = 0, uses_anonymous_args = 0
 287              		@ link register save eliminated.
 288              	.LVL17:
 289 0000 7047     		bx	lr
 290              		.cfi_endproc
 291              	.LFE127:
 293              		.section	.rodata.SystemClock_Config.str1.4,"aMS",%progbits,1
 294              		.align	2
 295              	.LC0:
 296 0000 5372632F 		.ascii	"Src/main.c\000"
 296      6D61696E 
 296      2E6300
 297              		.text
 298              	.Letext0:
 299              		.file 2 "/home/saicharan/arm/arm-none-eabi/include/machine/_default_types.h"
 300              		.file 3 "/home/saicharan/arm/arm-none-eabi/include/stdint.h"
 301              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 302              		.file 5 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/system_stm32f3xx.h"
 303              		.file 6 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303xc.h"
 304              		.file 7 "/home/saicharan/arm/arm-none-eabi/include/sys/lock.h"
 305              		.file 8 "/home/saicharan/arm/arm-none-eabi/include/sys/_types.h"
 306              		.file 9 "/home/saicharan/arm/lib/gcc/arm-none-eabi/6.3.0/include/stddef.h"
 307              		.file 10 "/home/saicharan/arm/arm-none-eabi/include/sys/reent.h"
 308              		.file 11 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 309              		.file 12 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rcc.h"
 310              		.file 13 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_gpio.h"
 311              		.file 14 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_cortex.h"
 312              		.file 15 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal.h"
ARM GAS  /tmp/ccNg6ei3.s 			page 11


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccNg6ei3.s:18     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccNg6ei3.s:24     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccNg6ei3.s:82     .text.MX_GPIO_Init:0000000000000044 $d
     /tmp/ccNg6ei3.s:88     .text._Error_Handler:0000000000000000 $t
     /tmp/ccNg6ei3.s:95     .text._Error_Handler:0000000000000000 _Error_Handler
     /tmp/ccNg6ei3.s:110    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccNg6ei3.s:117    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccNg6ei3.s:214    .text.SystemClock_Config:0000000000000078 $d
     /tmp/ccNg6ei3.s:220    .text.main:0000000000000000 $t
     /tmp/ccNg6ei3.s:227    .text.main:0000000000000000 main
     /tmp/ccNg6ei3.s:269    .text.main:0000000000000030 $d
     /tmp/ccNg6ei3.s:274    .text.assert_failed:0000000000000000 $t
     /tmp/ccNg6ei3.s:281    .text.assert_failed:0000000000000000 assert_failed
     /tmp/ccNg6ei3.s:294    .rodata.SystemClock_Config.str1.4:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_NVIC_SetPriority
HAL_Init
HAL_GPIO_TogglePin
HAL_Delay
